{"version":3,"file":"static/js/ToDo.04a91988.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Pages/ToDoPage/ToDoPage.module.css?5b65","webpack://dev-tools/./src/Components/ToDoSections/ToDoSections.module.css?5cd8","Components/ToDoSections/ToDoSectionsProps.ts","Components/ToDoSections/DirItem/DirItemButtons/DirItemButtons.module.css","Components/ToDoSections/DirItem/DirItemButtons/DirItemButtons.tsx","Components/ToDoSections/DirItem/DirItem.tsx","Components/ToDoSections/helper.ts","webpack://dev-tools/./src/Components/DirModal/DirModal.module.css?c561","Components/DirModal/DirModal.tsx","Components/ToDoSections/ToDoSections.tsx","webpack://dev-tools/./src/Components/ToDoList/ToDoList.module.css?5dc9","webpack://dev-tools/./src/Components/ToDoList/ToDoListItem/ToDoListItem.module.css?1806","Components/ToDoList/ToDoListItem/ToDoListItem.tsx","webpack://dev-tools/./src/Components/TodoModal/TodoModal.module.css?f871","Components/TodoModal/TodoModal.tsx","Helpers/Todo.tsx","Components/ToDoList/ToDoList.tsx","Pages/ToDoPage/ToDoPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoPage_container__mTquY\",\"menuButton\":\"ToDoPage_menuButton__b4Zu+\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoSections_container__rNbLx\",\"hide\":\"ToDoSections_hide__lwkvc\",\"addSection\":\"ToDoSections_addSection__gVOpv\",\"drawer\":\"ToDoSections_drawer__cj3xR\"};","import { DrawerProps } from '@mui/material';\nimport { TodoItem } from '../../Pages/ToDoPage/Todo';\n\nexport interface ToDoSectionsProps {\n  [key: string]: any;\n  list: TodoItem[];\n  setSelectedDir: Function;\n  selectedDir: string;\n}\n\nexport const drawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'permanent',\n  sx: {\n    '& .MuiDrawer-paper': {\n      position: 'unset',\n    },\n  },\n};\nexport const mobileDrawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'temporary',\n  sx: {\n    '& .MuiDrawer-paper': {\n      padding: '25px',\n      width:'70%',\n      height: '100%',\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DirItemButtons_container__OyrDD\"};","import React, { useContext } from 'react';\nimport styles from './DirItemButtons.module.css';\nimport { DirItemButtonsProps } from './DirItemButtonsProps';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ModalContext } from '../../../ModalContext/ModalContext';\nexport const DirItemButtons = ({\n  setEdit,\n  edit,\n  openSureModal,\n}: DirItemButtonsProps) => {\n  const { handleModal } = useContext(ModalContext);\n  const openDeleteModal = () => {\n    handleModal(<p>Sure?</p>);\n  };\n  return (\n    <div className={styles.container}>\n      <IconButton onClick={() => setEdit(!edit)} edge=\"end\" aria-label=\"edit\">\n        <EditIcon />\n      </IconButton>\n      <IconButton onClick={openDeleteModal} edge=\"end\" aria-label=\"delete\">\n        <DeleteIcon />\n      </IconButton>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styles from './DirItem.module.css';\nimport { DirItemProps } from './DirItemProps';\nimport {\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n  useTheme,\n} from '@mui/material';\nimport { DirItemButtons } from './DirItemButtons';\n\nexport const DirItem = ({\n  title,\n  onItemClick,\n  selectedDir,\n  Icon,\n}: DirItemProps) => {\n  const theme = useTheme();\n  const [edit, setEdit] = useState(false);\n  const [modText, setModText] = useState(title);\n  return (\n    <ListItem\n      secondaryAction={\n        !Icon ? (\n          <DirItemButtons\n            setEdit={setEdit}\n            edit={edit}\n            dir={title}\n          />\n        ) : null\n      }\n      key={title}\n      disablePadding\n    >\n      <ListItemButton selected={selectedDir} onClick={() => onItemClick(title)}>\n        {Icon ? (\n          <>\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText primary={title} />\n          </>\n        ) : (\n          <TextField\n            sx={{\n              width: '100%',\n              '& .MuiInputBase-input.Mui-disabled': {\n                opacity: 1,\n                WebkitTextFillColor:\n                  theme.palette.mode === 'dark' ? 'white' : 'rgba(0, 0, 0, 1)',\n                border: 'none',\n              },\n              '& .MuiInputBase-root.Mui-disabled': {\n                border: 'none',\n                outline: 'none',\n              },\n              input: { textAlign: 'center' },\n            }}\n            InputProps={{\n              disableUnderline: !edit,\n            }}\n            variant=\"standard\"\n            disabled={!edit}\n            onBlur={() => setEdit(!edit)}\n            onChange={(e) => setModText(e.target.value)}\n            value={modText}\n          />\n        )}\n      </ListItemButton>\n    </ListItem>\n  );\n};\n","import TodayIcon from '@mui/icons-material/Today';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport SubjectIcon from '@mui/icons-material/Subject';\nimport GradingIcon from '@mui/icons-material/Grading';\nexport const defualtFolders = [\n  {\n    title: 'All',\n    icon: SubjectIcon,\n  },\n  {\n    title: 'today`s tasks',\n    icon: TodayIcon,\n  },\n  {\n    title: 'Favorites',\n    icon: FavoriteIcon,\n  },\n  {\n    title: 'Complited',\n    icon: GradingIcon,\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DirModal_container__sVDQo\",\"input\":\"DirModal_input__Vz+OI\",\"title\":\"DirModal_title__PLwTo\",\"buttonContainer\":\"DirModal_buttonContainer__jW-IW\",\"button\":\"DirModal_button__vZPHg\"};","import React, { useContext, useState } from 'react';\nimport styles from './DirModal.module.css';\nimport { DirModalProps } from './DirModalProps';\nimport { Text } from '../Text';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { Button } from '@mui/material';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\n\nexport const DirModal = ({ handleModal }: DirModalProps) => {\n  const { setDirs, dirs } = useContext(TodoContext);\n  const [title, setTitle] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const onSave = () => {\n    if (!title) return setError('Required Field');\n    if (dirs.includes(title)) return setError('Already exists');\n    setDirs((p: string[]) => [...p, title]);\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text className={styles.title} variant=\"h5\">\n        Add Directory\n      </Text>\n      <MultiLineInput\n        className={styles.input}\n        value={title}\n        error={!!error}\n        helperText={error}\n        label={'Title'}\n        onChange={setTitle}\n      />\n      <div className={styles.buttonContainer}>\n        <Button onClick={onSave} variant=\"contained\" className={styles.button}>\n          save\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport styles from './ToDoSections.module.css';\nimport { drawerProps, mobileDrawerProps } from './ToDoSectionsProps';\nimport {\n  Button,\n  Collapse,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport { DirItem } from './DirItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport { defualtFolders } from './helper';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { DirModal } from '../DirModal';\nimport { UserContext } from '../../Context/UserContext';\nimport { Text } from '../Text';\nimport { DirItemButtons } from './DirItem/DirItemButtons';\nexport const ToDoSections = ({\n  isSmallScreen,\n  setMobileOpen,\n  mobileOpen,\n}: any) => {\n  const props = isSmallScreen ? mobileDrawerProps : drawerProps;\n  const { selectedDir, dirs, setSelectedDir } = useContext(TodoContext);\n  const { handleModal } = useContext(ModalContext);\n  const { user } = useContext(UserContext);\n  const [open, setOpen] = React.useState(true);\n  const onItemClick = (dir: string) => {\n    setSelectedDir(dir);\n  };\n\n  const openSaveModal = () => {\n    handleModal(<DirModal />);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Drawer\n        onClose={() => setMobileOpen(!mobileOpen)}\n        open={mobileOpen}\n        className={styles.drawer}\n        {...props}\n      >\n        <Text\n          style={{\n            alignSelf: 'center',\n            textAlign: 'center',\n            padding: '25px 0 25px',\n            width: '90%',\n          }}\n          variant=\"subtitle2\"\n          textOverflow=\"clip\"\n        >\n          {!user?.email\n            ? 'Log In with your Google Account to save your progress'\n            : `Logged in as ${user?.email}`}\n        </Text>\n        <Button\n          variant=\"contained\"\n          className={styles.addSection}\n          onClick={openSaveModal}\n        >\n          Add Directory +\n        </Button>\n        <List>\n          {defualtFolders.map((dir) => (\n            <DirItem\n              Icon={dir.icon}\n              selectedDir={selectedDir === dir.title}\n              onItemClick={() => onItemClick(dir.title)}\n              key={dir.title}\n              title={dir.title}\n            />\n          ))}\n          <ListItemButton onClick={() => setOpen(!open)}>\n            <ListItemIcon>\n              <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Directories\" />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItemButton>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {dirs.map((dir) => (\n              <DirItem\n                selectedDir={selectedDir === dir}\n                onItemClick={() => onItemClick(dir)}\n                key={dir}\n                title={dir}\n              />\n            ))}\n          </Collapse>\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoList_container__WvZ-g\",\"grid\":\"ToDoList_grid__pjiVL\",\"emptyList\":\"ToDoList_emptyList__zBu16\",\"addNote\":\"ToDoList_addNote__lZ3eL\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoListItem_container__Fy8jG\",\"dirTag\":\"ToDoListItem_dirTag__BWYUN\",\"dateText\":\"ToDoListItem_dateText__Gibgs\",\"title\":\"ToDoListItem_title__c-JFL\",\"desc\":\"ToDoListItem_desc__sBct-\",\"subContainer\":\"ToDoListItem_subContainer__cy54m\",\"content\":\"ToDoListItem_content__DnZ47\",\"bottom\":\"ToDoListItem_bottom__aR41l\",\"bottomButtons\":\"ToDoListItem_bottomButtons__gIpmi\",\"date\":\"ToDoListItem_date__MyGOE\"};","import React from 'react';\nimport styles from './ToDoListItem.module.css';\nimport { ToDoListItemProps } from './ToDoListItemProps';\nimport { Box, Card, Paper } from '@mui/material';\nimport { Text } from '../../Text';\nimport ScheduleIcon from '@mui/icons-material/Schedule';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { CIconButton } from '../../CIconButton';\n\nexport const ToDoListItem = ({\n  item,\n  onItemClick,\n  onComplete,\n  onFavorite,\n  onDelete,\n}: ToDoListItemProps) => {\n  const onItemPresssed = (func: Function) => (e: Event) => {\n    e.stopPropagation();\n    func(item.id);\n  };\n\n  return (\n    <Paper className={styles.container} onClick={onItemClick}>\n      <div className={styles.dirTag}> {item.dir}</div>\n      <div className={styles.subContainer}>\n        <div className={styles.content}>\n          <Text variant=\"h6\" className={styles.title}>\n            {item.title}\n          </Text>\n          <Text variant=\"body2\" className={styles.desc}>\n            {item.desc}\n          </Text>\n        </div>\n        <div className={styles.date}>\n          <Text className={styles.dateText}>{item.date}</Text>\n          <ScheduleIcon />\n        </div>\n        <div className={styles.bottom}>\n          <div className={styles.bottomButtons}>\n            <CIconButton\n              title={'Favorite'}\n              onClick={onItemPresssed(onFavorite)}\n            >\n              <FavoriteBorderIcon\n                htmlColor={item.favorite ? 'red' : undefined}\n              />\n            </CIconButton>\n            <CIconButton\n              title={item.completed ? 'Done' : 'InProgress'}\n              onClick={onItemPresssed(onComplete)}\n            >\n              <TaskAltIcon htmlColor={item.completed ? 'green' : 'orange'} />\n            </CIconButton>\n            <CIconButton title={'Delete'} onClick={onItemPresssed(onDelete)}>\n              <DeleteOutlineIcon />\n            </CIconButton>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TodoModal_container__xSmmQ\",\"bottomContainer\":\"TodoModal_bottomContainer__8zjGV\",\"label\":\"TodoModal_label__2pqOA\",\"button\":\"TodoModal_button__6Rv4X\",\"titleInput\":\"TodoModal_titleInput__lOl0g\",\"content\":\"TodoModal_content__bXfoP\",\"descInput\":\"TodoModal_descInput__Mo6Yd\",\"datePicker\":\"TodoModal_datePicker__Tyxuz\",\"dropDown\":\"TodoModal_dropDown__D2adS\"};","import React, { useContext, useMemo, useState } from 'react';\nimport styles from './TodoModal.module.css';\nimport { TodoModalProps } from './TodoModalProps';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { Button, InputLabel, MenuItem, Select } from '@mui/material';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport dayjs from 'dayjs';\n\nexport const TodoModal = ({ item, handleModal }: TodoModalProps) => {\n  const { addTodo, dirs, selectedDir } = useContext(TodoContext);\n  const [formValues, setFormValues] = useState({\n    title: item?.title ?? '',\n    desc: item?.desc ?? '',\n    dir: item?.dir ?? selectedDir,\n    date: item?.date ? item.date : dayjs().format('YYYY-MM-DD'),\n  });\n  const [formErrors, setFormErrors] = useState({\n    title: '',\n    dir: '',\n  });\n  const { title, desc, dir, date } = formValues;\n  const onChange = (val: any, key: string) => {\n    setFormValues({ ...formValues, [key]: val });\n  };\n  const validateForm = () => {\n    if (\n      !formValues.dir ||\n      formValues.dir === 'All' ||\n      formValues.dir === 'today`s tasks'\n    ) {\n      setFormErrors({ ...formErrors, ['dir']: 'Requird Field' });\n      return false;\n    }\n\n    if (!formValues.title) {\n      setFormErrors({ ...formErrors, ['title']: 'Requird Field' });\n      return false;\n    }\n    return true;\n  };\n  const onclick = (e: any) => {\n    if (validateForm()) {\n      addTodo({ ...item, ...formValues });\n      handleModal();\n    }\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <MultiLineInput\n          value={title}\n          required={true}\n          error={!!formErrors.title}\n          helperText={formErrors.title}\n          maxRows={1}\n          label=\"Title\"\n          onChange={(val) => onChange(val, 'title')}\n          className={styles.titleInput}\n        />\n        <div className={styles.bottomContainer}>\n          <InputLabel className={styles.label}>Task Date</InputLabel>\n          <DatePicker\n            value={dayjs(date)}\n            onChange={(a) => onChange(dayjs(a).format('YYYY-MM-DD'), 'date')}\n            className={styles.datePicker}\n          />\n          <InputLabel className={styles.label}>Select Directory *</InputLabel>\n          <Select\n            required={true}\n            error={!!formErrors.dir}\n            value={dir}\n            onChange={(e) => {\n              onChange(e.target.value, 'dir');\n            }}\n            className={styles.dropDown}\n          >\n            {dirs.map((item: string) => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n        <MultiLineInput\n          value={desc}\n          minRows={3}\n          label=\"Description\"\n          maxRows={8}\n          onChange={(val) => onChange(val, 'desc')}\n          className={styles.descInput}\n        />\n      </div>\n      <Button onClick={onclick} className={styles.button} variant=\"contained\">\n        {item ? 'save' : 'Update'}\n      </Button>\n    </div>\n  );\n};\n","import dayjs from 'dayjs';\nimport { TodoItem } from '../Pages/ToDoPage/Todo';\n\nexport const getFilterFunction = (dir: string, list: TodoItem[]) => {\n  let index: number = defualtFolders.findIndex((l) => l.title === dir);\n  if (index === -1) return list.filter((l) => l.dir === dir);\n  return list.filter(defualtFolders[index].filterBy);\n};\n\nconst defualtFolders = [\n  {\n    title: 'All',\n    filterBy: (a: any) => true,\n  },\n  {\n    title: 'today`s tasks',\n    filterBy: (a: any) => a.date === dayjs().format('YYYY-MM-DD'),\n  },\n  {\n    title: 'Favorites',\n    filterBy: (a: any) => a.favorite === true,\n  },\n  {\n    title: 'Complited',\n    filterBy: (a: any) => a.completed === true,\n  },\n];\n\nexport const emptyList: Record<string, string> = {\n  Complited: '<strong>No completed tasks yet.</strong>\\n  Start completing tasks to see them here!',\n  Favorites: '<strong>No favorite tasks yet.</strong>\\n Add tasks to your favorites to see them here!',\n  All: '<strong>No tasks found.</strong>\\n Add tasks to see them here!',\n};\n","import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport styles from './ToDoList.module.css';\nimport { ToDoListProps } from './ToDoListProps';\nimport { ToDoListItem } from './ToDoListItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { TodoModal } from '../TodoModal';\nimport { emptyList, getFilterFunction } from '../../Helpers/Todo';\nimport { Text } from '../Text';\n\nexport const ToDoList = () => {\n  const { list, onDelete, onFavorite, onComplete, selectedDir } =\n    useContext(TodoContext);\n    const arrayList = list ? Object.values(list) : [];\n\n  const { handleModal } = useContext(ModalContext);\n  const todoList = useMemo(() => {\n    return getFilterFunction(selectedDir, arrayList);\n  }, [selectedDir, list]);\n\n  const onItemClick = useCallback(\n    (id: string) => {\n      const item = arrayList.filter((i) => i.id === id)[0];\n      handleModal(<TodoModal item={item} />);\n    },\n    [list, handleModal]\n  );\n  const hideAddButton = ['Favorites', 'Complited',\"All\"];\n  const Empty = () => {\n    if (hideAddButton.includes(selectedDir) && todoList.length === 0) {\n      return (\n        <div className={styles.emptyList}>\n          <Text\n            style={{ whiteSpace: 'pre-line' }}\n            dangerouslySetInnerHTML={{\n              __html: emptyList[selectedDir as keyof object],\n            }}\n          />\n        </div>\n      );\n    } else if (hideAddButton.includes(selectedDir)) {\n      return null;\n    }\n    return (\n      <div className={styles.addNote} onClick={() => onItemClick('-1')}>\n        <Text> Add Task +</Text>\n      </div>\n    );\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.grid}>\n        {todoList.map((item) => (\n          <ToDoListItem\n            key={item.id}\n            onItemClick={() => onItemClick(item.id)}\n            onComplete={onComplete}\n            onFavorite={onFavorite}\n            onDelete={onDelete}\n            item={item}\n          />\n        ))}\n\n        <Empty />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styles from './ToDoPage.module.css';\nimport { ToDoSections } from '../../Components/ToDoSections';\nimport { ToDoList } from '../../Components/ToDoList';\nimport { Fab, useMediaQuery } from '@mui/material';\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen';\n\nconst ToDoPage = () => {\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n  const [mobileOpen, setMobileOpen] = useState<boolean>(!isSmallScreen);\n  return (\n    <div className={styles.container}>\n      {isSmallScreen && (\n        <Fab\n          className={styles.menuButton}\n          onClick={() => setMobileOpen(!mobileOpen)}\n        >\n          <MenuOpenIcon />\n        </Fab>\n      )}\n      <ToDoSections\n        mobileOpen={mobileOpen}\n        setMobileOpen={setMobileOpen}\n        isSmallScreen={isSmallScreen}\n      />\n      <ToDoList />\n    </div>\n  );\n};\nexport default ToDoPage;\n"],"names":["drawerProps","anchor","variant","sx","position","mobileDrawerProps","padding","width","height","DirItemButtons","_ref","setEdit","edit","handleModal","openSureModal","useContext","ModalContext","_jsxs","className","styles","children","_jsx","IconButton","onClick","edge","EditIcon","DeleteIcon","DirItem","title","onItemClick","selectedDir","Icon","theme","useTheme","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","modText","setModText","ListItem","secondaryAction","dir","disablePadding","ListItemButton","selected","_Fragment","ListItemIcon","ListItemText","primary","TextField","opacity","WebkitTextFillColor","palette","mode","border","outline","input","textAlign","InputProps","disableUnderline","disabled","onBlur","onChange","e","target","value","defualtFolders","icon","SubjectIcon","TodayIcon","FavoriteIcon","GradingIcon","DirModal","_useContext","TodoContext","setDirs","dirs","setTitle","error","setError","Text","MultiLineInput","helperText","label","Button","includes","p","concat","_toConsumableArray","ToDoSections","isSmallScreen","setMobileOpen","mobileOpen","props","setSelectedDir","user","UserContext","_React$useState","React","_React$useState2","open","setOpen","Drawer","_objectSpread","onClose","style","alignSelf","textOverflow","email","List","map","FolderIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","ToDoListItem","item","onComplete","onFavorite","onDelete","onItemPresssed","func","stopPropagation","id","Paper","desc","date","ScheduleIcon","CIconButton","FavoriteBorderIcon","htmlColor","favorite","undefined","completed","TaskAltIcon","DeleteOutlineIcon","TodoModal","_item$title","_item$desc","_item$dir","addTodo","dayjs","format","formValues","setFormValues","formErrors","setFormErrors","val","key","_defineProperty","required","maxRows","InputLabel","DatePicker","a","Select","MenuItem","minRows","filterBy","emptyList","Complited","Favorites","All","ToDoList","list","arrayList","Object","values","todoList","useMemo","index","findIndex","l","filter","getFilterFunction","useCallback","i","hideAddButton","Empty","length","whiteSpace","dangerouslySetInnerHTML","__html","useMediaQuery","Fab","MenuOpenIcon"],"sourceRoot":""}