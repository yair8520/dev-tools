{"version":3,"file":"static/js/formatter.6556b64d.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?0789","Components/DiffChecker/InputButtons/InputButtons.tsx","Constant/Types.ts","Constant/DropDown.ts","Helpers/Clipboard.ts","Constant/FirbaseMessages.ts","Helpers/FireBase/Api.ts","Helpers/Json.ts","Helpers/Scroll.ts","Helpers/Url.ts","webpack://dev-tools/./src/Pages/Formatter/Formatter.module.css?feee","Components/DropZone/DropZone.tsx","webpack://dev-tools/./src/Components/FetchModal/FetchModal.module.css?b24b","Components/FetchModal/FetchModal.tsx","Hooks/useFetch/useFetch.ts","webpack://dev-tools/./src/Pages/Formatter/FormatterBody/FormatterBody.module.css?94f3","Hooks/useLocalStorage/useLocalStorage.ts","Pages/Formatter/FormatterBody/FormatterBody.tsx","webpack://dev-tools/./src/Components/JsonTree/JsonTree.module.css?b7cb","Constant/CheckBox.ts","Components/CheckBox/CheckBox.tsx","Components/JsonTree/JsonTree.tsx","webpack://dev-tools/./src/Pages/Formatter/ResContainer/ResContainer.module.css?4d28","Pages/Formatter/ResContainer/ResContainer.tsx","Pages/Formatter/FormatterProps.ts","webpack://dev-tools/./src/Components/HistoryModal/HistoryModal.module.css?2439","Components/HistoryModal/HistoryModal.tsx","Pages/Formatter/Formatter.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__bHQ8e\"};","import React from 'react';\nimport styles from './InputButtons.module.css';\nimport { InputButtonsProps } from './InputButtonsProps';\nimport { IconButton, InputAdornment } from '@mui/material';\nimport {\n  Description,\n  CallReceivedSharp,\n  CallMadeSharp,\n} from '@material-ui/icons';\nimport {\n  handleCopy,\n  handleFile,\n  handlePaste,\n} from '../../../Helpers/Clipboard';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { CIconButton } from '../../CIconButton';\nexport const InputButtons = ({\n  onChange,\n  value,\n  type,\n  withFile = true,\n}: InputButtonsProps) => {\n  return (\n    <InputAdornment className={styles.container} position=\"end\">\n      <CIconButton\n        placement=\"right\"\n        title={'Copy'}\n        onClick={() => handleCopy(value)}\n      >\n        <CallMadeSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"left\"\n        title={'Paste'}\n        onClick={() => handlePaste(onChange)}\n      >\n        <CallReceivedSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"right\"\n        title={'Delete'}\n        onClick={() => onChange('')}\n      >\n        <DeleteIcon />\n      </CIconButton>\n      {withFile && (\n        <IconButton onClick={() => {}}>\n          <input\n            type=\"file\"\n            accept=\".txt,.json\"\n            id={`fileInput${type}`}\n            onChange={(e) => handleFile(e, onChange)}\n            style={{ display: 'none' }}\n          />\n          <label htmlFor={`fileInput${type}`}>\n            <Description />\n          </label>\n        </IconButton>\n      )}\n    </InputAdornment>\n  );\n};\n","export type IJsonSpace = {\n  label: string;\n  value: number;\n};\nexport type ICheckBox = {\n  id: number;\n  label: string;\n  state: boolean;\n};\nexport type IFlexOptions = {\n  type: string;\n  options?: any;\n  range?: boolean;\n};\nexport const alignSelfs = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'space-between',\n  'space-around',\n  'stretch',\n  'auto',\n] as const;\nexport const flexDirections = [\n  'row',\n  'column',\n  'row-reverse',\n  'column-reverse',\n] as const;\nexport const flexWraps = ['nowrap', 'wrap', 'wrap-reverse'] as const;\nexport const justifyContentValues = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'space-between',\n  'space-around',\n] as const;\nexport const alignItemsValues = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'baseline',\n  'stretch',\n] as const;\nexport const alignContentValues = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'space-between',\n  'space-around',\n  'stretch',\n] as const;\nexport const flexBasis = [\n  'auto',\n  'content',\n  'fit-content',\n  'max-content',\n  'min-content',\n  'none',\n  'initial',\n  'inherit',\n] as const;\n","import {\n  alignContentValues,\n  alignItemsValues,\n  alignSelfs,\n  flexBasis,\n  flexDirections,\n  flexWraps,\n  IFlexOptions,\n  IJsonSpace,\n  justifyContentValues,\n} from './Types';\n\nexport const jsonSpace: IJsonSpace[] = [\n  {\n    label: '4 Space Tab',\n    value: 4,\n  },\n  {\n    label: '3 Space Tab',\n    value: 3,\n  },\n  {\n    label: '2 Space Tab',\n    value: 2,\n  },\n  {\n    label: '1 Space Tab',\n    value: 1,\n  },\n];\nexport const flexOptions: IFlexOptions[] = [\n  {\n    options: flexDirections,\n    type: 'flexDirection',\n  },\n  {\n    options: justifyContentValues,\n    type: 'justifyContent',\n  },\n  {\n    options: alignItemsValues,\n    type: 'alignItems',\n  },\n  {\n    options: alignContentValues,\n    type: 'alignContent',\n  },\n  {\n    options: flexWraps,\n    type: 'flexWrap',\n  },\n];\nexport type Mutable<Type> = {\n  -readonly [Key in keyof Type]: Type[Key];\n};\nexport const flexItemOptions: IFlexOptions[] = [\n  {\n    type: 'order',\n    range: true,\n  },\n  {\n    type: 'flexGrow',\n    range: true,\n  },\n  {\n    type: 'flexShrink',\n    range: true,\n  },\n  {\n    type: 'flexBasis',\n    options: flexBasis,\n  },\n  {\n    type: 'alignSelf',\n    options: alignSelfs,\n  },\n];\n\nexport const jsonExample = {\n  store: {\n    book: [\n      {\n        category: 'reference',\n        author: 'Nigel Rees',\n        title: 'Sayings of the Century',\n        price: 8.95,\n      },\n      {\n        category: 'fiction',\n        author: 'Evelyn Waugh',\n        title: 'Sword of Honour',\n        price: 12.99,\n      },\n      {\n        category: 'fiction',\n        author: 'J. R. R. Tolkien',\n        title: 'The Lord of the Rings',\n        isbn: '0-395-19395-8',\n        price: 22.99,\n      },\n    ],\n    bicycle: { color: 'red', price: 19.95 },\n  },\n};\n\nexport const methods = ['GET', 'POST', 'PUT', 'DELETE'];\n","export const handlePaste = (setValue: (t: string) => void) => {\n  navigator.clipboard.readText().then((text) => setValue(text));\n};\nexport const handleCopy = (t: string) => {\n  navigator.clipboard\n    .writeText(t)\n    .then(() => {\n      console.log('Text copied to clipboard');\n    })\n    .catch((err) => {\n      console.error('Error copying text to clipboard:', err);\n    });\n};\nexport const handleFile = (\n  e: { target: { files: any } },\n  onChange: (t: any) => void\n) => {\n  const file = e.target.files?.[0];\n\n  if (file.type === 'application/json' || file.type === 'text/plain') {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result;\n      onChange(content);\n    };\n    reader.readAsText(file);\n  } else {\n    alert('Invalid file type. Only JSON and TXT files are supported.');\n    return;\n  }\n};\n","export const apiMessages: { [key: string]: string } = {\r\n    addTab: \"Tab added successfully\",\r\n    removeTab: \"Tab removed successfully\",\r\n    deleteCollection: \"Collection deleted successfully\",\r\n};\r\n","import 'firebase/compat/auth';\r\nimport firebase from 'firebase/compat/app';\r\nimport { auth, db } from '../../Config/Firebase';\r\nimport { ITab, apiTabs } from '../../Constant/Mock';\r\nimport { toast } from 'react-toastify';\r\nimport { apiMessages } from '../../Constant/FirbaseMessages';\r\n\r\nexport const removeUnUsedVars = (tab: ITab) => {\r\n    tab.res.response = null;\r\n    tab.res.error = null;\r\n    tab.res.errorMessage = null;\r\n    tab.res.size = null;\r\n    tab.res.time = null;\r\n    return tab;\r\n};\r\n\r\nconst firebaseMiddleware = (\r\n    message: string,\r\n    callback: (\r\n        userRef: firebase.firestore.DocumentReference<firebase.firestore.DocumentData>\r\n    ) => Promise<any>\r\n) => {\r\n    if (!auth.currentUser) {\r\n        toast.error('Please logged in order to save your work.')\r\n        return;\r\n    }\r\n    const userRef = db.collection('users').doc(auth.currentUser!.email!);\r\n    callback(userRef)\r\n        .then(() => toast.success(apiMessages[message]))\r\n        .catch(() => toast.error('Operation failed'));\r\n};\r\n\r\nexport const deleteTabByCollection = (collection: string) => {\r\n    firebaseMiddleware(\"deleteCollection\", async (userRef) => {\r\n        const doc = await userRef.get();\r\n        if (doc.exists) {\r\n            const apiData = doc.data()?.api || {};\r\n            const deletePromises: Promise<void>[] = [];\r\n            Object.entries(apiData).forEach(([key, tab]: any) => {\r\n                if (tab.collection === collection) {\r\n                    deletePromises.push(userRef.update({\r\n                        [`api.${key}`]: firebase.firestore.FieldValue.delete()\r\n                    }));\r\n                }\r\n            });\r\n            return Promise.all(deletePromises);\r\n        }\r\n    });\r\n};\r\nexport const saveTab = (tabId: string, tab: ITab) => {\r\n    firebaseMiddleware(\"addTab\", (userRef) => {\r\n        const updateData = {\r\n            [`api`]: {\r\n                [`${tabId}`]: { ...removeUnUsedVars(tab) },\r\n            },\r\n        };\r\n        return userRef.set(updateData, { merge: true });\r\n    });\r\n};\r\nexport const deleteTabFB = (tabId: string) => {\r\n    firebaseMiddleware(\"removeTab\", (userRef) => {\r\n        const updateData = {\r\n            [`api.${tabId}`]: firebase.firestore.FieldValue.delete(),\r\n        };\r\n        return userRef.update(updateData);\r\n    });\r\n};\r\n\r\nexport const getAllTabs = (email: string) => {\r\n    return new Promise((resolve, reject) => {\r\n        const userRef = db.collection('users').doc(email);\r\n        userRef\r\n            .get()\r\n            .then((doc: any) => {\r\n                if (doc.exists) {\r\n                    resolve(doc.data()?.api ?? {});\r\n                } else {\r\n                    userRef.set({ sections: {} }).then(() => resolve({}));\r\n                }\r\n            })\r\n            .catch(reject);\r\n    });\r\n};\r\n","import { AxiosHeaders } from 'axios';\nimport { IHooksDescription } from '../Constant/Hooks';\nimport { IApiTabs, IParams, ITab } from '../Constant/Mock';\nimport { removeUnUsedVars } from './FireBase/Api';\n\nexport function prettifyJSON(jsonStr: string | any[]) {\n  if (!jsonStr || typeof jsonStr !== 'string') {\n    return 'Invalid JSON';\n  }\n\n  let prettyJson = '';\n  let indentLevel = 0;\n  let inString = false;\n\n  for (let i = 0; i < jsonStr.length; i++) {\n    const char = jsonStr[i];\n\n    if (inString) {\n      prettyJson += char;\n      if (char === '\"' && jsonStr[i - 1] !== '\\\\') {\n        inString = false;\n      }\n      continue;\n    }\n\n    switch (char) {\n      case '{':\n      case '[':\n        prettyJson += char + '\\n' + ' '.repeat((indentLevel + 1) * 2);\n        indentLevel++;\n        break;\n\n      case '}':\n      case ']':\n        indentLevel = Math.max(0, indentLevel - 1);\n        prettyJson += '\\n' + ' '.repeat(indentLevel * 2) + char;\n        break;\n\n      case ':':\n        prettyJson += char + ' ';\n        break;\n\n      case ',':\n        prettyJson += char + '\\n' + ' '.repeat(indentLevel * 2);\n        break;\n\n      case '\"':\n        prettyJson += char;\n        inString = true;\n        break;\n\n      default:\n        prettyJson += char;\n        break;\n    }\n  }\n\n  return prettyJson;\n}\nexport function generateInterfaceFromJson(json: string): string {\n  const parsedJson = JSON.parse(json);\n  const rootInterfaceName = 'Root';\n\n  function getInterfaceFromObject(obj: any, name: string): string {\n    const keys = Object.keys(obj);\n    let interfaceString = `interface ${name} {\\n`;\n\n    keys.forEach((key) => {\n      const value = obj[key];\n      if (Array.isArray(value)) {\n        const arrayInterfaceName = `${name}_${key}_Item`;\n        interfaceString += `  ${key}: ${arrayInterfaceName}[];\\n`;\n        interfaceString += getInterfaceFromObject(value[0], arrayInterfaceName);\n      } else if (typeof value === 'object') {\n        const objectInterfaceName = `${key}`;\n        interfaceString += `  ${key}: ${objectInterfaceName};\\n`;\n        interfaceString += getInterfaceFromObject(value, objectInterfaceName);\n      } else {\n        interfaceString += `  ${key}: ${typeof value};\\n`;\n      }\n    });\n\n    interfaceString += '}\\n';\n    return interfaceString;\n  }\n\n  const interfaceString = getInterfaceFromObject(parsedJson, rootInterfaceName);\n  return interfaceString;\n}\nexport const extractTitles = (array: IHooksDescription[]) => {\n  return array.map((item, i) => item.title);\n};\nexport const getFirstId = (array: IApiTabs) => {\n  return array[Object.keys(array)[0]];\n};\n\nexport const objectToPairs = (obj: IParams): AxiosHeaders => {\n  return Object.fromEntries(\n    Object.entries(obj)\n      .filter(([key, value]) => value.value !== \"\" && (value.checked === undefined || value.checked)) // Exclude pairs with empty values or checked set to false\n      .map(([key, value]) => [value.key, value.value])\n  ) as AxiosHeaders;\n};\nexport function countCheckedItems(params: IParams): number {\n  let count = 0;\n  for (const key in params) {\n    if (params.hasOwnProperty(key) && params[key].checked) {\n      count++;\n    }\n  }\n  return count;\n}\nexport function findTabByCollection(apiTabs: IApiTabs, collection: string): string | undefined {\n  for (const key in apiTabs) {\n    if (apiTabs.hasOwnProperty(key) && apiTabs[key].collection === collection) {\n      return apiTabs[key].id;\n    }\n  }\n  return undefined;\n}\nexport const changesAccrued = (prev: ITab, next: ITab) => {\n  return JSON.stringify(removeUnUsedVars(prev)) !==\n    JSON.stringify(removeUnUsedVars(next))\n}","import { IScrollTo } from './Types';\nimport './scrollCss.css';\nexport const scrollTo = ({\n  id,\n  behavior = 'smooth',\n  block = 'start',\n  withHighlight = false,\n}: IScrollTo) => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.scrollIntoView({ behavior, block });\n    if (withHighlight) {\n      element.classList.add('custom-highlighted-class');\n      setTimeout(() => {\n        element && element.classList.remove('custom-highlighted-class');\n      }, 3000);\n    }\n  } else {\n  }\n};\n","import { IParams } from '../Constant/Mock';\n\nexport const isUrlValid = (url: string) => {\n  try {\n    new URL(url);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\nexport function addParamsToURL(url: string, params: IParams) {\n  const [baseUrl] = url.split('?');\n  const queryString = Object.keys(params)\n    .filter((key) => key !== '' && params[key].key !== '' && params[key].checked)\n    .map(\n      (key) =>\n        `${encodeURIComponent(params[key].key)}=${encodeURIComponent(\n          params[key].value\n        )}`\n    )\n    .join('&');\n\n  const updatedURL = queryString ? `${baseUrl}?${queryString}` : baseUrl;\n\n  return updatedURL;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Formatter_container__UUNvv\",\"separator\":\"Formatter_separator__E4tkG\",\"headline\":\"Formatter_headline__BQExT\",\"title\":\"Formatter_title__ibMOf\",\"history\":\"Formatter_history__QSDoZ\"};","import React, { useContext } from 'react';\nimport './DropZone.css';\nimport { DropZoneProps } from './DropZoneProps';\nimport { Text } from '../Text';\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\n\nexport const DropZone = ({\n  onChange,\n  fileName,\n  setFileName,\n}: DropZoneProps) => {\n  const { isDark } = useContext(AppContext);\n\n  const handleDragOver = (e: {\n    preventDefault: () => void;\n    stopPropagation: () => void;\n  }) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: {\n    preventDefault: () => void;\n    dataTransfer: { files: any };\n  }) => {\n    e.preventDefault();\n\n    const file = e.dataTransfer.files[0];\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\n      setFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result;\n        onChange(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Invalid file type. Only JSON and TXT files are supported.');\n    }\n  };\n\n  const handleFileChange = (e: { target: { files: any } }) => {\n    const file = e.target.files[0];\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\n      setFileName(file.name);\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result;\n        onChange(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Invalid file type. Only JSON and TXT files are supported.');\n    }\n  };\n\n  return (\n    <form id=\"form-file-upload\">\n      <label\n        id={isDark ? 'dark-label-file-upload' : 'label-file-upload'}\n        htmlFor=\"input-file-upload\"\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      >\n        {!fileName ? (\n          <div>\n            <Text>Drag and drop your file here or click for file explorer</Text>\n          </div>\n        ) : (\n          <Text>{fileName}</Text>\n        )}\n      </label>\n      <input\n        accept=\".txt,.json\"\n        type=\"file\"\n        id=\"input-file-upload\"\n        onChange={handleFileChange}\n      />\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FetchModal_container__ZpWVl\",\"input\":\"FetchModal_input__HIplP\",\"button\":\"FetchModal_button__bFnxj\",\"buttonContainer\":\"FetchModal_buttonContainer__yq6v0\"};","import {\n  Button,\n  CircularProgress,\n  IconButton,\n  InputAdornment,\n  TextField,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport styles from './FetchModal.module.css';\nimport { FetchModalProps } from './FetchModalProps';\nimport { FileCopy } from '@material-ui/icons';\nimport { useFetch } from '../../Hooks/useFetch/';\nimport { handlePaste } from '../../Helpers/Clipboard';\nexport const FetchModal = ({ onChange, handleModal }: FetchModalProps) => {\n  const [value, setValue] = useState<string>(\n    'https://jsonplaceholder.typicode.com/todos'\n  );\n  const { error, isLoading, fetchData, setError } = useFetch();\n\n  const loadData = () => {\n    setError('');\n    fetchData({ url: value }).then((data: any) => {\n      onChange(JSON.stringify(data, null, 5));\n      handleModal();\n    });\n  };\n  const handleChange = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setValue(e.target.value);\n  };\n  return (\n    <div className={styles.container}>\n      <TextField\n        label=\"Url\"\n        error={!!error}\n        helperText={error}\n        variant=\"outlined\"\n        value={value}\n        onChange={handleChange}\n        className={styles.input}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton onClick={() => handlePaste(setValue)}>\n                <FileCopy />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={styles.buttonContainer}>\n        <Button\n          disabled={!value}\n          onClick={loadData}\n          className={styles.button}\n          variant=\"contained\"\n        >\n          {isLoading ? (\n            <CircularProgress\n              style={{ color: 'white' }}\n              color=\"success\"\n              size={24}\n            />\n          ) : (\n            'Load'\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { isUrlValid } from '../../Helpers/Url';\nimport { FetchProps, FetchState } from './useFetchProps';\n\nexport const useFetch = (): FetchState => {\n  const [error, setError] = useState<string>('');\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const fetchData = ({ url }: FetchProps): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      if (!isUrlValid(url)) {\n        setError('Invalid Url');\n        return;\n      }\n      setLoading(true);\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          resolve(data);\n        })\n        .catch((error) => {\n          setError(error.message);\n        })\n        .finally(() => setLoading(false));\n    });\n  };\n\n  return {\n    error,\n    isLoading,\n    setError,\n    fetchData,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputs\":\"FormatterBody_inputs__kSx31\",\"buttonContainer\":\"FormatterBody_buttonContainer__APwnB\",\"subContainer\":\"FormatterBody_subContainer__6niOa\",\"input\":\"FormatterBody_input__gC1XE\",\"info\":\"FormatterBody_info__8Jdbz\",\"button\":\"FormatterBody_button__lPsgV\",\"reset\":\"FormatterBody_reset__BJSYp\",\"checkBox\":\"FormatterBody_checkBox__hzxCZ\"};","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = <T extends unknown>(\n  key: string,\n  initialValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const [value, setValue] = useState<T>(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue !== null ? JSON.parse(storedValue) : initialValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Button } from '@mui/material';\nimport React, { useContext, useState, useRef } from 'react';\nimport { MultiLineInput } from '../../../Components';\nimport { DropZone } from '../../../Components/DropZone';\nimport { FetchModal } from '../../../Components/FetchModal';\nimport { ModalContext } from '../../../Components/ModalContext/ModalContext';\nimport { jsonExample } from '../../../Constant/DropDown';\nimport { prettifyJSON } from '../../../Helpers/Json';\nimport styles from './FormatterBody.module.css';\nimport { FormatterBodyProps } from './FormatterBodyProps';\nimport { InputButtons } from '../../../Components/DiffChecker/InputButtons';\nimport { useLocalStorage } from '../../../Hooks/useLocalStorage';\n\nexport const FormatterBody = ({\n  setRes,\n  setError,\n  error,\n  raw,\n  setRaw,\n}: FormatterBodyProps) => {\n  const [fileName, setFileName] = useState<string>('');\n  const { handleModal } = useContext(ModalContext);\n  const countRef = useRef<number>(0);\n  const resetFields = () => {\n    setRaw('');\n    setFileName('');\n    setError('');\n    setRes({ json: false, res: '' });\n  };\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\n  const handleSaveSearch = (search: string) => {\n    if (!searches.includes(search)) {\n      const updatedSearches = [...searches, search];\n      setSearches(updatedSearches);\n    }\n  };\n  const setExample = () => {\n    setRaw(JSON.stringify(jsonExample));\n  };\n  const formatCode = () => {\n    try {\n      const formattedData = JSON.stringify(JSON.parse(raw), null, 5);\n      setRes({ json: true, res: JSON.parse(formattedData) });\n      setRaw(formattedData);\n      setError('');\n      handleSaveSearch(formattedData);\n    } catch (error: any) {\n      if (countRef.current === 0) {\n        countRef.current++;\n        setRaw(prettifyJSON(raw));\n      }\n      setError(error.message);\n    }\n  };\n  return (\n    <div className={styles.inputs}>\n      <div className={styles.input}>\n        <MultiLineInput\n          minRows={25}\n          placeholder={'{ Paste / Write Your json here... }'}\n          id=\"resInput\"\n          onChange={setRaw}\n          value={raw}\n          helperText={error}\n          error={!!error}\n          InputProps={{\n            endAdornment: (\n              <InputButtons\n                withFile={false}\n                type={'Changed'}\n                value={raw}\n                onChange={setRaw}\n              />\n            ),\n          }}\n        />\n      </div>\n      <div className={styles.buttonContainer}>\n        <DropZone\n          setError={setError}\n          fileName={fileName}\n          setFileName={setFileName}\n          onChange={setRaw}\n        />\n        <div className={styles.reset}>\n          <Button\n            style={{ width: '50%' }}\n            color={'error'}\n            onClick={resetFields}\n          >\n            Reset\n          </Button>\n\n          <Button style={{ width: '50%' }} onClick={setExample}>\n            Example\n          </Button>\n          <Button\n            style={{ width: '100%' }}\n            onClick={() => handleModal(<FetchModal onChange={setRaw} />)}\n          >\n            Load From Url\n          </Button>\n          <div className={styles.checkBox}></div>\n          <Button\n            className={styles.button}\n            variant=\"contained\"\n            disabled={!raw}\n            onClick={formatCode}\n          >\n            format\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"JsonTree_container__cqf1V\",\"checkboxs\":\"JsonTree_checkboxs__MPqjS\",\"slider\":\"JsonTree_slider__4pUhC\"};","import { ICheckBox } from './Types';\n\nexport const editorOptions: ICheckBox[] = [\n  {\n    id: 1,\n    label: 'Dark theme',\n    state: false,\n  },\n  {\n    id: 2,\n    label: 'Data Types',\n    state: false,\n  },\n  {\n    id: 3,\n    label: 'Collapsed',\n    state: false,\n  },\n  {\n    id: 4,\n    label: 'Sort Keys',\n    state: false,\n  },\n  {\n    id: 5,\n    label: 'length',\n    state: false,\n  },\n];\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport React from 'react';\nimport { CheckBoxProps } from './CheckBoxProps';\n\nexport const CheckBox = ({ options, setOptions, style }: CheckBoxProps) => {\n  return (\n    <FormGroup style={{ flexDirection: 'row' }} className={style}>\n      {options.map((c) => (\n        <FormControlLabel\n          key={c.id}\n          control={\n            <Checkbox checked={c.state} onClick={() => setOptions(c.id)} />\n          }\n          label={c.label}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n","import React, { ChangeEvent, useContext, useState } from 'react';\nimport styles from './JsonTree.module.css';\nimport { JsonTreeProps } from './JsonTreeProps';\nimport ReactJson from 'react-json-view';\nimport { editorOptions } from '../../Constant/CheckBox';\nimport { CheckBox } from '../CheckBox';\nimport { ICheckBox } from '../../Constant/Types';\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\nimport { useMediaQuery } from '../../Hooks/useMediaQuery';\nimport { Slider } from '@mui/material';\nimport { Text } from '../Text';\n\nexport const JsonTree = ({ data, isSmallScreen }: JsonTreeProps) => {\n  const { isDark } = useContext(AppContext);\n  const [options, setOptions] = useState<ICheckBox[]>(editorOptions);\n  const [space, setSpace] = useState<number>(isSmallScreen ? 4 : 10);\n  const handleChange = (id: number) => {\n    const changedIndex: number = options.find((i) => i.id === id)?.id! - 1;\n    const modifiedArray = [...options];\n    modifiedArray[changedIndex] = {\n      ...modifiedArray[changedIndex],\n      state: !modifiedArray[changedIndex].state,\n    };\n    setOptions(modifiedArray);\n  };\n  return (\n    <div className={styles.container}>\n      <div style={{ flexDirection: 'row', display: 'flex' }}>\n        <CheckBox\n          style={styles.checkboxs}\n          options={options}\n          setOptions={handleChange}\n        />\n        <div className={styles.slider}>\n          <Text>Space:</Text>\n          <Slider\n            onChange={(e: any) => setSpace(e.target.value)}\n            min={0}\n            max={15}\n            value={space}\n            valueLabelDisplay=\"auto\"\n            disableSwap\n          />\n        </div>\n      </div>\n      <ReactJson\n        style={{\n          width: '100%',\n          backgroundColor: options[0].state || isDark ? 'black' : 'white',\n        }}\n        src={data}\n        indentWidth={space}\n        onEdit={() => {}}\n        iconStyle={'circle'}\n        theme={options[0].state || isDark ? 'chalk' : undefined}\n        displayDataTypes={options[1].state}\n        collapsed={options[2].state ? 2 : undefined}\n        sortKeys={options[3].state}\n        displayObjectSize={options[4].state}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResContainer_container__ORbTk\"};","import React, { useEffect } from 'react';\nimport { JsonTree } from '../../../Components/JsonTree';\nimport { scrollTo } from '../../../Helpers/Scroll';\nimport styles from './ResContainer.module.css';\nimport { ResContainerProps } from './ResContainerProps';\nimport { useMediaQuery } from '../../../Hooks/useMediaQuery';\n\nexport const ResContainer = ({ data }: ResContainerProps) => {\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n\n  useEffect(() => {\n    if (data.res !== '') scrollTo({ id: 'result' });\n  }, [data.res]);\n  return (\n    <div id=\"result\" className={styles.container}>\n      {data.res !== '' && (\n        <JsonTree\n          isSmallScreen={isSmallScreen}\n          data={data.res !== '' && data.res}\n        />\n      )}\n    </div>\n  );\n};\n","export interface FormatterProps {\n  [key: string]: any;\n}\nexport interface ResState {\n  json: boolean;\n  res: string;\n}\nexport const ResInitState = {\n  json: true,\n  res: '',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HistoryModal_container__d0uap\"};","import React, { useEffect, useState } from 'react';\nimport styles from './HistoryModal.module.css';\nimport { HistoryModalProps } from './HistoryModalProps';\nimport { Text } from '../Text';\nimport { useLocalStorage } from '../../Hooks/useLocalStorage';\nimport { ButtonBase } from '@mui/material';\n\nexport const HistoryModal = ({ onClick, handleModal }: HistoryModalProps) => {\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\n\n  const onItemPressed = (e: any) => {\n    onClick(e.target.innerText);\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text variant=\"h6\"> Recent</Text>\n      {searches.length !== 0 ? (\n        searches.map((s: string, i: number) => (\n          <ButtonBase key={i} onClick={onItemPressed}>\n            <Text\n              sx={{\n                display: '-webkit-box',\n                overflow: 'hidden',\n                WebkitBoxOrient: 'vertical',\n                WebkitLineClamp: 1,\n              }}\n              variant=\"body1\"\n            >\n              {s.toString()}\n            </Text>\n          </ButtonBase>\n        ))\n      ) : (\n        <Text>There is no recent Data</Text>\n      )}\n    </div>\n  );\n};\n","import { useContext, useState } from 'react';\nimport styles from './Formatter.module.css';\nimport { FormatterBody } from './FormatterBody';\nimport { ResContainer } from './ResContainer';\nimport { ResInitState, ResState } from './FormatterProps';\nimport { Text } from '../../Components';\nimport { CIconButton } from '../../Components/CIconButton';\nimport HistoryIcon from '@mui/icons-material/History';\nimport { ModalContext } from '../../Components/ModalContext/ModalContext';\nimport { HistoryModal } from '../../Components/HistoryModal';\n\nconst Formatter = () => {\n  const { handleModal } = useContext(ModalContext);\n  const [raw, setRaw] = useState<string>('');\n\n  const [res, setRes] = useState<ResState>(ResInitState);\n  const [error, setError] = useState<string>('');\n  return (\n    <div className={styles.container}>\n      <div className={styles.headline}>\n        <Text className={styles.title} variant=\"h5\">\n          Json Formatter\n          <div className={styles.separator} />\n        </Text>\n        <div className={styles.history}>\n          <Text>History</Text>\n          <CIconButton\n            placement=\"right\"\n            title={'View Recent'}\n            onClick={() => handleModal(<HistoryModal onClick={setRaw} />)}\n          >\n            <HistoryIcon />\n          </CIconButton>\n        </div>\n      </div>\n      <FormatterBody\n        raw={raw}\n        setRaw={setRaw}\n        setRes={setRes}\n        error={error}\n        setError={setError}\n      />\n      {!error && <ResContainer data={res} />}\n    </div>\n  );\n};\nexport default Formatter;\n"],"names":["InputButtons","_ref","onChange","value","type","_ref$withFile","withFile","_jsxs","InputAdornment","className","styles","position","children","_jsx","CIconButton","placement","title","onClick","handleCopy","CallMadeSharp","handlePaste","CallReceivedSharp","DeleteIcon","IconButton","accept","id","concat","e","handleFile","style","display","htmlFor","Description","flexOptions","options","flexItemOptions","range","jsonExample","store","book","category","author","price","isbn","bicycle","color","methods","setValue","navigator","clipboard","readText","then","text","t","writeText","console","log","catch","err","error","_e$target$files","file","target","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert","apiMessages","addTab","removeTab","deleteCollection","removeUnUsedVars","tab","res","response","errorMessage","size","time","firebaseMiddleware","message","callback","auth","db","doc","toast","deleteTabByCollection","collection","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userRef","_doc$data","apiData","deletePromises","wrap","_context","prev","next","get","sent","exists","data","api","Object","entries","forEach","_ref2","_ref3","_slicedToArray","key","push","update","_defineProperty","firebase","abrupt","Promise","all","stop","_x","apply","arguments","saveTab","tabId","updateData","_objectSpread","set","merge","deleteTabFB","getAllTabs","email","resolve","reject","_doc$data$api","_doc$data2","sections","prettifyJSON","jsonStr","prettyJson","indentLevel","inString","i","length","char","repeat","Math","max","extractTitles","array","map","item","objectToPairs","obj","fromEntries","filter","undefined","checked","_ref4","countCheckedItems","params","count","hasOwnProperty","findTabByCollection","apiTabs","changesAccrued","JSON","stringify","scrollTo","_ref$behavior","behavior","_ref$block","block","_ref$withHighlight","withHighlight","element","document","getElementById","scrollIntoView","classList","add","setTimeout","remove","isUrlValid","url","URL","_","addParamsToURL","_url$split","split","baseUrl","queryString","keys","encodeURIComponent","join","DropZone","fileName","setFileName","isDark","useContext","AppContext","onDragOver","preventDefault","stopPropagation","onDrop","dataTransfer","name","Text","_e$target2","FetchModal","handleModal","_useState","useState","_useState2","_useFetch","setError","_useState3","_useState4","isLoading","setLoading","fetchData","fetch","json","finally","useFetch","TextField","label","helperText","variant","InputProps","endAdornment","FileCopy","Button","disabled","CircularProgress","useLocalStorage","initialValue","storedValue","localStorage","getItem","parse","useEffect","setItem","FormatterBody","setRes","raw","setRaw","ModalContext","countRef","useRef","_useLocalStorage","_useLocalStorage2","searches","setSearches","MultiLineInput","minRows","placeholder","width","formattedData","search","includes","updatedSearches","_toConsumableArray","handleSaveSearch","current","editorOptions","state","CheckBox","setOptions","FormGroup","flexDirection","c","FormControlLabel","control","Checkbox","JsonTree","isSmallScreen","space","setSpace","_options$find","changedIndex","find","modifiedArray","Slider","min","valueLabelDisplay","disableSwap","ReactJson","backgroundColor","src","indentWidth","onEdit","iconStyle","theme","displayDataTypes","collapsed","sortKeys","displayObjectSize","ResContainer","useMediaQuery","ResInitState","HistoryModal","onItemPressed","innerText","s","ButtonBase","sx","overflow","WebkitBoxOrient","WebkitLineClamp","toString","_useState5","_useState6","HistoryIcon"],"sourceRoot":""}