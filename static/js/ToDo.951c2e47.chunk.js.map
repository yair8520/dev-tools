{"version":3,"file":"static/js/ToDo.951c2e47.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/ConfirmModal/ConfirmModal.module.css?c22e","Components/ConfirmModal/ConfirmModal.tsx","webpack://dev-tools/./src/Pages/ToDoPage/ToDoPage.module.css?64ca","webpack://dev-tools/./src/Components/ToDoSections/ToDoSections.module.css?ad77","Components/ToDoSections/ToDoSectionsProps.ts","Components/ToDoSections/DirItem/DirItemButtons/DirItemButtons.module.css","Components/ToDoSections/DirItem/DirItemButtons/DirItemButtons.tsx","Components/ToDoSections/DirItem/DirItem.tsx","Components/ToDoSections/helper.ts","webpack://dev-tools/./src/Components/DirModal/DirModal.module.css?f535","Components/DirModal/DirModal.tsx","Components/ToDoSections/ToDoSections.tsx","webpack://dev-tools/./src/Components/ToDoList/ToDoList.module.css?7214","webpack://dev-tools/./src/Components/ToDoList/ToDoListItem/ToDoListItem.module.css?ec40","Components/ToDoList/ToDoListItem/ToDoListItem.tsx","webpack://dev-tools/./src/Components/TodoModal/TodoModal.module.css?4429","Components/TodoModal/TodoModal.tsx","Helpers/Todo.tsx","Components/ToDoList/ToDoList.tsx","Pages/ToDoPage/ToDoPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ConfirmModal_container__gM2W5\",\"buttons\":\"ConfirmModal_buttons__gvsF7\"};","import React from 'react';\nimport styles from './ConfirmModal.module.css';\nimport { ConfirmModalProps } from './ConfirmModalProps';\nimport { Text } from '../Text';\nimport { Button } from '@mui/material';\n\nexport const ConfirmModal = ({\n  title,\n  handleModal,\n  onNext,\n}: ConfirmModalProps) => {\n  const handlerWrapper = (cb?: Function) => {\n    cb?.();\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text variant=\"h6\"> {title}</Text>\n      <div className={styles.buttons}>\n        <Button onClick={() => handlerWrapper()}>Cancel</Button>\n        <Button onClick={() => handlerWrapper(onNext)}>Yes!</Button>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoPage_container__mTquY\",\"enter\":\"ToDoPage_enter__NiTmN\",\"menuButton\":\"ToDoPage_menuButton__b4Zu+\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoSections_container__rNbLx\",\"hide\":\"ToDoSections_hide__lwkvc\",\"addSection\":\"ToDoSections_addSection__gVOpv\",\"drawer\":\"ToDoSections_drawer__cj3xR\"};","import { DrawerProps } from '@mui/material';\nimport { TodoItem } from '../../Pages/ToDoPage/Todo';\n\nexport interface ToDoSectionsProps {\n  [key: string]: any;\n  list: TodoItem[];\n  setSelectedDir: Function;\n  selectedDir: string;\n}\n\nexport const drawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'permanent',\n  sx: {\n    '& .MuiDrawer-paper': {\n      position: 'unset',\n    },\n  },\n};\nexport const mobileDrawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'temporary',\n  sx: {\n    '& .MuiDrawer-paper': {\n      padding: '25px',\n      width: '70%',\n      height: '100%',\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DirItemButtons_container__OyrDD\"};","import React, { useContext } from 'react';\nimport styles from './DirItemButtons.module.css';\nimport { DirItemButtonsProps } from './DirItemButtonsProps';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ModalContext } from '../../../ModalContext/ModalContext';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { ConfirmModal } from '../../../ConfirmModal';\nimport { TodoContext } from '../../../../Context/TodoContext/TodoContext';\nexport const DirItemButtons = ({\n  setEdit,\n  edit,\n  saveEdit,\n  dir,\n}: DirItemButtonsProps) => {\n  const { handleModal } = useContext(ModalContext);\n  const { deleteDir } = useContext(TodoContext);\n\n  const openDeleteModal = () => {\n    handleModal(\n      <ConfirmModal\n        title={`This action will delete all tasks associated to ${dir}`}\n        onNext={() => deleteDir(dir)}\n      />\n    );\n  };\n  return (\n    <div className={styles.container}>\n      {!edit ? (\n        <IconButton onClick={() => setEdit(!edit)} edge=\"end\" aria-label=\"edit\">\n          <EditIcon />\n        </IconButton>\n      ) : (\n        <IconButton onClick={() => saveEdit()} edge=\"end\" aria-label=\"save\">\n          <CheckIcon />\n        </IconButton>\n      )}\n      <IconButton onClick={openDeleteModal} edge=\"end\" aria-label=\"delete\">\n        <DeleteIcon />\n      </IconButton>\n    </div>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport { DirItemProps } from './DirItemProps';\nimport {\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n  useTheme,\n} from '@mui/material';\nimport { DirItemButtons } from './DirItemButtons';\nimport { TodoContext } from '../../../Context/TodoContext/TodoContext';\n\nexport const DirItem = ({\n  title,\n  onItemClick,\n  selectedDir,\n  Icon,\n}: DirItemProps) => {\n  const theme = useTheme();\n  const { editDir } = useContext(TodoContext);\n  const [edit, setEdit] = useState(false);\n  const [modText, setModText] = useState(title);\n  const saveEdit = () => {\n    setEdit(!edit);\n    editDir(modText, title);\n  };\n  return (\n    <ListItem\n      secondaryAction={\n        !Icon ? (\n          <DirItemButtons\n            setEdit={setEdit}\n            saveEdit={saveEdit}\n            edit={edit}\n            dir={title}\n          />\n        ) : null\n      }\n      key={title}\n      disablePadding\n    >\n      <ListItemButton selected={selectedDir} onClick={() => onItemClick(title)}>\n        {Icon ? (\n          <>\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText primary={title} />\n          </>\n        ) : (\n          <TextField\n            sx={{\n              width: '100%',\n              '& .MuiInputBase-input.Mui-disabled': {\n                opacity: 1,\n                WebkitTextFillColor:\n                  theme.palette.mode === 'dark' ? 'white' : 'rgba(0, 0, 0, 1)',\n                border: 'none',\n              },\n              '& .MuiInputBase-root.Mui-disabled': {\n                border: 'none',\n                outline: 'none',\n              },\n              input: { textAlign: 'center' },\n            }}\n            InputProps={{\n              disableUnderline: !edit,\n            }}\n            variant=\"standard\"\n            disabled={!edit}\n            onBlur={saveEdit}\n            onChange={(e) => setModText(e.target.value)}\n            value={modText}\n          />\n        )}\n      </ListItemButton>\n    </ListItem>\n  );\n};\n","import TodayIcon from '@mui/icons-material/Today';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport SubjectIcon from '@mui/icons-material/Subject';\nimport GradingIcon from '@mui/icons-material/Grading';\nexport const defualtFolders = [\n  {\n    title: 'All',\n    icon: SubjectIcon,\n  },\n  {\n    title: 'today`s tasks',\n    icon: TodayIcon,\n  },\n  {\n    title: 'Favorites',\n    icon: FavoriteIcon,\n  },\n  {\n    title: 'Complited',\n    icon: GradingIcon,\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DirModal_container__sVDQo\",\"input\":\"DirModal_input__Vz+OI\",\"title\":\"DirModal_title__PLwTo\",\"buttonContainer\":\"DirModal_buttonContainer__jW-IW\",\"button\":\"DirModal_button__vZPHg\"};","import React, { useContext, useState } from 'react';\nimport styles from './DirModal.module.css';\nimport { DirModalProps } from './DirModalProps';\nimport { Text } from '../Text';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { Button } from '@mui/material';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\n\nexport const DirModal = ({ handleModal }: DirModalProps) => {\n  const { setDirs, dirs, setSelectedDir } = useContext(TodoContext);\n  const [title, setTitle] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const onSave = () => {\n    if (!title) return setError('Required Field');\n    if (dirs.includes(title)) return setError('Already exists');\n    setDirs((p: string[]) => [...p, title]);\n    setSelectedDir(title);\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text className={styles.title} variant=\"h5\">\n        Add Directory\n      </Text>\n      <MultiLineInput\n        className={styles.input}\n        value={title}\n        error={!!error}\n        helperText={error}\n        label={'Title'}\n        onChange={setTitle}\n      />\n      <div className={styles.buttonContainer}>\n        <Button onClick={onSave} variant=\"contained\" className={styles.button}>\n          save\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport styles from './ToDoSections.module.css';\nimport { drawerProps, mobileDrawerProps } from './ToDoSectionsProps';\nimport {\n  Button,\n  Collapse,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport { DirItem } from './DirItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport { defualtFolders } from './helper';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { DirModal } from '../DirModal';\nimport { UserContext } from '../../Context/UserContext';\nimport { Text } from '../Text';\nexport const ToDoSections = ({\n  isSmallScreen,\n  setMobileOpen,\n  mobileOpen,\n}: any) => {\n  const props = isSmallScreen ? mobileDrawerProps : drawerProps;\n  const { selectedDir, dirs, setSelectedDir } = useContext(TodoContext);\n  const { handleModal } = useContext(ModalContext);\n  const { user } = useContext(UserContext);\n  const [open, setOpen] = React.useState(true);\n  const onItemClick = (dir: string) => {\n    setSelectedDir(dir);\n  };\n\n  const openSaveModal = () => {\n    handleModal(<DirModal />);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Drawer\n        onClose={() => setMobileOpen(!mobileOpen)}\n        open={mobileOpen}\n        className={styles.drawer}\n        {...props}\n      >\n        <Text\n          style={{\n            alignSelf: 'center',\n            textAlign: 'center',\n            padding: '25px 0 25px',\n            width: '90%',\n          }}\n          variant=\"subtitle2\"\n          textOverflow=\"clip\"\n        >\n          {!user?.email\n            ? 'Log In with your Google Account to save your progress'\n            : `Logged in as ${user?.email}`}\n        </Text>\n        <Button\n          variant=\"contained\"\n          className={styles.addSection}\n          onClick={openSaveModal}\n        >\n          Add Directory +\n        </Button>\n        <List>\n          {defualtFolders.map((dir) => (\n            <DirItem\n              Icon={dir.icon}\n              selectedDir={selectedDir === dir.title}\n              onItemClick={() => onItemClick(dir.title)}\n              key={dir.title}\n              title={dir.title}\n            />\n          ))}\n          <ListItemButton onClick={() => setOpen(!open)}>\n            <ListItemIcon>\n              <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Directories\" />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItemButton>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {dirs.map((dir) => (\n              <DirItem\n                selectedDir={selectedDir === dir}\n                onItemClick={() => onItemClick(dir)}\n                key={dir}\n                title={dir}\n              />\n            ))}\n          </Collapse>\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoList_container__WvZ-g\",\"grid\":\"ToDoList_grid__pjiVL\",\"emptyList\":\"ToDoList_emptyList__zBu16\",\"addNote\":\"ToDoList_addNote__lZ3eL\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoListItem_container__Fy8jG\",\"dirTag\":\"ToDoListItem_dirTag__BWYUN\",\"dateText\":\"ToDoListItem_dateText__Gibgs\",\"title\":\"ToDoListItem_title__c-JFL\",\"desc\":\"ToDoListItem_desc__sBct-\",\"subContainer\":\"ToDoListItem_subContainer__cy54m\",\"content\":\"ToDoListItem_content__DnZ47\",\"bottom\":\"ToDoListItem_bottom__aR41l\",\"bottomButtons\":\"ToDoListItem_bottomButtons__gIpmi\",\"date\":\"ToDoListItem_date__MyGOE\"};","import React from 'react';\nimport styles from './ToDoListItem.module.css';\nimport { ToDoListItemProps } from './ToDoListItemProps';\nimport { Box, Card, Paper } from '@mui/material';\nimport { Text } from '../../Text';\nimport ScheduleIcon from '@mui/icons-material/Schedule';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { CIconButton } from '../../CIconButton';\n\nexport const ToDoListItem = ({\n  item,\n  onItemClick,\n  onComplete,\n  onFavorite,\n  onDelete,\n}: ToDoListItemProps) => {\n  const onItemPresssed = (func: Function) => (e: Event) => {\n    e.stopPropagation();\n    func(item.id);\n  };\n\n  return (\n    <Paper className={styles.container} onClick={onItemClick}>\n      <div className={styles.dirTag}> {item.dir}</div>\n      <div className={styles.subContainer}>\n        <div className={styles.content}>\n          <Text variant=\"h6\" className={styles.title}>\n            {item.title}\n          </Text>\n          <Text variant=\"body2\" className={styles.desc}>\n            {item.desc}\n          </Text>\n        </div>\n        <div className={styles.date}>\n          <Text className={styles.dateText}>{item.date}</Text>\n          <ScheduleIcon />\n        </div>\n        <div className={styles.bottom}>\n          <div className={styles.bottomButtons}>\n            <CIconButton\n              title={'Favorite'}\n              onClick={onItemPresssed(onFavorite)}\n            >\n              <FavoriteBorderIcon\n                htmlColor={item.favorite ? 'red' : undefined}\n              />\n            </CIconButton>\n            <CIconButton\n              title={item.completed ? 'Done' : 'InProgress'}\n              onClick={onItemPresssed(onComplete)}\n            >\n              <TaskAltIcon htmlColor={item.completed ? 'green' : 'orange'} />\n            </CIconButton>\n            <CIconButton title={'Delete'} onClick={onItemPresssed(onDelete)}>\n              <DeleteOutlineIcon />\n            </CIconButton>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TodoModal_container__xSmmQ\",\"bottomContainer\":\"TodoModal_bottomContainer__8zjGV\",\"label\":\"TodoModal_label__2pqOA\",\"button\":\"TodoModal_button__6Rv4X\",\"titleInput\":\"TodoModal_titleInput__lOl0g\",\"content\":\"TodoModal_content__bXfoP\",\"descInput\":\"TodoModal_descInput__Mo6Yd\",\"datePicker\":\"TodoModal_datePicker__Tyxuz\",\"dropDown\":\"TodoModal_dropDown__D2adS\"};","import React, { useContext, useMemo, useState } from 'react';\nimport styles from './TodoModal.module.css';\nimport { TodoModalProps } from './TodoModalProps';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { Button, InputLabel, MenuItem, Select } from '@mui/material';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport dayjs from 'dayjs';\n\nexport const TodoModal = ({ item, handleModal }: TodoModalProps) => {\n  const { addTodo, dirs, selectedDir } = useContext(TodoContext);\n  const [formValues, setFormValues] = useState({\n    title: item?.title ?? '',\n    desc: item?.desc ?? '',\n    dir: item?.dir ?? selectedDir,\n    date: item?.date ? item.date : dayjs().format('YYYY-MM-DD'),\n  });\n  const [formErrors, setFormErrors] = useState({\n    title: '',\n    dir: '',\n  });\n  const { title, desc, dir, date } = formValues;\n  const onChange = (val: any, key: string) => {\n    setFormValues({ ...formValues, [key]: val });\n  };\n  const validateForm = () => {\n    if (\n      !formValues.dir ||\n      formValues.dir === 'All' ||\n      formValues.dir === 'today`s tasks'\n    ) {\n      setFormErrors({ ...formErrors, dir: 'Requird Field' });\n      return false;\n    }\n\n    if (!formValues.title) {\n      setFormErrors({ ...formErrors, title: 'Requird Field' });\n      return false;\n    }\n    return true;\n  };\n  const onclick = (e: any) => {\n    if (validateForm()) {\n      addTodo({ ...item, ...formValues });\n      handleModal();\n    }\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <MultiLineInput\n          value={title}\n          required={true}\n          error={!!formErrors.title}\n          helperText={formErrors.title}\n          maxRows={1}\n          label=\"Title\"\n          onChange={(val) => onChange(val, 'title')}\n          className={styles.titleInput}\n        />\n        <div className={styles.bottomContainer}>\n          <InputLabel className={styles.label}>Task Date</InputLabel>\n          <DatePicker\n            value={dayjs(date)}\n            onChange={(a) => onChange(dayjs(a).format('YYYY-MM-DD'), 'date')}\n            className={styles.datePicker}\n          />\n          <InputLabel className={styles.label}>Select Directory *</InputLabel>\n          <Select\n            required={true}\n            error={!!formErrors.dir}\n            value={dir}\n            onChange={(e) => {\n              onChange(e.target.value, 'dir');\n            }}\n            className={styles.dropDown}\n          >\n            {dirs.map((item: string) => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n        <MultiLineInput\n          value={desc}\n          minRows={3}\n          label=\"Description\"\n          maxRows={8}\n          onChange={(val) => onChange(val, 'desc')}\n          className={styles.descInput}\n        />\n      </div>\n      <Button onClick={onclick} className={styles.button} variant=\"contained\">\n        {item ? 'save' : 'Update'}\n      </Button>\n    </div>\n  );\n};\n","import dayjs from 'dayjs';\nimport { TodoItem } from '../Pages/ToDoPage/Todo';\n\nexport const getFilterFunction = (dir: string, list: TodoItem[]) => {\n  let index: number = defualtFolders.findIndex((l) => l.title === dir);\n  if (index === -1) return list.filter((l) => l.dir === dir);\n  return list.filter(defualtFolders[index].filterBy);\n};\n\nconst defualtFolders = [\n  {\n    title: 'All',\n    filterBy: (a: any) => true,\n  },\n  {\n    title: 'today`s tasks',\n    filterBy: (a: any) => a.date === dayjs().format('YYYY-MM-DD'),\n  },\n  {\n    title: 'Favorites',\n    filterBy: (a: any) => a.favorite === true,\n  },\n  {\n    title: 'Complited',\n    filterBy: (a: any) => a.completed === true,\n  },\n];\n\nexport const emptyList: Record<string, string> = {\n  Complited:\n    '<strong>No completed tasks yet.</strong>\\n  Start completing tasks to see them here!',\n  Favorites:\n    '<strong>No favorite tasks yet.</strong>\\n Add tasks to your favorites to see them here!',\n  All: '<strong>No tasks found.</strong>\\n Add tasks to see them here!',\n  'today`s tasks':\n    '<strong>No tasks for today.</strong>\\n Add tasks to see them here!',\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useCallback, useContext, useMemo } from 'react';\nimport styles from './ToDoList.module.css';\nimport { ToDoListItem } from './ToDoListItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { TodoModal } from '../TodoModal';\nimport { emptyList, getFilterFunction } from '../../Helpers/Todo';\nimport { Text } from '../Text';\n\nexport const ToDoList = () => {\n  const { list, onDelete, onFavorite, onComplete, selectedDir } =\n    useContext(TodoContext);\n  const arrayList = list ? Object.values(list) : [];\n\n  const { handleModal } = useContext(ModalContext);\n  const todoList = useMemo(() => {\n    return getFilterFunction(selectedDir, arrayList);\n  }, [selectedDir, list]);\n\n  const onItemClick = useCallback(\n    (id: string) => {\n      const item = arrayList.filter((i) => i.id === id)[0];\n      handleModal(<TodoModal item={item} />);\n    },\n    [list, handleModal]\n  );\n  const hideAddButton = ['Favorites', 'Complited', 'All', 'today`s tasks'];\n  const Empty = () => {\n    if (hideAddButton.includes(selectedDir) && todoList.length === 0) {\n      return (\n        <div className={styles.emptyList}>\n          <Text\n            style={{ whiteSpace: 'pre-line' }}\n            dangerouslySetInnerHTML={{\n              __html: emptyList[selectedDir as keyof object],\n            }}\n          />\n        </div>\n      );\n    } else if (hideAddButton.includes(selectedDir)) {\n      return null;\n    }\n    return (\n      <div className={styles.addNote} onClick={() => onItemClick('-1')}>\n        <Text> Add Task +</Text>\n      </div>\n    );\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.grid}>\n        {todoList.map((item) => (\n          <ToDoListItem\n            key={item.id}\n            onItemClick={() => onItemClick(item.id)}\n            onComplete={onComplete}\n            onFavorite={onFavorite}\n            onDelete={onDelete}\n            item={item}\n          />\n        ))}\n\n        <Empty />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styles from './ToDoPage.module.css';\nimport { ToDoSections } from '../../Components/ToDoSections';\nimport { ToDoList } from '../../Components/ToDoList';\nimport { Fab, useMediaQuery } from '@mui/material';\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen';\n\nconst ToDoPage = () => {\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n  const [mobileOpen, setMobileOpen] = useState<boolean>(!isSmallScreen);\n  return (\n    <div className={styles.container}>\n      {isSmallScreen && (\n        <Fab\n          className={styles.menuButton}\n          onClick={() => setMobileOpen(!mobileOpen)}\n        >\n          <MenuOpenIcon />\n        </Fab>\n      )}\n      <ToDoSections\n        mobileOpen={mobileOpen}\n        setMobileOpen={setMobileOpen}\n        isSmallScreen={isSmallScreen}\n      />\n      <ToDoList />\n    </div>\n  );\n};\nexport default ToDoPage;\n"],"names":["ConfirmModal","_ref","title","handleModal","onNext","handlerWrapper","cb","_jsxs","className","styles","children","Text","variant","_jsx","Button","onClick","drawerProps","anchor","sx","position","mobileDrawerProps","padding","width","height","DirItemButtons","setEdit","edit","saveEdit","dir","useContext","ModalContext","deleteDir","TodoContext","IconButton","edge","CheckIcon","EditIcon","openDeleteModal","concat","DeleteIcon","DirItem","onItemClick","selectedDir","Icon","theme","useTheme","editDir","useState","modText","setModText","ListItem","secondaryAction","disablePadding","ListItemButton","selected","_Fragment","ListItemIcon","ListItemText","primary","TextField","opacity","WebkitTextFillColor","palette","mode","border","outline","input","textAlign","InputProps","disableUnderline","disabled","onBlur","onChange","e","target","value","defualtFolders","icon","SubjectIcon","TodayIcon","FavoriteIcon","GradingIcon","DirModal","setDirs","dirs","setSelectedDir","setTitle","error","setError","MultiLineInput","helperText","label","onSave","includes","p","ToDoSections","isSmallScreen","setMobileOpen","mobileOpen","props","user","UserContext","open","setOpen","React","Drawer","onClose","style","alignSelf","textOverflow","email","openSaveModal","List","map","FolderIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","ToDoListItem","item","onComplete","onFavorite","onDelete","onItemPresssed","func","stopPropagation","id","Paper","desc","date","ScheduleIcon","CIconButton","FavoriteBorderIcon","htmlColor","favorite","undefined","completed","TaskAltIcon","DeleteOutlineIcon","TodoModal","_item$title","_item$desc","_item$dir","addTodo","formValues","setFormValues","dayjs","format","formErrors","setFormErrors","val","key","required","maxRows","InputLabel","DatePicker","a","Select","MenuItem","minRows","filterBy","emptyList","Complited","Favorites","All","ToDoList","list","arrayList","Object","values","todoList","useMemo","getFilterFunction","index","findIndex","l","filter","useCallback","i","hideAddButton","Empty","length","whiteSpace","dangerouslySetInnerHTML","__html","ToDoPage","useMediaQuery","Fab","MenuOpenIcon"],"sourceRoot":""}