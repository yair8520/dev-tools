{"version":3,"file":"static/js/890.420c3e0c.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/HooksList/HookListItem/HookListItem.module.css?7915","Helpers/SandBox.ts","Components/ExpandCodeSection/ExpandCodeSection.tsx","Components/HooksList/HookListItem/HookListItem.tsx","webpack://dev-tools/./src/Components/LayoutWithSideMenu/LayoutWithSideMenu.module.css?f969","Components/LayoutWithSideMenu/LayoutWithSideMenu.tsx","webpack://dev-tools/./src/Components/SideMenu/SideMenu.module.css?1416","Components/SideMenu/SideMenu.tsx","Constant/Hooks.ts","Constant/FirbaseMessages.ts","Helpers/FireBase/Api.ts","Helpers/Json.ts","Helpers/Scroll.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HookListItem_container__EWT5F\",\"enter\":\"HookListItem_enter__z6m6Z\",\"card\":\"HookListItem_card__RWoWn\",\"header\":\"HookListItem_header__mUDFf\",\"copyIcon\":\"HookListItem_copyIcon__ZMdDZ\"};","import { getParameters } from 'codesandbox/lib/api/define';\r\nimport { indexFile } from '../Constant/Hooks';\r\nexport async function createReactTypeScriptSandbox(code: string) {\r\n  const parameters = getParameters({\r\n    template: 'create-react-app-typescript',\r\n    files: {\r\n      'src/App.tsx': {\r\n        content: code,\r\n        isBinary: false,\r\n      },\r\n      'index.tsx': {\r\n        content: indexFile,\r\n        isBinary: false,\r\n      },\r\n      'package.json': {\r\n        content: JSON.stringify({\r\n          dependencies: {\r\n            react: '^18.0.0',\r\n            'react-dom': '^18.0.0',\r\n            'react-scripts': '^5.0.0',\r\n          },\r\n          main: '/index.tsx',\r\n          devDependencies: {},\r\n        }),\r\n        isBinary: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  const url = `https://codesandbox.io/api/v1/sandboxes/define?parameters=${parameters}`;\r\n\r\n  window.open(url, '_blank');\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { ExpandCodeSectionProps } from './ExpandCodeSectionProps';\r\nimport { Collapse, CardContent, Typography } from '@mui/material';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { dracula, github } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\r\n\r\nexport const ExpandCodeSection = ({\r\n  expanded,\r\n  item,\r\n}: ExpandCodeSectionProps) => {\r\n  const { isDark } = useContext(AppContext);\r\n\r\n  return (\r\n    <Collapse in={expanded} timeout=\"auto\">\r\n      <CardContent>\r\n        <Typography style={{ whiteSpace: 'pre-line' }} variant=\"body1\">\r\n          {item.desc}\r\n        </Typography>\r\n        <div>\r\n          <SyntaxHighlighter\r\n            style={isDark ? dracula : github}\r\n            showLineNumbers={true}\r\n            language=\"javascript\"\r\n          >\r\n            {item.code}\r\n          </SyntaxHighlighter>\r\n        </div>\r\n      </CardContent>\r\n    </Collapse>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styles from './HookListItem.module.css';\r\nimport { HookListItemProps } from './HookListItemProps';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardActions,\r\n  styled,\r\n} from '@mui/material';\r\nimport WebIcon from '@mui/icons-material/Web';\r\nimport StayPrimaryPortraitIcon from '@mui/icons-material/StayPrimaryPortrait';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\nimport { CIconButton } from '../../CIconButton';\r\nimport { Text } from '../../Text';\r\nimport { createReactTypeScriptSandbox } from '../../../Helpers/SandBox';\r\nimport { ExpandCodeSection } from '../../ExpandCodeSection';\r\n\r\nexport const HookListItem = ({ item }: HookListItemProps) => {\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n  const ExpandMore = styled((props: any) => {\r\n    const { expand, ...other } = props;\r\n    return <IconButton {...other} />;\r\n  })(({ theme, expand }) => ({\r\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  }));\r\n  return (\r\n    <div className={styles.container}>\r\n      <Card id={item.title} className={styles.card}>\r\n        <CardActions disableSpacing>\r\n          <CardHeader\r\n            onClick={handleExpandClick}\r\n            disableTypography\r\n            title={\r\n              <Text variant=\"h6\" bold>\r\n                {item.title}\r\n              </Text>\r\n            }\r\n            sx={{ flexGrow: 1, textAlign: 'left' }}\r\n          />\r\n          {item.launch && (\r\n            <CIconButton\r\n              onClick={() => createReactTypeScriptSandbox(item.code)}\r\n              title={'Try'}\r\n            >\r\n              <LaunchIcon />\r\n            </CIconButton>\r\n          )}\r\n          {item.type === 'native' ? (\r\n            <CIconButton title={'Mobile'}>\r\n              <StayPrimaryPortraitIcon />\r\n            </CIconButton>\r\n          ) : item.type === 'web' ? (\r\n            <CIconButton title={'Web'}>\r\n              <WebIcon />\r\n            </CIconButton>\r\n          ) : null}\r\n          <ExpandMore\r\n            onClick={handleExpandClick}\r\n            expand={expanded}\r\n            aria-expanded={expanded}\r\n            aria-label=\"show more\"\r\n          >\r\n            <ExpandMoreIcon />\r\n          </ExpandMore>\r\n        </CardActions>\r\n        <ExpandCodeSection item={item} expanded={expanded} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LayoutWithSideMenu_container__-IJo-\",\"subContainer\":\"LayoutWithSideMenu_subContainer__Qh2t1\",\"separator\":\"LayoutWithSideMenu_separator__+weKB\",\"right\":\"LayoutWithSideMenu_right__iV2Si\"};","import React from 'react';\r\nimport styles from './LayoutWithSideMenu.module.css';\r\nimport { LayoutWithSideMenuProps } from './LayoutWithSideMenuProps';\r\nimport { useMediaQuery } from '@mui/material';\r\n\r\nexport const LayoutWithSideMenu = ({\r\n  Left,\r\n  Right,\r\n}: LayoutWithSideMenuProps) => {\r\n  const isSmallScreen = useMediaQuery('(max-width: 500px)');\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.subContainer}>\r\n        <div\r\n          style={{\r\n            width: !isSmallScreen ? '80%' : '90%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n        >\r\n          {<Left />}\r\n        </div>\r\n        {!isSmallScreen && (\r\n          <div className={styles.right}>\r\n            <Right />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SideMenu_container__HlxYD\",\"item\":\"SideMenu_item__B3q02\",\"link\":\"SideMenu_link__enMRA\"};","import React from 'react';\r\nimport styles from './SideMenu.module.css';\r\nimport { SideMenuProps } from './SideMenuProps';\r\nimport { Text } from '../Text';\r\nimport { Link } from '@mui/material';\r\nimport { scrollTo } from '../../Helpers/Scroll';\r\n\r\nexport const SideMenu = ({ items }: SideMenuProps) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Text variant=\"h6\"> On This Page</Text>\r\n      {items.map((item, i) => (\r\n        <div key={item + i} className={styles.item}>\r\n          <Link\r\n            className={styles.link}\r\n            onClick={() => scrollTo({ id: item, withHighlight: true })}\r\n          >\r\n            {item}\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","export const HooksDescription: IHooksDescription[] = [\r\n  {\r\n    title: 'useNetworkStatus',\r\n    launch: true,\r\n    type: 'web',\r\n    desc: `A piece of state that tracks whether the network is online.\r\n    An Effect that subscribes to the global online and offline events, and updates that state.\r\n    This will keep your component synchronized with the network status.`,\r\n    code: `import { useState, useEffect } from \"react\";\r\n\r\nexport function useNetworkStatus(): boolean {\r\n  const [isOnline, setIsOnline] = useState<boolean>(true);\r\n  useEffect(() => {\r\n    function handleOnline() {\r\n      setIsOnline(true);\r\n    }\r\n    function handleOffline() {\r\n      setIsOnline(false);\r\n    }\r\n    window.addEventListener(\"online\", handleOnline);\r\n    window.addEventListener(\"offline\", handleOffline);\r\n    return () => {\r\n      window.removeEventListener(\"online\", handleOnline);\r\n      window.removeEventListener(\"offline\", handleOffline);\r\n    };\r\n  }, []);\r\n\r\n  return isOnline;\r\n}\r\n\r\nfunction App() {\r\n  const isOnline = useNetworkStatus();\r\n  return <h1>{isOnline ? \"✅ Online\" : \"❌ Disconnected\"}</h1>;\r\n}\r\n\r\nexport default App;`,\r\n  },\r\n  {\r\n    title: 'useDebouncedEffect',\r\n    launch: true,\r\n    type: 'web',\r\n    desc: `The useDebouncedEffect hook is a custom hook that allows you to create an effect that is debounced. This means that the effect will only run after a certain delay has passed since the last update to its dependencies.`,\r\n    code: `import { useEffect, useState } from \"react\";\r\n\r\nexport const useDebouncedEffect = (\r\n  effect: () => void,\r\n  deps: any,\r\n  delay: number\r\n) => {\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => effect(), delay);\r\n    return () => clearTimeout(handler);\r\n  }, [...(deps || []), delay]);\r\n};\r\n\r\nfunction App() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useDebouncedEffect(\r\n    () => {\r\n      // Make an API call with the debounced search term\r\n      console.log(\"Search:\", searchTerm);\r\n    },\r\n    [searchTerm],\r\n    5000 // Debounce delay of 5000ms\r\n  );\r\n\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      value={searchTerm}\r\n      onChange={(e) => setSearchTerm(e.target.value)}\r\n    />\r\n  );\r\n}\r\n\r\nexport default App;\r\n`,\r\n  },\r\n  {\r\n    title: 'useMediaQuery',\r\n    launch: true,\r\n    type: 'web',\r\n    desc: 'This is a custom React hook called \"useMediaQuery\" that takes in a query string and returns a boolean indicating whether the current viewport matches the specified media query. The hook uses the useState and useEffect hooks to update the matches state and register a listener for changes in viewport size.',\r\n    code: `import { useState, useEffect } from \"react\";\r\n\r\nexport const useMediaQuery = (query: string) => {\r\n  const [matches, setMatches] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const media = window.matchMedia(query);\r\n    if (media.matches !== matches) {\r\n      setMatches(media.matches);\r\n    }\r\n    const listener = () => setMatches(media.matches);\r\n    window.addEventListener(\"resize\", listener);\r\n    return () => window.removeEventListener(\"resize\", listener);\r\n  }, [matches, query]);\r\n\r\n  return matches;\r\n};\r\n\r\nfunction App() {\r\n  const isSmallScreen:boolean = useMediaQuery(\"(max-width: 500px)\");\r\n\r\n  return <p>{isSmallScreen.toString()}</p>;\r\n}\r\n\r\nexport default App;\r\n`,\r\n  },\r\n  {\r\n    title: 'useToggle',\r\n    launch: true,\r\n    type: 'web',\r\n    desc: `This is a custom React hook called \"useToggle\" that takes in an optional boolean initial state and returns a tuple with the current boolean state and a function to toggle the state. The hook uses the useState hook to initialize and update the state, and the useCallback hook to memoize the toggle function to prevent unnecessary re-renders. In the example usage, the hook is used to toggle a boolean value with a button click.`,\r\n    code: `import { useCallback, useState } from 'react';\r\n\r\n// Hook\r\n// Parameter is the boolean, with default \"false\" value\r\nconst useToggle = (initialState: boolean = false): [boolean, any] => {\r\n  const [state, setState] = useState<boolean>(initialState);\r\n  // Define and memorize toggler function in case we pass down the component,\r\n  // This function changes the boolean value to its opposite value\r\n  const toggle = useCallback((): void => setState(state => !state), []);\r\n  return [state, toggle]\r\n}\r\n\r\nfunction App() {\r\n  // Call the hook which returns the current value and the toggler function\r\n  const [isTextChanged, setIsTextChanged] = useToggle();\r\n  return (\r\n    <button onClick={setIsTextChanged}>{isTextChanged ? 'Toggled' : 'Click to Toggle'}</button>\r\n  );\r\n}\r\n\r\nexport default App`,\r\n  },\r\n  {\r\n    title: 'useLocalStorage',\r\n    launch: true,\r\n    type: 'web',\r\n    desc: `This hook takes in a key and initial value and returns an array with two values: the current value stored in local storage and a function to update the value. The hook uses the useState and useEffect hooks to get and set the value in local storage.`,\r\n    code: `import { useState, useEffect } from \"react\";\r\n\r\nexport const useLocalStorage = <T extends unknown>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\r\n  const [value, setValue] = useState<T>(() => {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue !== null ? JSON.parse(storedValue) : initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n\r\nfunction App() {\r\n  const [value, setValue] = useLocalStorage<string>(\"key\", \"value\");\r\n\r\n  return <p onClick={() => setValue(\"new value\")}>{value}</p>;\r\n}\r\n\r\nexport default App;\r\n`,\r\n  },\r\n  {\r\n    title: 'useCopyToClipboard',\r\n    launch: true,\r\n    type: 'web',\r\n    desc: `The useCopyToClipboard hook can be used in any React functional component to enable copying text to the clipboard and displaying the result of the copy operation to the user. *The \"navigator.clipboard.writeText\" method is only available over HTTPS or localhost.`,\r\n    code: `import { useState } from 'react'\r\n\r\ntype CopiedValue = string | null\r\ntype CopyFn = (text: string) => Promise<boolean> // Return success\r\n\r\nfunction useCopyToClipboard(): [CopiedValue, CopyFn] {\r\n  const [copiedText, setCopiedText] = useState<CopiedValue>(null)\r\n\r\n  const copy: CopyFn = async text => {\r\n    if (!navigator?.clipboard) {\r\n      console.warn('Clipboard not supported')\r\n      return false\r\n    }\r\n\r\n    // Try to save to clipboard then save it in the state if worked\r\n    try {\r\n      await navigator.clipboard.writeText(text)\r\n      setCopiedText(text)\r\n      return true\r\n    } catch (error) {\r\n      console.warn('Copy failed', error)\r\n      setCopiedText(null)\r\n      return false\r\n    }\r\n  }\r\n\r\n  return [copiedText, copy]\r\n}\r\n\r\nfunction App() {\r\n  const [copiedText, copy] = useCopyToClipboard();\r\n  return (\r\n    <>\r\n      <p onClick={(e) => copy(\"copyText\")}>Click For Copy</p>\r\n      <p>{copiedText}</p>\r\n    </>\r\n  );\r\n}\r\nexport default App; \r\n`,\r\n  },\r\n  {\r\n    title: 'usePrevious',\r\n    launch: true,\r\n    type: 'web',\r\n    desc: `This hook can be useful when you need to compare the previous value of a prop or state variable with the current value to trigger some action or effect. By storing the previous value in a ref, you can compare it to the current value in a subsequent render cycle of the component.`,\r\n    code: `import { useEffect, useRef, useState } from 'react';\r\n\r\nexport const usePrevious = <K = any>(value: K) => {\r\n  const ref = useRef<K>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return ref.current;\r\n};\r\n\r\nfunction App() {\r\n  const [count, setCount] = useState(0);\r\n  const prevCount = usePrevious(count);\r\n\r\n  return (\r\n    <div>\r\n      <p>Current count: {count}</p>\r\n      <p>Previous count: {prevCount}</p>\r\n      <button onClick={() => setCount(count + 1)}>Increment</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n`,\r\n  },\r\n];\r\nexport const nativeHooksDescription: IHooksDescription[] = [\r\n  {\r\n    title: 'useInternetConnection',\r\n    type: 'native',\r\n    desc: `This hook uses the NetInfo module to check the device's internet connectivity status. It sets the initial state to true and then listens for changes in the connectivity status using the useEffect hook. When the connectivity status changes, it updates the state accordingly.`,\r\n    code: `import { useState, useEffect } from 'react';\r\nimport NetInfo from '@react-native-community/netinfo';\r\n\r\nexport function useInternetConnection() {\r\n  const [isConnected, setIsConnected] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = NetInfo.addEventListener(state => {\r\n      setIsConnected(state.isConnected);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return isConnected;\r\n}`,\r\n  },\r\n  {\r\n    title: 'useIsForeground',\r\n    type: 'native',\r\n    desc: `The useIsForeground hook is a custom hook that is used in a React Native application to detect if the app is currently in the foreground or not. It uses the AppState module from react-native to listen for changes in the app state and updates its own state accordingly.\r\n\r\n    The hook returns a boolean value indicating whether the app is currently in the foreground or not.`,\r\n    code: `import { useEffect, useState } from 'react';\r\nimport { AppState, AppStateStatus } from 'react-native';\r\n\r\nexport const useIsForeground = (): boolean => {\r\n  const [isForeground, setIsForeground] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const onChange = (state: AppStateStatus): void => {\r\n      setIsForeground(state === 'active');\r\n    };\r\n    const listener = AppState.addEventListener('change', onChange);\r\n    return () => {\r\n      listener.remove();\r\n    };\r\n  }, [setIsForeground]);\r\n\r\n  return isForeground;\r\n};\r\n`,\r\n  },\r\n  {\r\n    title: 'useKeyBoardStatus',\r\n    type: 'native',\r\n    desc: `The useKeyBoardStatus hook is a custom hook that is used in a React Native application to detect the status of the keyboard. It uses the Keyboard module from react-native to listen for events when the keyboard is shown or hidden.\r\n    The hook returns an object with a boolean value called keyboardStatus, which is true if the keyboard is currently shown and false if it is hidden.`,\r\n    code: `import { useEffect, useState } from 'react';\r\nimport { Keyboard } from 'react-native';\r\n\r\nconst useKeyBoardStatus = () => {\r\n  const [keyboardStatus, setKeyboardStatus] = useState(false);\r\n  useEffect(() => {\r\n    const showSubscription = Keyboard.addListener('keyboardDidShow', () => {\r\n      setKeyboardStatus(true);\r\n    });\r\n    const hideSubscription = Keyboard.addListener('keyboardDidHide', () => {\r\n      setKeyboardStatus(false);\r\n    });\r\n    return () => {\r\n      showSubscription.remove();\r\n      hideSubscription.remove();\r\n    };\r\n  }, []);\r\n  return { keyboardStatus };\r\n};\r\n\r\nexport default useKeyBoardStatus;\r\n`,\r\n  },\r\n  {\r\n    title: 'useBackButton',\r\n    type: 'native',\r\n    desc: `This code defines a custom hook useBackButton that allows a developer to define a callback function that will be executed when the Android device's back button is pressed. The hook uses the useNavigation hook from the @react-navigation/native library to determine if the current screen is focused. If it is, the callback function is called, and true is returned to indicate that the back button press has been handled. If the screen is not focused, false is returned to allow the default back button behavior to occur.`,\r\n    code: `import React from 'react';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { BackHandler } from 'react-native';\r\n\r\nconst useBackButton = (callBack?: () => void) => {\r\n  const nav = useNavigation();\r\n  React.useEffect(() => {\r\n    const backAction = () => {\r\n      if (nav.isFocused()) {\r\n        callBack?.();\r\n        return true;\r\n      }\r\n      return false;\r\n    };\r\n    const backHandler = BackHandler.addEventListener(\r\n      'hardwareBackPress',\r\n      backAction\r\n    );\r\n    return () => backHandler.remove();\r\n  }, [nav, callBack]);\r\n};\r\n\r\nexport default useBackButton;\r\n`,\r\n  },\r\n  {\r\n    title: 'useDarkModeListener',\r\n    type: 'native',\r\n    desc: `This code exports a custom hook called useDarkModeListener that takes an optional callback function. The hook uses the useEffect hook to listen for changes in the appearance mode (light or dark) of the app using the Appearance API provided by react-native. When the appearance mode changes, the callback function is called with a boolean value indicating whether the new mode is dark or not.`,\r\n    code: `import { useEffect } from 'react';\r\nimport { Appearance } from 'react-native';\r\n\r\nconst useDarkModeListener = (callBack?: (isDark: boolean) => void) => {\r\n  useEffect(() => {\r\n    const subscription = Appearance.addChangeListener(\r\n      ({ colorScheme: newColorScheme }) => {\r\n        callBack?.(newColorScheme === 'dark');\r\n      }\r\n    );\r\n\r\n    return () => subscription.remove();\r\n  }, [callBack]);\r\n};\r\n\r\nexport default useDarkModeListener;\r\n`,\r\n  },\r\n  {\r\n    title: 'useOrientation',\r\n    type: 'native',\r\n    desc: `This hook uses the Dimensions module to get the window dimensions and determine the current orientation. It sets the initial orientation based on the window dimensions and then listens for changes in the window dimensions using the useEffect hook. When the dimensions change, it updates the orientation accordingly.`,\r\n    code: `import { useState, useEffect } from 'react';\r\nimport { Dimensions } from 'react-native';\r\n\r\nexport function useOrientation() {\r\n  const [orientation, setOrientation] = useState(\r\n    Dimensions.get('window').width > Dimensions.get('window').height ? 'landscape' : 'portrait'\r\n  );\r\n\r\n  useEffect(() => {\r\n    const updateOrientation = () => {\r\n      setOrientation(\r\n        Dimensions.get('window').width > Dimensions.get('window').height ? 'landscape' : 'portrait'\r\n      );\r\n    };\r\n\r\n    Dimensions.addEventListener('change', updateOrientation);\r\n\r\n    return () => {\r\n      Dimensions.removeEventListener('change', updateOrientation);\r\n    };\r\n  }, []);\r\n\r\n  return orientation;\r\n}`,\r\n  },\r\n];\r\nexport interface IHooksDescription {\r\n  title: string;\r\n  desc: string;\r\n  code: string;\r\n  type?: 'web' | 'native';\r\n  launch?: boolean;\r\n}\r\n\r\nexport const indexFile = `\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport App from \"./src/App\";\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById(\"root\") as HTMLElement\r\n);\r\nroot.render(<App />);\r\n\r\n`;\r\n","export const apiMessages: { [key: string]: string } = {\r\n    addTab: \"Tab added successfully\",\r\n    removeTab: \"Tab removed successfully\",\r\n    deleteCollection: \"Collection deleted successfully\",\r\n};\r\n","import 'firebase/compat/auth';\r\nimport firebase from 'firebase/compat/app';\r\nimport { auth, db } from '../../Config/Firebase';\r\nimport { ITab, apiTabs } from '../../Constant/Mock';\r\nimport { toast } from 'react-toastify';\r\nimport { apiMessages } from '../../Constant/FirbaseMessages';\r\n\r\nexport const removeUnUsedVars = (tab: ITab) => {\r\n    tab.res.response = null;\r\n    tab.res.error = null;\r\n    tab.res.errorMessage = null;\r\n    tab.res.size = null;\r\n    tab.res.time = null;\r\n    return tab;\r\n};\r\n\r\nconst firebaseMiddleware = (\r\n    message: string,\r\n    callback: (\r\n        userRef: firebase.firestore.DocumentReference<firebase.firestore.DocumentData>\r\n    ) => Promise<any>\r\n) => {\r\n    if (!auth.currentUser) {\r\n        toast.error('Please logged in order to save your work.')\r\n        return;\r\n    }\r\n    const userRef = db.collection('users').doc(auth.currentUser!.email!);\r\n    callback(userRef)\r\n        .then(() => toast.success(apiMessages[message]))\r\n        .catch(() => toast.error('Operation failed'));\r\n};\r\n\r\nexport const deleteTabByCollection = (collection: string) => {\r\n    firebaseMiddleware(\"deleteCollection\", async (userRef) => {\r\n        const doc = await userRef.get();\r\n        if (doc.exists) {\r\n            const apiData = doc.data()?.api || {};\r\n            const deletePromises: Promise<void>[] = [];\r\n            Object.entries(apiData).forEach(([key, tab]: any) => {\r\n                if (tab.collection === collection) {\r\n                    deletePromises.push(userRef.update({\r\n                        [`api.${key}`]: firebase.firestore.FieldValue.delete()\r\n                    }));\r\n                }\r\n            });\r\n            return Promise.all(deletePromises);\r\n        }\r\n    });\r\n};\r\nexport const saveTab = (tabId: string, tab: ITab) => {\r\n    firebaseMiddleware(\"addTab\", (userRef) => {\r\n        const updateData = {\r\n            [`api`]: {\r\n                [`${tabId}`]: { ...removeUnUsedVars(tab) },\r\n            },\r\n        };\r\n        return userRef.set(updateData, { merge: true });\r\n    });\r\n};\r\nexport const deleteTabFB = (tabId: string) => {\r\n    firebaseMiddleware(\"removeTab\", (userRef) => {\r\n        const updateData = {\r\n            [`api.${tabId}`]: firebase.firestore.FieldValue.delete(),\r\n        };\r\n        return userRef.update(updateData);\r\n    });\r\n};\r\n\r\nexport const getAllTabs = (email: string) => {\r\n    return new Promise((resolve, reject) => {\r\n        const userRef = db.collection('users').doc(email);\r\n        userRef\r\n            .get()\r\n            .then((doc: any) => {\r\n                if (doc.exists) {\r\n                    resolve(doc.data()?.api ?? {});\r\n                } else {\r\n                    userRef.set({ sections: {} }).then(() => resolve({}));\r\n                }\r\n            })\r\n            .catch(reject);\r\n    });\r\n};\r\n","import { AxiosHeaders } from 'axios';\r\nimport { IHooksDescription } from '../Constant/Hooks';\r\nimport { IApiTabs, IParams, ITab } from '../Constant/Mock';\r\nimport { removeUnUsedVars } from './FireBase/Api';\r\n\r\nexport function prettifyJSON(jsonStr: string | any[]) {\r\n  if (!jsonStr || typeof jsonStr !== 'string') {\r\n    return 'Invalid JSON';\r\n  }\r\n\r\n  let prettyJson = '';\r\n  let indentLevel = 0;\r\n  let inString = false;\r\n\r\n  for (let i = 0; i < jsonStr.length; i++) {\r\n    const char = jsonStr[i];\r\n\r\n    if (inString) {\r\n      prettyJson += char;\r\n      if (char === '\"' && jsonStr[i - 1] !== '\\\\') {\r\n        inString = false;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    switch (char) {\r\n      case '{':\r\n      case '[':\r\n        prettyJson += char + '\\n' + ' '.repeat((indentLevel + 1) * 2);\r\n        indentLevel++;\r\n        break;\r\n\r\n      case '}':\r\n      case ']':\r\n        indentLevel = Math.max(0, indentLevel - 1);\r\n        prettyJson += '\\n' + ' '.repeat(indentLevel * 2) + char;\r\n        break;\r\n\r\n      case ':':\r\n        prettyJson += char + ' ';\r\n        break;\r\n\r\n      case ',':\r\n        prettyJson += char + '\\n' + ' '.repeat(indentLevel * 2);\r\n        break;\r\n\r\n      case '\"':\r\n        prettyJson += char;\r\n        inString = true;\r\n        break;\r\n\r\n      default:\r\n        prettyJson += char;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return prettyJson;\r\n}\r\nexport function generateInterfaceFromJson(json: string): string {\r\n  const parsedJson = JSON.parse(json);\r\n  const rootInterfaceName = 'Root';\r\n\r\n  function getInterfaceFromObject(obj: any, name: string): string {\r\n    const keys = Object.keys(obj);\r\n    let interfaceString = `interface ${name} {\\n`;\r\n\r\n    keys.forEach((key) => {\r\n      const value = obj[key];\r\n      if (Array.isArray(value)) {\r\n        const arrayInterfaceName = `${name}_${key}_Item`;\r\n        interfaceString += `  ${key}: ${arrayInterfaceName}[];\\n`;\r\n        interfaceString += getInterfaceFromObject(value[0], arrayInterfaceName);\r\n      } else if (typeof value === 'object') {\r\n        const objectInterfaceName = `${key}`;\r\n        interfaceString += `  ${key}: ${objectInterfaceName};\\n`;\r\n        interfaceString += getInterfaceFromObject(value, objectInterfaceName);\r\n      } else {\r\n        interfaceString += `  ${key}: ${typeof value};\\n`;\r\n      }\r\n    });\r\n\r\n    interfaceString += '}\\n';\r\n    return interfaceString;\r\n  }\r\n\r\n  const interfaceString = getInterfaceFromObject(parsedJson, rootInterfaceName);\r\n  return interfaceString;\r\n}\r\nexport const extractTitles = (array: IHooksDescription[]) => {\r\n  return array.map((item, i) => item.title);\r\n};\r\nexport const getFirstId = (array: IApiTabs) => {\r\n  return array[Object.keys(array)[0]];\r\n};\r\n\r\nexport const objectToPairs = (obj: IParams): AxiosHeaders => {\r\n  return Object.fromEntries(\r\n    Object.entries(obj)\r\n      .filter(([key, value]) => value.value !== \"\" && (value.checked === undefined || value.checked)) // Exclude pairs with empty values or checked set to false\r\n      .map(([key, value]) => [value.key, value.value])\r\n  ) as AxiosHeaders;\r\n};\r\nexport function countCheckedItems(params: IParams): number {\r\n  let count = 0;\r\n  for (const key in params) {\r\n    if (params.hasOwnProperty(key) && params[key].checked) {\r\n      count++;\r\n    }\r\n  }\r\n  return count;\r\n}\r\nexport function findTabByCollection(apiTabs: IApiTabs, collection: string): string | undefined {\r\n  for (const key in apiTabs) {\r\n    if (apiTabs.hasOwnProperty(key) && apiTabs[key].collection === collection) {\r\n      return apiTabs[key].id;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\nexport const changesAccrued = (prev: ITab, next: ITab) => {\r\n  const newPrev = JSON.parse(JSON.stringify(prev));\r\n  const newNext = JSON.parse(JSON.stringify(next));\r\n  return JSON.stringify(removeUnUsedVars(newPrev)) !==\r\n    JSON.stringify(removeUnUsedVars(newNext));\r\n};","import { IScrollTo } from './Types';\r\nimport './scrollCss.css';\r\nexport const scrollTo = ({\r\n  id,\r\n  behavior = 'smooth',\r\n  block = 'start',\r\n  withHighlight = false,\r\n}: IScrollTo) => {\r\n  const element = document.getElementById(id);\r\n  if (element) {\r\n    element.scrollIntoView({ behavior, block });\r\n    if (withHighlight) {\r\n      element.classList.add('custom-highlighted-class');\r\n      setTimeout(() => {\r\n        element && element.classList.remove('custom-highlighted-class');\r\n      }, 3000);\r\n    }\r\n  } else {\r\n  }\r\n};\r\n"],"names":["_createReactTypeScriptSandbox","_asyncToGenerator","_regeneratorRuntime","mark","_callee","code","parameters","url","wrap","_context","prev","next","getParameters","template","files","content","isBinary","indexFile","JSON","stringify","dependencies","react","main","devDependencies","concat","window","open","stop","apply","arguments","ExpandCodeSection","_ref","expanded","item","isDark","useContext","AppContext","_jsx","Collapse","in","timeout","children","_jsxs","CardContent","Typography","style","whiteSpace","variant","desc","SyntaxHighlighter","dracula","github","showLineNumbers","language","HookListItem","_React$useState","React","_React$useState2","_slicedToArray","setExpanded","handleExpandClick","ExpandMore","styled","props","expand","other","_objectWithoutProperties","_excluded","IconButton","_objectSpread","_ref2","theme","transform","marginLeft","transition","transitions","create","duration","shortest","className","styles","Card","id","title","CardActions","disableSpacing","CardHeader","onClick","disableTypography","Text","bold","sx","flexGrow","textAlign","launch","CIconButton","_x","createReactTypeScriptSandbox","LaunchIcon","type","StayPrimaryPortraitIcon","WebIcon","ExpandMoreIcon","LayoutWithSideMenu","Left","Right","isSmallScreen","useMediaQuery","width","display","flexDirection","SideMenu","items","map","i","Link","scrollTo","withHighlight","HooksDescription","nativeHooksDescription","apiMessages","addTab","removeTab","deleteCollection","removeUnUsedVars","tab","res","response","error","errorMessage","size","time","firebaseMiddleware","message","callback","auth","db","doc","then","toast","catch","deleteTabByCollection","collection","userRef","_doc$data","apiData","deletePromises","get","sent","exists","data","api","Object","entries","forEach","_ref3","key","push","update","_defineProperty","firebase","abrupt","Promise","all","saveTab","tabId","updateData","set","merge","deleteTabFB","getAllTabs","email","resolve","reject","_doc$data$api","_doc$data2","sections","prettifyJSON","jsonStr","prettyJson","indentLevel","inString","length","char","repeat","Math","max","extractTitles","array","objectToPairs","obj","fromEntries","filter","value","undefined","checked","_ref4","countCheckedItems","params","count","hasOwnProperty","findTabByCollection","apiTabs","changesAccrued","newPrev","parse","newNext","_ref$behavior","behavior","_ref$block","block","_ref$withHighlight","element","document","getElementById","scrollIntoView","classList","add","setTimeout","remove"],"sourceRoot":""}