{"version":3,"file":"static/js/DiffChecker.b9c4b177.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/DiffChecker/DiffChecker.module.css?647a","Components/DiffContainer/DiffContainer.tsx","Components/DiffChecker/DiffChecker.tsx","webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?0789","Components/DiffChecker/InputButtons/InputButtons.tsx","Helpers/Clipboard.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DiffChecker_container__4B4lu\",\"text\":\"DiffChecker_text__K9iWu\",\"inputs\":\"DiffChecker_inputs__cQmjz\",\"separator\":\"DiffChecker_separator__khzzP\",\"input\":\"DiffChecker_input__jWZje\",\"inputContainer\":\"DiffChecker_inputContainer__ZFA7B\"};","import React, { useContext } from 'react';\r\nimport './DiffContainer.module.css';\r\nimport { DiffContainerProps } from './DiffContainerProps';\r\nimport ReactDiffViewer from 'react-diff-viewer';\r\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\r\n\r\nexport const DiffContainer = ({ original, changed }: DiffContainerProps) => {\r\n  const { isDark } = useContext(AppContext);\r\n\r\n  return (\r\n    <div style={{ maxWidth: '100vw', overflow: 'auto' }}>\r\n      <ReactDiffViewer\r\n        useDarkTheme={isDark}\r\n        rightTitle={'Changed'}\r\n        leftTitle={'Original'}\r\n        oldValue={original}\r\n        newValue={changed}\r\n        splitView={true}\r\n        showDiffOnly={false}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport styles from './DiffChecker.module.css';\r\nimport { DiffContainer } from '../DiffContainer';\r\nimport { MultiLineInput } from '../MultiLineInput';\r\nimport { Text } from '../Text';\r\nimport { InputButtons } from './InputButtons';\r\n\r\nconst DiffChecker = () => {\r\n  const [original, setOriginal] = useState<string>('');\r\n  const [changed, setChanged] = useState<string>('');\r\n  return (\r\n    <div className={styles.container}>\r\n      <Text\r\n        style={{ alignSelf: 'center', textAlign: 'center' }}\r\n        padding={'25px'}\r\n        variant=\"h6\"\r\n      >\r\n        Diff Checker\r\n        <div className={styles.separator} />\r\n      </Text>\r\n\r\n      <div className={styles.inputs}>\r\n        <div className={styles.inputContainer}>\r\n          <MultiLineInput\r\n            className={styles.input}\r\n            minRows={15}\r\n            maxRows={20}\r\n            placeholder={'Original'}\r\n            value={original}\r\n            onChange={setOriginal}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputButtons\r\n                  type={'Original'}\r\n                  value={original}\r\n                  onChange={setOriginal}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n        <div className={styles.inputContainer}>\r\n          <MultiLineInput\r\n            className={styles.input}\r\n            minRows={15}\r\n            maxRows={20}\r\n            placeholder={'Changed'}\r\n            value={changed}\r\n            onChange={setChanged}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputButtons\r\n                  type={'Changed'}\r\n                  value={changed}\r\n                  onChange={setChanged}\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <DiffContainer original={original} changed={changed} />\r\n    </div>\r\n  );\r\n};\r\nexport default DiffChecker;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__7dfFm\"};","import React from 'react';\r\nimport styles from './InputButtons.module.css';\r\nimport { InputButtonsProps } from './InputButtonsProps';\r\nimport { IconButton, InputAdornment } from '@mui/material';\r\nimport {\r\n  Description,\r\n  CallReceivedSharp,\r\n  CallMadeSharp,\r\n} from '@material-ui/icons';\r\nimport {\r\n  handleCopy,\r\n  handleFile,\r\n  handlePaste,\r\n} from '../../../Helpers/Clipboard';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { CIconButton } from '../../CIconButton';\r\nexport const InputButtons = ({\r\n  onChange,\r\n  value,\r\n  type,\r\n  withFile = true,\r\n}: InputButtonsProps) => {\r\n  return (\r\n    <InputAdornment className={styles.container} position=\"end\">\r\n      <CIconButton\r\n        placement=\"right\"\r\n        title={'Copy'}\r\n        onClick={() => handleCopy(value)}\r\n      >\r\n        <CallMadeSharp />\r\n      </CIconButton>\r\n      <CIconButton\r\n        placement=\"left\"\r\n        title={'Paste'}\r\n        onClick={() => handlePaste(onChange)}\r\n      >\r\n        <CallReceivedSharp />\r\n      </CIconButton>\r\n      <CIconButton\r\n        placement=\"right\"\r\n        title={'Delete'}\r\n        onClick={() => onChange('')}\r\n      >\r\n        <DeleteIcon />\r\n      </CIconButton>\r\n      {withFile && (\r\n        <IconButton onClick={() => {}}>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.json\"\r\n            id={`fileInput${type}`}\r\n            onChange={(e) => handleFile(e, onChange)}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <label htmlFor={`fileInput${type}`}>\r\n            <Description />\r\n          </label>\r\n        </IconButton>\r\n      )}\r\n    </InputAdornment>\r\n  );\r\n};\r\n","export const handlePaste = (setValue: (t: string) => void) => {\r\n  navigator.clipboard.readText().then((text) => setValue(text));\r\n};\r\nexport const handleCopy = (t: string) => {\r\n  navigator.clipboard\r\n    .writeText(t)\r\n    .then(() => {\r\n      console.log('Text copied to clipboard');\r\n    })\r\n    .catch((err) => {\r\n      console.error('Error copying text to clipboard:', err);\r\n    });\r\n};\r\nexport const handleFile = (\r\n  e: { target: { files: any } },\r\n  onChange: (t: any) => void\r\n) => {\r\n  const file = e.target.files?.[0];\r\n\r\n  if (file.type === 'application/json' || file.type === 'text/plain') {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target?.result;\r\n      onChange(content);\r\n    };\r\n    reader.readAsText(file);\r\n  } else {\r\n    alert('Invalid file type. Only JSON and TXT files are supported.');\r\n    return;\r\n  }\r\n};\r\n"],"names":["DiffContainer","_ref","original","changed","isDark","useContext","AppContext","_jsx","style","maxWidth","overflow","children","ReactDiffViewer","useDarkTheme","rightTitle","leftTitle","oldValue","newValue","splitView","showDiffOnly","_useState","useState","_useState2","_slicedToArray","setOriginal","_useState3","_useState4","setChanged","_jsxs","className","styles","Text","alignSelf","textAlign","padding","variant","MultiLineInput","minRows","maxRows","placeholder","value","onChange","InputProps","endAdornment","InputButtons","type","_ref$withFile","withFile","InputAdornment","position","CIconButton","placement","title","onClick","handleCopy","CallMadeSharp","handlePaste","CallReceivedSharp","DeleteIcon","IconButton","accept","id","concat","e","handleFile","display","htmlFor","Description","setValue","navigator","clipboard","readText","then","text","t","writeText","console","log","catch","err","error","_e$target$files","file","target","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert"],"sourceRoot":""}