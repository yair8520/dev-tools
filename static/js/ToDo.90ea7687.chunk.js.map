{"version":3,"file":"static/js/ToDo.90ea7687.chunk.js","mappings":"yJACA,EAA4B,gCAA5B,EAAsE,8B,gCCKzDA,EAAe,SAAHC,GAIC,IAHxBC,EAAKD,EAALC,MACAC,EAAWF,EAAXE,YACAC,EAAMH,EAANG,OAEMC,EAAiB,SAACC,GACpB,OAAFA,QAAE,IAAFA,GAAAA,IACAH,GACF,EACA,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAACI,EAAAA,EAAI,CAACC,QAAQ,KAAIF,SAAA,CAAC,IAAER,MACrBK,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC7BG,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAS,kBAAMV,GAAgB,EAACK,SAAC,YACzCG,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAS,kBAAMV,EAAeD,EAAO,EAACM,SAAC,cAIvD,C,gGCvBA,EAA4B,4BAA5B,EAAqE,6B,UCArE,EAA4B,gCAA5B,EAA2G,iCAA3G,EAAqJ,6BCSxIM,EAA2B,CACtCC,OAAQ,OACRL,QAAS,YACTM,GAAI,CACF,qBAAsB,CACpBC,SAAU,WAIHC,EAAiC,CAC5CH,OAAQ,OACRL,QAAS,YACTM,GAAI,CACF,qBAAsB,CACpBG,QAAS,OACTC,MAAO,MACPC,OAAQ,U,6GCzBd,EAA4B,kC,wFCSfC,EAAiB,SAAHvB,GAKC,IAJ1BwB,EAAOxB,EAAPwB,QACAC,EAAIzB,EAAJyB,KACAC,EAAQ1B,EAAR0B,SACAC,EAAG3B,EAAH2B,IAEQzB,GAAgB0B,EAAAA,EAAAA,YAAWC,EAAAA,GAA3B3B,YACA4B,GAAcF,EAAAA,EAAAA,YAAWG,EAAAA,GAAzBD,UAUR,OACExB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,CAC7BgB,GAKAb,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAAClB,QAAS,kBAAMY,GAAU,EAAEO,KAAK,MAAM,aAAW,OAAMxB,UACjEG,EAAAA,EAAAA,KAACsB,EAAAA,EAAS,OALZtB,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAAClB,QAAS,kBAAMU,GAASC,EAAK,EAAEQ,KAAK,MAAM,aAAW,OAAMxB,UACrEG,EAAAA,EAAAA,KAACuB,EAAAA,EAAQ,OAObvB,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAAClB,QAnBQ,WACtBZ,GACEU,EAAAA,EAAAA,KAACb,EAAAA,EAAY,CACXE,MAAK,mDAAAmC,OAAqDT,GAC1DxB,OAAQ,kBAAM2B,EAAUH,EAAI,IAGlC,EAY0CM,KAAK,MAAM,aAAW,SAAQxB,UAClEG,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,QAInB,EC9BaC,EAAU,SAAHtC,GAKC,IAJnBC,EAAKD,EAALC,MACAsC,EAAWvC,EAAXuC,YACAC,EAAWxC,EAAXwC,YACAC,EAAIzC,EAAJyC,KAEMC,GAAQC,EAAAA,EAAAA,KACNC,GAAYhB,EAAAA,EAAAA,YAAWG,EAAAA,GAAvBa,QACRC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCpB,EAAIsB,EAAA,GAAEvB,EAAOuB,EAAA,GACpBE,GAA8BH,EAAAA,EAAAA,UAAS7C,GAAMiD,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBxB,EAAW,WACfF,GAASC,GACTmB,EAAQO,EAASlD,EACnB,EACA,OACEW,EAAAA,EAAAA,KAACyC,EAAAA,GAAQ,CACPC,gBACGb,EAOG,MANF7B,EAAAA,EAAAA,KAACW,EAAc,CACbC,QAASA,EACTE,SAAUA,EACVD,KAAMA,EACNE,IAAK1B,IAKXsD,gBAAc,EAAA9C,UAEdG,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CAACC,SAAUjB,EAAa1B,QAAS,kBAAMyB,EAAYtC,EAAM,EAACQ,SACtEgC,GACCnC,EAAAA,EAAAA,MAAAoD,EAAAA,SAAA,CAAAjD,SAAA,EACEG,EAAAA,EAAAA,KAAC+C,EAAAA,EAAY,CAAAlD,UACXG,EAAAA,EAAAA,KAAC6B,EAAI,OAEP7B,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CAACC,QAAS5D,QAGzBW,EAAAA,EAAAA,KAACkD,EAAAA,EAAS,CACR7C,GAAI,CACFI,MAAO,OACP,qCAAsC,CACpC0C,QAAS,EACTC,oBACyB,SAAvBtB,EAAMuB,QAAQC,KAAkB,QAAU,mBAC5CC,OAAQ,QAEV,oCAAqC,CACnCA,OAAQ,OACRC,QAAS,QAEXC,MAAO,CAAEC,UAAW,WAEtBC,WAAY,CACVC,kBAAmB/C,GAErBd,QAAQ,WACR8D,UAAWhD,EACXiD,OAAQhD,EACRiD,SAAU,SAACC,GAAC,OAAKxB,EAAWwB,EAAEC,OAAOC,MAAM,EAC3CA,MAAO3B,OAlCRlD,EAwCX,E,6EC3Ea8E,EAAiB,CAC5B,CACE9E,MAAO,MACP+E,KAAMC,EAAAA,GAER,CACEhF,MAAO,gBACP+E,KAAME,EAAAA,GAER,CACEjF,MAAO,YACP+E,KAAMG,EAAAA,GAER,CACElF,MAAO,YACP+E,KAAMI,EAAAA,I,WClBV,EAA4B,4BAA5B,EAAgE,wBAAhE,EAAgG,wBAAhG,EAA0I,kCAA1I,EAAqL,yB,qBCOxKC,EAAW,SAAHrF,GAAwC,IAAlCE,EAAWF,EAAXE,YACzBoF,GAA0C1D,EAAAA,EAAAA,YAAWG,EAAAA,GAA7CwD,EAAOD,EAAPC,QAASC,EAAIF,EAAJE,KAAMC,EAAcH,EAAdG,eACvB5C,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvC5C,EAAK8C,EAAA,GAAE2C,EAAQ3C,EAAA,GACtBE,GAA0BH,EAAAA,EAAAA,UAAiB,IAAGI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAAvC0C,EAAKzC,EAAA,GAAE0C,EAAQ1C,EAAA,GAStB,OACE5C,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BG,EAAAA,EAAAA,KAACF,EAAAA,EAAI,CAACH,UAAWC,EAAcG,QAAQ,KAAIF,SAAC,mBAG5CG,EAAAA,EAAAA,KAACiF,EAAAA,EAAc,CACbtF,UAAWC,EACXsE,MAAO7E,EACP0F,QAASA,EACTG,WAAYH,EACZI,MAAO,QACPpB,SAAUe,KAEZ9E,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAuBC,UACrCG,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QArBC,WACb,OAAKb,EACDuF,EAAKQ,SAAS/F,GAAe2F,EAAS,mBAC1CL,GAAQ,SAACU,GAAW,SAAA7D,QAAA8D,EAAAA,EAAAA,GAASD,GAAC,CAAEhG,GAAQ,IACxCwF,EAAexF,QACfC,KAJmB0F,EAAS,iBAK9B,EAe+BjF,QAAQ,YAAYJ,UAAWC,EAAcC,SAAC,aAM/E,E,WCnBa0F,EAAe,SAAHnG,GAIb,IAHVoG,EAAapG,EAAboG,cACAC,EAAarG,EAAbqG,cACAC,EAAUtG,EAAVsG,WAEMC,EAAQH,EAAgBjF,EAAoBJ,EAClDuE,GAA8C1D,EAAAA,EAAAA,YAAWG,EAAAA,GAAjDS,EAAW8C,EAAX9C,YAAagD,EAAIF,EAAJE,KAAMC,EAAcH,EAAdG,eACnBvF,GAAgB0B,EAAAA,EAAAA,YAAWC,EAAAA,GAA3B3B,YACAsG,GAAS5E,EAAAA,EAAAA,YAAW6E,EAAAA,GAApBD,KACRE,EAAwBC,EAAAA,UAAe,GAAKC,GAAA5D,EAAAA,EAAAA,GAAA0D,EAAA,GAArCG,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdrE,EAAc,SAACZ,GACnB8D,EAAe9D,EACjB,EAMA,OACEf,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,MAACyG,EAAAA,IAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACLC,QAAS,kBAAMZ,GAAeC,EAAW,EACzCO,KAAMP,EACN/F,UAAWC,GACP+F,GAAK,IAAA9F,SAAA,EAETG,EAAAA,EAAAA,KAACF,EAAAA,EAAI,CACHwG,MAAO,CACLC,UAAW,SACX7C,UAAW,SACXlD,QAAS,cACTC,MAAO,OAETV,QAAQ,YACRyG,aAAa,OAAM3G,SAEb,OAAJ+F,QAAI,IAAJA,GAAAA,EAAMa,MACmD,gBAAAjF,OACnC,OAAJoE,QAAI,IAAJA,OAAI,EAAJA,EAAMa,OADtB,2DAGNzG,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CACLF,QAAQ,YACRJ,UAAWC,EACXM,QA7Bc,WACpBZ,GAAYU,EAAAA,EAAAA,KAACyE,EAAQ,IACvB,EA2B+B5E,SACxB,qBAGDH,EAAAA,EAAAA,MAACgH,EAAAA,EAAI,CAAA7G,SAAA,CACFsE,EAAewC,KAAI,SAAC5F,GAAG,OACtBf,EAAAA,EAAAA,KAAC0B,EAAO,CACNG,KAAMd,EAAIqD,KACVxC,YAAaA,IAAgBb,EAAI1B,MACjCsC,YAAa,kBAAMA,EAAYZ,EAAI1B,MAAM,EAEzCA,MAAO0B,EAAI1B,OADN0B,EAAI1B,MAET,KAEJK,EAAAA,EAAAA,MAACkD,EAAAA,EAAc,CAAC1C,QAAS,kBAAMgG,GAASD,EAAK,EAACpG,SAAA,EAC5CG,EAAAA,EAAAA,KAAC+C,EAAAA,EAAY,CAAAlD,UACXG,EAAAA,EAAAA,KAAC4G,EAAAA,EAAU,OAEb5G,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CAACC,QAAQ,gBACrBgD,GAAOjG,EAAAA,EAAAA,KAAC6G,EAAAA,EAAU,KAAM7G,EAAAA,EAAAA,KAAC8G,EAAAA,EAAU,QAEtC9G,EAAAA,EAAAA,KAAC+G,EAAAA,EAAQ,CAACC,GAAIf,EAAMgB,QAAQ,OAAOC,eAAa,EAAArH,SAC7C+E,EAAK+B,KAAI,SAAC5F,GAAG,OACZf,EAAAA,EAAAA,KAAC0B,EAAO,CACNE,YAAaA,IAAgBb,EAC7BY,YAAa,kBAAMA,EAAYZ,EAAI,EAEnC1B,MAAO0B,GADFA,EAEL,cAOhB,EClGA,EAA4B,4BAA5B,GAA+D,uBAA/D,GAAkG,4BAAlG,GAAwI,0BCAxI,GAA4B,gCAA5B,GAAqE,6BAArE,GAA6G,+BAA7G,GAAoJ,4BAApJ,GAAuL,2BAAvL,GAAiO,mCAAjO,GAA8Q,8BAA9Q,GAAqT,6BAArT,GAAkW,oCAAlW,GAA6Y,2B,wECUhYoG,GAAe,SAAH/H,GAMC,IALxBgI,EAAIhI,EAAJgI,KACAzF,EAAWvC,EAAXuC,YACA0F,EAAUjI,EAAViI,WACAC,EAAUlI,EAAVkI,WACAC,EAAQnI,EAARmI,SAEMC,EAAiB,SAACC,GAAc,OAAK,SAACzD,GAC1CA,EAAE0D,kBACFD,EAAKL,EAAKO,GACZ,CAAE,EAEF,OACEjI,EAAAA,EAAAA,MAACkI,GAAAA,EAAK,CAACjI,UAAWC,GAAkBM,QAASyB,EAAY9B,SAAA,EACvDH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAcC,SAAA,CAAC,IAAEuH,EAAKrG,QACtCrB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAoBC,SAAA,EAClCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAeC,SAAA,EAC7BG,EAAAA,EAAAA,KAACF,EAAAA,EAAI,CAACC,QAAQ,KAAKJ,UAAWC,GAAaC,SACxCuH,EAAK/H,SAERW,EAAAA,EAAAA,KAACF,EAAAA,EAAI,CAACC,QAAQ,QAAQJ,UAAWC,GAAYC,SAC1CuH,EAAKS,WAGVnI,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAYC,SAAA,EAC1BG,EAAAA,EAAAA,KAACF,EAAAA,EAAI,CAACH,UAAWC,GAAgBC,SAAEuH,EAAKU,QACxC9H,EAAAA,EAAAA,KAAC+H,GAAAA,EAAY,QAEf/H,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,GAAcC,UAC5BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAqBC,SAAA,EACnCG,EAAAA,EAAAA,KAACgI,GAAAA,EAAW,CACV3I,MAAO,WACPa,QAASsH,EAAeF,GAAYzH,UAEpCG,EAAAA,EAAAA,KAACiI,GAAAA,EAAkB,CACjBC,UAAWd,EAAKe,SAAW,WAAQC,OAGvCpI,EAAAA,EAAAA,KAACgI,GAAAA,EAAW,CACV3I,MAAO+H,EAAKiB,UAAY,OAAS,aACjCnI,QAASsH,EAAeH,GAAYxH,UAEpCG,EAAAA,EAAAA,KAACsI,GAAAA,EAAW,CAACJ,UAAWd,EAAKiB,UAAY,QAAU,cAErDrI,EAAAA,EAAAA,KAACgI,GAAAA,EAAW,CAAC3I,MAAO,SAAUa,QAASsH,EAAeD,GAAU1H,UAC9DG,EAAAA,EAAAA,KAACuI,GAAAA,EAAiB,gBAOhC,E,WC9DA,GAA4B,6BAA5B,GAA2E,mCAA3E,GAAsH,yBAAtH,GAAwJ,0BAAxJ,GAA+L,8BAA/L,GAAuO,2BAAvO,GAA8Q,6BAA9Q,GAAwT,8BAAxT,GAAiW,4B,uECQpVC,GAAY,SAAHpJ,GAA+C,IAADqJ,EAAAC,EAAAC,EAAxCvB,EAAIhI,EAAJgI,KAAM9H,EAAWF,EAAXE,YAChCoF,GAAuC1D,EAAAA,EAAAA,YAAWG,EAAAA,GAA1CyH,EAAOlE,EAAPkE,QAAShE,EAAIF,EAAJE,KAAMhD,EAAW8C,EAAX9C,YACvBK,GAAoCC,EAAAA,EAAAA,UAAS,CAC3C7C,MAAkB,QAAboJ,EAAM,OAAJrB,QAAI,IAAJA,OAAI,EAAJA,EAAM/H,aAAK,IAAAoJ,EAAAA,EAAI,GACtBZ,KAAgB,QAAZa,EAAM,OAAJtB,QAAI,IAAJA,OAAI,EAAJA,EAAMS,YAAI,IAAAa,EAAAA,EAAI,GACpB3H,IAAc,QAAX4H,EAAM,OAAJvB,QAAI,IAAJA,OAAI,EAAJA,EAAMrG,WAAG,IAAA4H,EAAAA,EAAI/G,EAClBkG,KAAU,OAAJV,QAAI,IAAJA,GAAAA,EAAMU,KAAOV,EAAKU,KAAOe,OAAQC,OAAO,gBAC9C3G,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GALK8G,EAAU5G,EAAA,GAAE6G,EAAa7G,EAAA,GAMhCE,GAAoCH,EAAAA,EAAAA,UAAS,CAC3C7C,MAAO,GACP0B,IAAK,KACLuB,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAHK4G,EAAU3G,EAAA,GAAE4G,EAAa5G,EAAA,GAIxBjD,EAA2B0J,EAA3B1J,MAAOwI,EAAoBkB,EAApBlB,KAAM9G,EAAcgI,EAAdhI,IAAK+G,EAASiB,EAATjB,KACpB/D,EAAW,SAACoF,EAAUC,GAC1BJ,GAAa5C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI2C,GAAU,IAAAM,EAAAA,GAAAA,GAAA,GAAGD,EAAMD,IACxC,EAuBA,OACEzJ,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAeC,SAAA,EAC7BG,EAAAA,EAAAA,KAACiF,EAAAA,EAAc,CACbf,MAAO7E,EACPiK,UAAU,EACVvE,QAASkE,EAAW5J,MACpB6F,WAAY+D,EAAW5J,MACvBkK,QAAS,EACTpE,MAAM,QACNpB,SAAU,SAACoF,GAAG,OAAKpF,EAASoF,EAAK,QAAQ,EACzCxJ,UAAWC,MAEbF,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAuBC,SAAA,EACrCG,EAAAA,EAAAA,KAACwJ,GAAAA,EAAU,CAAC7J,UAAWC,GAAaC,SAAC,eACrCG,EAAAA,EAAAA,KAACyJ,GAAAA,EAAU,CACTvF,MAAO2E,KAAMf,GACb/D,SAAU,SAAC2F,GAAC,OAAK3F,EAAS8E,KAAMa,GAAGZ,OAAO,cAAe,OAAO,EAChEnJ,UAAWC,MAEbI,EAAAA,EAAAA,KAACwJ,GAAAA,EAAU,CAAC7J,UAAWC,GAAaC,SAAC,wBACrCG,EAAAA,EAAAA,KAAC2J,GAAAA,EAAM,CACLL,UAAU,EACVvE,QAASkE,EAAWlI,IACpBmD,MAAOnD,EACPgD,SAAU,SAACC,GACTD,EAASC,EAAEC,OAAOC,MAAO,MAC3B,EACAvE,UAAWC,GAAgBC,SAE1B+E,EAAK+B,KAAI,SAACS,GAAY,OACrBpH,EAAAA,EAAAA,KAAC4J,GAAAA,EAAQ,CAAY1F,MAAOkD,EAAKvH,SAC9BuH,GADYA,EAEJ,UAIjBpH,EAAAA,EAAAA,KAACiF,EAAAA,EAAc,CACbf,MAAO2D,EACPgC,QAAS,EACT1E,MAAM,cACNoE,QAAS,EACTxF,SAAU,SAACoF,GAAG,OAAKpF,EAASoF,EAAK,OAAO,EACxCxJ,UAAWC,SAGfI,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QApDI,SAAC8D,IAdZ+E,EAAWhI,KACO,QAAnBgI,EAAWhI,KACQ,kBAAnBgI,EAAWhI,IAMRgI,EAAW1J,QACd6J,GAAa9C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6C,GAAU,IAAE5J,MAAO,mBAC/B,IANP6J,GAAa9C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI6C,GAAU,IAAElI,IAAK,mBAC7B,MAWP6H,GAAOxC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIgB,GAAS2B,IACtBzJ,IAEJ,EA+C8BK,UAAWC,GAAeG,QAAQ,YAAWF,SACpEuH,EAAO,OAAS,aAIzB,ECzFMjD,GAAiB,CACrB,CACE9E,MAAO,MACPyK,SAAU,SAACJ,GAAM,OAAK,CAAI,GAE5B,CACErK,MAAO,gBACPyK,SAAU,SAACJ,GAAM,OAAKA,EAAE5B,OAASe,OAAQC,OAAO,aAAa,GAE/D,CACEzJ,MAAO,YACPyK,SAAU,SAACJ,GAAM,OAAoB,IAAfA,EAAEvB,QAAiB,GAE3C,CACE9I,MAAO,YACPyK,SAAU,SAACJ,GAAM,OAAqB,IAAhBA,EAAErB,SAAkB,IAIjC0B,GAAoC,CAC/CC,UACE,uFACFC,UACE,0FACFC,IAAK,iEACL,gBACE,sEC1BSC,GAAW,WACtB,IAAAzF,GACE1D,EAAAA,EAAAA,YAAWG,EAAAA,GADLiJ,EAAI1F,EAAJ0F,KAAM7C,EAAQ7C,EAAR6C,SAAUD,EAAU5C,EAAV4C,WAAYD,EAAU3C,EAAV2C,WAAYzF,EAAW8C,EAAX9C,YAE1CyI,EAAYD,EAAOE,OAAOC,OAAOH,GAAQ,GAEvC9K,GAAgB0B,EAAAA,EAAAA,YAAWC,EAAAA,GAA3B3B,YACFkL,GAAWC,EAAAA,EAAAA,UAAQ,WACvB,ODb6B,SAAC1J,EAAaqJ,GAC7C,IAAIM,EAAgBvG,GAAewG,WAAU,SAACC,GAAC,OAAKA,EAAEvL,QAAU0B,CAAG,IACnE,OAAe,IAAX2J,EAAqBN,EAAKS,QAAO,SAACD,GAAC,OAAKA,EAAE7J,MAAQA,CAAG,IAClDqJ,EAAKS,OAAO1G,GAAeuG,GAAOZ,SAC3C,CCSWgB,CAAkBlJ,EAAayI,EACxC,GAAG,CAACzI,EAAawI,IAEXzI,GAAcoJ,EAAAA,EAAAA,cAClB,SAACpD,GACC,IAAMP,EAAOiD,EAAUQ,QAAO,SAACG,GAAC,OAAKA,EAAErD,KAAOA,CAAE,IAAE,GAClDrI,GAAYU,EAAAA,EAAAA,KAACwI,GAAS,CAACpB,KAAMA,IAC/B,GACA,CAACgD,EAAM9K,IAEH2L,EAAgB,CAAC,YAAa,YAAa,MAAO,iBAClDC,EAAQ,WACZ,OAAID,EAAc7F,SAASxD,IAAoC,IAApB4I,EAASW,QAEhDnL,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,GAAiBC,UAC/BG,EAAAA,EAAAA,KAACF,EAAAA,EAAI,CACHwG,MAAO,CAAE8E,WAAY,YACrBC,wBAAyB,CACvBC,OAAQvB,GAAUnI,QAKjBqJ,EAAc7F,SAASxD,GACzB,MAGP5B,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,GAAgBM,QAAS,kBAAMyB,EAAY,KAAK,EAAC9B,UAC/DG,EAAAA,EAAAA,KAACF,EAAAA,EAAI,CAAAD,SAAC,iBAGZ,EACA,OACEG,EAAAA,EAAAA,KAAA,OAAKL,UAAWC,EAAiBC,UAC/BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,GAAYC,SAAA,CACzB2K,EAAS7D,KAAI,SAACS,GAAI,OACjBpH,EAAAA,EAAAA,KAACmH,GAAY,CAEXxF,YAAa,kBAAMA,EAAYyF,EAAKO,GAAG,EACvCN,WAAYA,EACZC,WAAYA,EACZC,SAAUA,EACVH,KAAMA,GALDA,EAAKO,GAMV,KAGJ3H,EAAAA,EAAAA,KAACkL,EAAK,QAId,E,oCCrCA,GAtBiB,WACf,IAAM1F,GAAgB+F,EAAAA,GAAAA,GAAc,sBACpCtJ,GAAoCC,EAAAA,EAAAA,WAAmBsD,GAAcrD,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9DyD,EAAUvD,EAAA,GAAEsD,EAAatD,EAAA,GAChC,OACEzC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,CAC9B2F,IACCxF,EAAAA,EAAAA,KAACwL,GAAAA,EAAG,CACF7L,UAAWC,EACXM,QAAS,kBAAMuF,GAAeC,EAAW,EAAC7F,UAE1CG,EAAAA,EAAAA,KAACyL,GAAAA,EAAY,OAGjBzL,EAAAA,EAAAA,KAACuF,EAAY,CACXG,WAAYA,EACZD,cAAeA,EACfD,cAAeA,KAEjBxF,EAAAA,EAAAA,KAACmK,GAAQ,MAGf,C","sources":["webpack://dev-tools/./src/Components/ConfirmModal/ConfirmModal.module.css?78c7","Components/ConfirmModal/ConfirmModal.tsx","webpack://dev-tools/./src/Pages/ToDoPage/ToDoPage.module.css?5b65","webpack://dev-tools/./src/Components/ToDoSections/ToDoSections.module.css?5cd8","Components/ToDoSections/ToDoSectionsProps.ts","Components/ToDoSections/DirItem/DirItemButtons/DirItemButtons.module.css","Components/ToDoSections/DirItem/DirItemButtons/DirItemButtons.tsx","Components/ToDoSections/DirItem/DirItem.tsx","Components/ToDoSections/helper.ts","webpack://dev-tools/./src/Components/DirModal/DirModal.module.css?c561","Components/DirModal/DirModal.tsx","Components/ToDoSections/ToDoSections.tsx","webpack://dev-tools/./src/Components/ToDoList/ToDoList.module.css?5dc9","webpack://dev-tools/./src/Components/ToDoList/ToDoListItem/ToDoListItem.module.css?1806","Components/ToDoList/ToDoListItem/ToDoListItem.tsx","webpack://dev-tools/./src/Components/TodoModal/TodoModal.module.css?f871","Components/TodoModal/TodoModal.tsx","Helpers/Todo.tsx","Components/ToDoList/ToDoList.tsx","Pages/ToDoPage/ToDoPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ConfirmModal_container__gM2W5\",\"buttons\":\"ConfirmModal_buttons__gvsF7\"};","import React from 'react';\nimport styles from './ConfirmModal.module.css';\nimport { ConfirmModalProps } from './ConfirmModalProps';\nimport { Text } from '../Text';\nimport { Button } from '@mui/material';\n\nexport const ConfirmModal = ({\n  title,\n  handleModal,\n  onNext,\n}: ConfirmModalProps) => {\n  const handlerWrapper = (cb?: Function) => {\n    cb?.();\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text variant=\"h6\"> {title}</Text>\n      <div className={styles.buttons}>\n        <Button onClick={() => handlerWrapper()}>Cancel</Button>\n        <Button onClick={() => handlerWrapper(onNext)}>Yes!</Button>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoPage_container__mTquY\",\"menuButton\":\"ToDoPage_menuButton__b4Zu+\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoSections_container__rNbLx\",\"hide\":\"ToDoSections_hide__lwkvc\",\"addSection\":\"ToDoSections_addSection__gVOpv\",\"drawer\":\"ToDoSections_drawer__cj3xR\"};","import { DrawerProps } from '@mui/material';\nimport { TodoItem } from '../../Pages/ToDoPage/Todo';\n\nexport interface ToDoSectionsProps {\n  [key: string]: any;\n  list: TodoItem[];\n  setSelectedDir: Function;\n  selectedDir: string;\n}\n\nexport const drawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'permanent',\n  sx: {\n    '& .MuiDrawer-paper': {\n      position: 'unset',\n    },\n  },\n};\nexport const mobileDrawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'temporary',\n  sx: {\n    '& .MuiDrawer-paper': {\n      padding: '25px',\n      width: '70%',\n      height: '100%',\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DirItemButtons_container__OyrDD\"};","import React, { useContext } from 'react';\nimport styles from './DirItemButtons.module.css';\nimport { DirItemButtonsProps } from './DirItemButtonsProps';\nimport { IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ModalContext } from '../../../ModalContext/ModalContext';\nimport CheckIcon from '@mui/icons-material/Check';\nimport { ConfirmModal } from '../../../ConfirmModal';\nimport { TodoContext } from '../../../../Context/TodoContext/TodoContext';\nexport const DirItemButtons = ({\n  setEdit,\n  edit,\n  saveEdit,\n  dir,\n}: DirItemButtonsProps) => {\n  const { handleModal } = useContext(ModalContext);\n  const { deleteDir } = useContext(TodoContext);\n\n  const openDeleteModal = () => {\n    handleModal(\n      <ConfirmModal\n        title={`This action will delete all tasks associated to ${dir}`}\n        onNext={() => deleteDir(dir)}\n      />\n    );\n  };\n  return (\n    <div className={styles.container}>\n      {!edit ? (\n        <IconButton onClick={() => setEdit(!edit)} edge=\"end\" aria-label=\"edit\">\n          <EditIcon />\n        </IconButton>\n      ) : (\n        <IconButton onClick={() => saveEdit()} edge=\"end\" aria-label=\"save\">\n          <CheckIcon />\n        </IconButton>\n      )}\n      <IconButton onClick={openDeleteModal} edge=\"end\" aria-label=\"delete\">\n        <DeleteIcon />\n      </IconButton>\n    </div>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport { DirItemProps } from './DirItemProps';\nimport {\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n  useTheme,\n} from '@mui/material';\nimport { DirItemButtons } from './DirItemButtons';\nimport { TodoContext } from '../../../Context/TodoContext/TodoContext';\n\nexport const DirItem = ({\n  title,\n  onItemClick,\n  selectedDir,\n  Icon,\n}: DirItemProps) => {\n  const theme = useTheme();\n  const { editDir } = useContext(TodoContext);\n  const [edit, setEdit] = useState(false);\n  const [modText, setModText] = useState(title);\n  const saveEdit = () => {\n    setEdit(!edit);\n    editDir(modText, title);\n  };\n  return (\n    <ListItem\n      secondaryAction={\n        !Icon ? (\n          <DirItemButtons\n            setEdit={setEdit}\n            saveEdit={saveEdit}\n            edit={edit}\n            dir={title}\n          />\n        ) : null\n      }\n      key={title}\n      disablePadding\n    >\n      <ListItemButton selected={selectedDir} onClick={() => onItemClick(title)}>\n        {Icon ? (\n          <>\n            <ListItemIcon>\n              <Icon />\n            </ListItemIcon>\n            <ListItemText primary={title} />\n          </>\n        ) : (\n          <TextField\n            sx={{\n              width: '100%',\n              '& .MuiInputBase-input.Mui-disabled': {\n                opacity: 1,\n                WebkitTextFillColor:\n                  theme.palette.mode === 'dark' ? 'white' : 'rgba(0, 0, 0, 1)',\n                border: 'none',\n              },\n              '& .MuiInputBase-root.Mui-disabled': {\n                border: 'none',\n                outline: 'none',\n              },\n              input: { textAlign: 'center' },\n            }}\n            InputProps={{\n              disableUnderline: !edit,\n            }}\n            variant=\"standard\"\n            disabled={!edit}\n            onBlur={saveEdit}\n            onChange={(e) => setModText(e.target.value)}\n            value={modText}\n          />\n        )}\n      </ListItemButton>\n    </ListItem>\n  );\n};\n","import TodayIcon from '@mui/icons-material/Today';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport SubjectIcon from '@mui/icons-material/Subject';\nimport GradingIcon from '@mui/icons-material/Grading';\nexport const defualtFolders = [\n  {\n    title: 'All',\n    icon: SubjectIcon,\n  },\n  {\n    title: 'today`s tasks',\n    icon: TodayIcon,\n  },\n  {\n    title: 'Favorites',\n    icon: FavoriteIcon,\n  },\n  {\n    title: 'Complited',\n    icon: GradingIcon,\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DirModal_container__sVDQo\",\"input\":\"DirModal_input__Vz+OI\",\"title\":\"DirModal_title__PLwTo\",\"buttonContainer\":\"DirModal_buttonContainer__jW-IW\",\"button\":\"DirModal_button__vZPHg\"};","import React, { useContext, useState } from 'react';\nimport styles from './DirModal.module.css';\nimport { DirModalProps } from './DirModalProps';\nimport { Text } from '../Text';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { Button } from '@mui/material';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\n\nexport const DirModal = ({ handleModal }: DirModalProps) => {\n  const { setDirs, dirs, setSelectedDir } = useContext(TodoContext);\n  const [title, setTitle] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const onSave = () => {\n    if (!title) return setError('Required Field');\n    if (dirs.includes(title)) return setError('Already exists');\n    setDirs((p: string[]) => [...p, title]);\n    setSelectedDir(title);\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text className={styles.title} variant=\"h5\">\n        Add Directory\n      </Text>\n      <MultiLineInput\n        className={styles.input}\n        value={title}\n        error={!!error}\n        helperText={error}\n        label={'Title'}\n        onChange={setTitle}\n      />\n      <div className={styles.buttonContainer}>\n        <Button onClick={onSave} variant=\"contained\" className={styles.button}>\n          save\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport styles from './ToDoSections.module.css';\nimport { drawerProps, mobileDrawerProps } from './ToDoSectionsProps';\nimport {\n  Button,\n  Collapse,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport { DirItem } from './DirItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport { defualtFolders } from './helper';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { DirModal } from '../DirModal';\nimport { UserContext } from '../../Context/UserContext';\nimport { Text } from '../Text';\nexport const ToDoSections = ({\n  isSmallScreen,\n  setMobileOpen,\n  mobileOpen,\n}: any) => {\n  const props = isSmallScreen ? mobileDrawerProps : drawerProps;\n  const { selectedDir, dirs, setSelectedDir } = useContext(TodoContext);\n  const { handleModal } = useContext(ModalContext);\n  const { user } = useContext(UserContext);\n  const [open, setOpen] = React.useState(true);\n  const onItemClick = (dir: string) => {\n    setSelectedDir(dir);\n  };\n\n  const openSaveModal = () => {\n    handleModal(<DirModal />);\n  };\n\n  return (\n    <div className={styles.container}>\n      <Drawer\n        onClose={() => setMobileOpen(!mobileOpen)}\n        open={mobileOpen}\n        className={styles.drawer}\n        {...props}\n      >\n        <Text\n          style={{\n            alignSelf: 'center',\n            textAlign: 'center',\n            padding: '25px 0 25px',\n            width: '90%',\n          }}\n          variant=\"subtitle2\"\n          textOverflow=\"clip\"\n        >\n          {!user?.email\n            ? 'Log In with your Google Account to save your progress'\n            : `Logged in as ${user?.email}`}\n        </Text>\n        <Button\n          variant=\"contained\"\n          className={styles.addSection}\n          onClick={openSaveModal}\n        >\n          Add Directory +\n        </Button>\n        <List>\n          {defualtFolders.map((dir) => (\n            <DirItem\n              Icon={dir.icon}\n              selectedDir={selectedDir === dir.title}\n              onItemClick={() => onItemClick(dir.title)}\n              key={dir.title}\n              title={dir.title}\n            />\n          ))}\n          <ListItemButton onClick={() => setOpen(!open)}>\n            <ListItemIcon>\n              <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Directories\" />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItemButton>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {dirs.map((dir) => (\n              <DirItem\n                selectedDir={selectedDir === dir}\n                onItemClick={() => onItemClick(dir)}\n                key={dir}\n                title={dir}\n              />\n            ))}\n          </Collapse>\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoList_container__WvZ-g\",\"grid\":\"ToDoList_grid__pjiVL\",\"emptyList\":\"ToDoList_emptyList__zBu16\",\"addNote\":\"ToDoList_addNote__lZ3eL\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoListItem_container__Fy8jG\",\"dirTag\":\"ToDoListItem_dirTag__BWYUN\",\"dateText\":\"ToDoListItem_dateText__Gibgs\",\"title\":\"ToDoListItem_title__c-JFL\",\"desc\":\"ToDoListItem_desc__sBct-\",\"subContainer\":\"ToDoListItem_subContainer__cy54m\",\"content\":\"ToDoListItem_content__DnZ47\",\"bottom\":\"ToDoListItem_bottom__aR41l\",\"bottomButtons\":\"ToDoListItem_bottomButtons__gIpmi\",\"date\":\"ToDoListItem_date__MyGOE\"};","import React from 'react';\nimport styles from './ToDoListItem.module.css';\nimport { ToDoListItemProps } from './ToDoListItemProps';\nimport { Box, Card, Paper } from '@mui/material';\nimport { Text } from '../../Text';\nimport ScheduleIcon from '@mui/icons-material/Schedule';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { CIconButton } from '../../CIconButton';\n\nexport const ToDoListItem = ({\n  item,\n  onItemClick,\n  onComplete,\n  onFavorite,\n  onDelete,\n}: ToDoListItemProps) => {\n  const onItemPresssed = (func: Function) => (e: Event) => {\n    e.stopPropagation();\n    func(item.id);\n  };\n\n  return (\n    <Paper className={styles.container} onClick={onItemClick}>\n      <div className={styles.dirTag}> {item.dir}</div>\n      <div className={styles.subContainer}>\n        <div className={styles.content}>\n          <Text variant=\"h6\" className={styles.title}>\n            {item.title}\n          </Text>\n          <Text variant=\"body2\" className={styles.desc}>\n            {item.desc}\n          </Text>\n        </div>\n        <div className={styles.date}>\n          <Text className={styles.dateText}>{item.date}</Text>\n          <ScheduleIcon />\n        </div>\n        <div className={styles.bottom}>\n          <div className={styles.bottomButtons}>\n            <CIconButton\n              title={'Favorite'}\n              onClick={onItemPresssed(onFavorite)}\n            >\n              <FavoriteBorderIcon\n                htmlColor={item.favorite ? 'red' : undefined}\n              />\n            </CIconButton>\n            <CIconButton\n              title={item.completed ? 'Done' : 'InProgress'}\n              onClick={onItemPresssed(onComplete)}\n            >\n              <TaskAltIcon htmlColor={item.completed ? 'green' : 'orange'} />\n            </CIconButton>\n            <CIconButton title={'Delete'} onClick={onItemPresssed(onDelete)}>\n              <DeleteOutlineIcon />\n            </CIconButton>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TodoModal_container__xSmmQ\",\"bottomContainer\":\"TodoModal_bottomContainer__8zjGV\",\"label\":\"TodoModal_label__2pqOA\",\"button\":\"TodoModal_button__6Rv4X\",\"titleInput\":\"TodoModal_titleInput__lOl0g\",\"content\":\"TodoModal_content__bXfoP\",\"descInput\":\"TodoModal_descInput__Mo6Yd\",\"datePicker\":\"TodoModal_datePicker__Tyxuz\",\"dropDown\":\"TodoModal_dropDown__D2adS\"};","import React, { useContext, useMemo, useState } from 'react';\nimport styles from './TodoModal.module.css';\nimport { TodoModalProps } from './TodoModalProps';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { Button, InputLabel, MenuItem, Select } from '@mui/material';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport dayjs from 'dayjs';\n\nexport const TodoModal = ({ item, handleModal }: TodoModalProps) => {\n  const { addTodo, dirs, selectedDir } = useContext(TodoContext);\n  const [formValues, setFormValues] = useState({\n    title: item?.title ?? '',\n    desc: item?.desc ?? '',\n    dir: item?.dir ?? selectedDir,\n    date: item?.date ? item.date : dayjs().format('YYYY-MM-DD'),\n  });\n  const [formErrors, setFormErrors] = useState({\n    title: '',\n    dir: '',\n  });\n  const { title, desc, dir, date } = formValues;\n  const onChange = (val: any, key: string) => {\n    setFormValues({ ...formValues, [key]: val });\n  };\n  const validateForm = () => {\n    if (\n      !formValues.dir ||\n      formValues.dir === 'All' ||\n      formValues.dir === 'today`s tasks'\n    ) {\n      setFormErrors({ ...formErrors, dir: 'Requird Field' });\n      return false;\n    }\n\n    if (!formValues.title) {\n      setFormErrors({ ...formErrors, title: 'Requird Field' });\n      return false;\n    }\n    return true;\n  };\n  const onclick = (e: any) => {\n    if (validateForm()) {\n      addTodo({ ...item, ...formValues });\n      handleModal();\n    }\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <MultiLineInput\n          value={title}\n          required={true}\n          error={!!formErrors.title}\n          helperText={formErrors.title}\n          maxRows={1}\n          label=\"Title\"\n          onChange={(val) => onChange(val, 'title')}\n          className={styles.titleInput}\n        />\n        <div className={styles.bottomContainer}>\n          <InputLabel className={styles.label}>Task Date</InputLabel>\n          <DatePicker\n            value={dayjs(date)}\n            onChange={(a) => onChange(dayjs(a).format('YYYY-MM-DD'), 'date')}\n            className={styles.datePicker}\n          />\n          <InputLabel className={styles.label}>Select Directory *</InputLabel>\n          <Select\n            required={true}\n            error={!!formErrors.dir}\n            value={dir}\n            onChange={(e) => {\n              onChange(e.target.value, 'dir');\n            }}\n            className={styles.dropDown}\n          >\n            {dirs.map((item: string) => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n        <MultiLineInput\n          value={desc}\n          minRows={3}\n          label=\"Description\"\n          maxRows={8}\n          onChange={(val) => onChange(val, 'desc')}\n          className={styles.descInput}\n        />\n      </div>\n      <Button onClick={onclick} className={styles.button} variant=\"contained\">\n        {item ? 'save' : 'Update'}\n      </Button>\n    </div>\n  );\n};\n","import dayjs from 'dayjs';\nimport { TodoItem } from '../Pages/ToDoPage/Todo';\n\nexport const getFilterFunction = (dir: string, list: TodoItem[]) => {\n  let index: number = defualtFolders.findIndex((l) => l.title === dir);\n  if (index === -1) return list.filter((l) => l.dir === dir);\n  return list.filter(defualtFolders[index].filterBy);\n};\n\nconst defualtFolders = [\n  {\n    title: 'All',\n    filterBy: (a: any) => true,\n  },\n  {\n    title: 'today`s tasks',\n    filterBy: (a: any) => a.date === dayjs().format('YYYY-MM-DD'),\n  },\n  {\n    title: 'Favorites',\n    filterBy: (a: any) => a.favorite === true,\n  },\n  {\n    title: 'Complited',\n    filterBy: (a: any) => a.completed === true,\n  },\n];\n\nexport const emptyList: Record<string, string> = {\n  Complited:\n    '<strong>No completed tasks yet.</strong>\\n  Start completing tasks to see them here!',\n  Favorites:\n    '<strong>No favorite tasks yet.</strong>\\n Add tasks to your favorites to see them here!',\n  All: '<strong>No tasks found.</strong>\\n Add tasks to see them here!',\n  'today`s tasks':\n    '<strong>No tasks for today.</strong>\\n Add tasks to see them here!',\n};\n","import React, { useCallback, useContext, useMemo } from 'react';\nimport styles from './ToDoList.module.css';\nimport { ToDoListItem } from './ToDoListItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { TodoModal } from '../TodoModal';\nimport { emptyList, getFilterFunction } from '../../Helpers/Todo';\nimport { Text } from '../Text';\n\nexport const ToDoList = () => {\n  const { list, onDelete, onFavorite, onComplete, selectedDir } =\n    useContext(TodoContext);\n  const arrayList = list ? Object.values(list) : [];\n\n  const { handleModal } = useContext(ModalContext);\n  const todoList = useMemo(() => {\n    return getFilterFunction(selectedDir, arrayList);\n  }, [selectedDir, list]);\n\n  const onItemClick = useCallback(\n    (id: string) => {\n      const item = arrayList.filter((i) => i.id === id)[0];\n      handleModal(<TodoModal item={item} />);\n    },\n    [list, handleModal]\n  );\n  const hideAddButton = ['Favorites', 'Complited', 'All', 'today`s tasks'];\n  const Empty = () => {\n    if (hideAddButton.includes(selectedDir) && todoList.length === 0) {\n      return (\n        <div className={styles.emptyList}>\n          <Text\n            style={{ whiteSpace: 'pre-line' }}\n            dangerouslySetInnerHTML={{\n              __html: emptyList[selectedDir as keyof object],\n            }}\n          />\n        </div>\n      );\n    } else if (hideAddButton.includes(selectedDir)) {\n      return null;\n    }\n    return (\n      <div className={styles.addNote} onClick={() => onItemClick('-1')}>\n        <Text> Add Task +</Text>\n      </div>\n    );\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.grid}>\n        {todoList.map((item) => (\n          <ToDoListItem\n            key={item.id}\n            onItemClick={() => onItemClick(item.id)}\n            onComplete={onComplete}\n            onFavorite={onFavorite}\n            onDelete={onDelete}\n            item={item}\n          />\n        ))}\n\n        <Empty />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styles from './ToDoPage.module.css';\nimport { ToDoSections } from '../../Components/ToDoSections';\nimport { ToDoList } from '../../Components/ToDoList';\nimport { Fab, useMediaQuery } from '@mui/material';\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen';\n\nconst ToDoPage = () => {\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n  const [mobileOpen, setMobileOpen] = useState<boolean>(!isSmallScreen);\n  return (\n    <div className={styles.container}>\n      {isSmallScreen && (\n        <Fab\n          className={styles.menuButton}\n          onClick={() => setMobileOpen(!mobileOpen)}\n        >\n          <MenuOpenIcon />\n        </Fab>\n      )}\n      <ToDoSections\n        mobileOpen={mobileOpen}\n        setMobileOpen={setMobileOpen}\n        isSmallScreen={isSmallScreen}\n      />\n      <ToDoList />\n    </div>\n  );\n};\nexport default ToDoPage;\n"],"names":["ConfirmModal","_ref","title","handleModal","onNext","handlerWrapper","cb","_jsxs","className","styles","children","Text","variant","_jsx","Button","onClick","drawerProps","anchor","sx","position","mobileDrawerProps","padding","width","height","DirItemButtons","setEdit","edit","saveEdit","dir","useContext","ModalContext","deleteDir","TodoContext","IconButton","edge","CheckIcon","EditIcon","concat","DeleteIcon","DirItem","onItemClick","selectedDir","Icon","theme","useTheme","editDir","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","modText","setModText","ListItem","secondaryAction","disablePadding","ListItemButton","selected","_Fragment","ListItemIcon","ListItemText","primary","TextField","opacity","WebkitTextFillColor","palette","mode","border","outline","input","textAlign","InputProps","disableUnderline","disabled","onBlur","onChange","e","target","value","defualtFolders","icon","SubjectIcon","TodayIcon","FavoriteIcon","GradingIcon","DirModal","_useContext","setDirs","dirs","setSelectedDir","setTitle","error","setError","MultiLineInput","helperText","label","includes","p","_toConsumableArray","ToDoSections","isSmallScreen","setMobileOpen","mobileOpen","props","user","UserContext","_React$useState","React","_React$useState2","open","setOpen","Drawer","_objectSpread","onClose","style","alignSelf","textOverflow","email","List","map","FolderIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","ToDoListItem","item","onComplete","onFavorite","onDelete","onItemPresssed","func","stopPropagation","id","Paper","desc","date","ScheduleIcon","CIconButton","FavoriteBorderIcon","htmlColor","favorite","undefined","completed","TaskAltIcon","DeleteOutlineIcon","TodoModal","_item$title","_item$desc","_item$dir","addTodo","dayjs","format","formValues","setFormValues","formErrors","setFormErrors","val","key","_defineProperty","required","maxRows","InputLabel","DatePicker","a","Select","MenuItem","minRows","filterBy","emptyList","Complited","Favorites","All","ToDoList","list","arrayList","Object","values","todoList","useMemo","index","findIndex","l","filter","getFilterFunction","useCallback","i","hideAddButton","Empty","length","whiteSpace","dangerouslySetInnerHTML","__html","useMediaQuery","Fab","MenuOpenIcon"],"sourceRoot":""}