{"version":3,"file":"static/js/formatter.37c9b876.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?0789","Components/DiffChecker/InputButtons/InputButtons.tsx","Constant/Types.ts","Constant/DropDown.ts","Helpers/Clipboard.ts","Helpers/Json.ts","Helpers/Scroll.ts","webpack://dev-tools/./src/Pages/Formatter/Formatter.module.css?feee","Components/DropZone/DropZone.tsx","webpack://dev-tools/./src/Components/FetchModal/FetchModal.module.css?b24b","Hooks/useFetch/useFetch.ts","Helpers/Url.ts","Components/FetchModal/FetchModal.tsx","webpack://dev-tools/./src/Pages/Formatter/FormatterBody/FormatterBody.module.css?94f3","Hooks/useLocalStorage/useLocalStorage.ts","Pages/Formatter/FormatterBody/FormatterBody.tsx","webpack://dev-tools/./src/Components/JsonTree/JsonTree.module.css?b7cb","Constant/CheckBox.ts","Components/CheckBox/CheckBox.tsx","Components/JsonTree/JsonTree.tsx","webpack://dev-tools/./src/Pages/Formatter/ResContainer/ResContainer.module.css?4d28","Pages/Formatter/ResContainer/ResContainer.tsx","Pages/Formatter/FormatterProps.ts","webpack://dev-tools/./src/Components/HistoryModal/HistoryModal.module.css?2439","Components/HistoryModal/HistoryModal.tsx","Pages/Formatter/Formatter.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__7dfFm\"};","import React from 'react';\r\nimport styles from './InputButtons.module.css';\r\nimport { InputButtonsProps } from './InputButtonsProps';\r\nimport { IconButton, InputAdornment } from '@mui/material';\r\nimport {\r\n  Description,\r\n  CallReceivedSharp,\r\n  CallMadeSharp,\r\n} from '@material-ui/icons';\r\nimport {\r\n  handleCopy,\r\n  handleFile,\r\n  handlePaste,\r\n} from '../../../Helpers/Clipboard';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { CIconButton } from '../../CIconButton';\r\nexport const InputButtons = ({\r\n  onChange,\r\n  value,\r\n  type,\r\n  withFile = true,\r\n}: InputButtonsProps) => {\r\n  return (\r\n    <InputAdornment className={styles.container} position=\"end\">\r\n      <CIconButton\r\n        placement=\"right\"\r\n        title={'Copy'}\r\n        onClick={() => handleCopy(value)}\r\n      >\r\n        <CallMadeSharp />\r\n      </CIconButton>\r\n      <CIconButton\r\n        placement=\"left\"\r\n        title={'Paste'}\r\n        onClick={() => handlePaste(onChange)}\r\n      >\r\n        <CallReceivedSharp />\r\n      </CIconButton>\r\n      <CIconButton\r\n        placement=\"right\"\r\n        title={'Delete'}\r\n        onClick={() => onChange('')}\r\n      >\r\n        <DeleteIcon />\r\n      </CIconButton>\r\n      {withFile && (\r\n        <IconButton onClick={() => {}}>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.json\"\r\n            id={`fileInput${type}`}\r\n            onChange={(e) => handleFile(e, onChange)}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <label htmlFor={`fileInput${type}`}>\r\n            <Description />\r\n          </label>\r\n        </IconButton>\r\n      )}\r\n    </InputAdornment>\r\n  );\r\n};\r\n","export type IJsonSpace = {\r\n  label: string;\r\n  value: number;\r\n};\r\nexport type ICheckBox = {\r\n  id: number;\r\n  label: string;\r\n  state: boolean;\r\n};\r\nexport type IFlexOptions = {\r\n  type: string;\r\n  options?: any;\r\n  range?: boolean;\r\n};\r\nexport const alignSelfs = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'space-between',\r\n  'space-around',\r\n  'stretch',\r\n  'auto',\r\n] as const;\r\nexport const flexDirections = [\r\n  'row',\r\n  'column',\r\n  'row-reverse',\r\n  'column-reverse',\r\n] as const;\r\nexport const flexWraps = ['nowrap', 'wrap', 'wrap-reverse'] as const;\r\nexport const justifyContentValues = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'space-between',\r\n  'space-around',\r\n] as const;\r\nexport const alignItemsValues = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'baseline',\r\n  'stretch',\r\n] as const;\r\nexport const alignContentValues = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'space-between',\r\n  'space-around',\r\n  'stretch',\r\n] as const;\r\nexport const flexBasis = [\r\n  'auto',\r\n  'content',\r\n  'fit-content',\r\n  'max-content',\r\n  'min-content',\r\n  'none',\r\n  'initial',\r\n  'inherit',\r\n] as const;\r\n","import {\r\n  alignContentValues,\r\n  alignItemsValues,\r\n  alignSelfs,\r\n  flexBasis,\r\n  flexDirections,\r\n  flexWraps,\r\n  IFlexOptions,\r\n  IJsonSpace,\r\n  justifyContentValues,\r\n} from './Types';\r\n\r\nexport const jsonSpace: IJsonSpace[] = [\r\n  {\r\n    label: '4 Space Tab',\r\n    value: 4,\r\n  },\r\n  {\r\n    label: '3 Space Tab',\r\n    value: 3,\r\n  },\r\n  {\r\n    label: '2 Space Tab',\r\n    value: 2,\r\n  },\r\n  {\r\n    label: '1 Space Tab',\r\n    value: 1,\r\n  },\r\n];\r\nexport const flexOptions: IFlexOptions[] = [\r\n  {\r\n    options: flexDirections,\r\n    type: 'flexDirection',\r\n  },\r\n  {\r\n    options: justifyContentValues,\r\n    type: 'justifyContent',\r\n  },\r\n  {\r\n    options: alignItemsValues,\r\n    type: 'alignItems',\r\n  },\r\n  {\r\n    options: alignContentValues,\r\n    type: 'alignContent',\r\n  },\r\n  {\r\n    options: flexWraps,\r\n    type: 'flexWrap',\r\n  },\r\n];\r\nexport type Mutable<Type> = {\r\n  -readonly [Key in keyof Type]: Type[Key];\r\n};\r\nexport const flexItemOptions: IFlexOptions[] = [\r\n  {\r\n    type: 'order',\r\n    range: true,\r\n  },\r\n  {\r\n    type: 'flexGrow',\r\n    range: true,\r\n  },\r\n  {\r\n    type: 'flexShrink',\r\n    range: true,\r\n  },\r\n  {\r\n    type: 'flexBasis',\r\n    options: flexBasis,\r\n  },\r\n  {\r\n    type: 'alignSelf',\r\n    options: alignSelfs,\r\n  },\r\n];\r\n\r\nexport const jsonExample = {\r\n  store: {\r\n    book: [\r\n      {\r\n        category: 'reference',\r\n        author: 'Nigel Rees',\r\n        title: 'Sayings of the Century',\r\n        price: 8.95,\r\n      },\r\n      {\r\n        category: 'fiction',\r\n        author: 'Evelyn Waugh',\r\n        title: 'Sword of Honour',\r\n        price: 12.99,\r\n      },\r\n      {\r\n        category: 'fiction',\r\n        author: 'J. R. R. Tolkien',\r\n        title: 'The Lord of the Rings',\r\n        isbn: '0-395-19395-8',\r\n        price: 22.99,\r\n      },\r\n    ],\r\n    bicycle: { color: 'red', price: 19.95 },\r\n  },\r\n};\r\n","export const handlePaste = (setValue: (t: string) => void) => {\r\n  navigator.clipboard.readText().then((text) => setValue(text));\r\n};\r\nexport const handleCopy = (t: string) => {\r\n  navigator.clipboard\r\n    .writeText(t)\r\n    .then(() => {\r\n      console.log('Text copied to clipboard');\r\n    })\r\n    .catch((err) => {\r\n      console.error('Error copying text to clipboard:', err);\r\n    });\r\n};\r\nexport const handleFile = (\r\n  e: { target: { files: any } },\r\n  onChange: (t: any) => void\r\n) => {\r\n  const file = e.target.files?.[0];\r\n\r\n  if (file.type === 'application/json' || file.type === 'text/plain') {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target?.result;\r\n      onChange(content);\r\n    };\r\n    reader.readAsText(file);\r\n  } else {\r\n    alert('Invalid file type. Only JSON and TXT files are supported.');\r\n    return;\r\n  }\r\n};\r\n","import { IHooksDescription } from '../Constant/Hooks';\r\n\r\nexport function prettifyJSON(jsonStr: string | any[]) {\r\n  if (!jsonStr || typeof jsonStr !== 'string') {\r\n    return 'Invalid JSON';\r\n  }\r\n\r\n  let prettyJson = '';\r\n  let indentLevel = 0;\r\n  let inString = false;\r\n\r\n  for (let i = 0; i < jsonStr.length; i++) {\r\n    const char = jsonStr[i];\r\n\r\n    if (inString) {\r\n      prettyJson += char;\r\n      if (char === '\"' && jsonStr[i - 1] !== '\\\\') {\r\n        inString = false;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    switch (char) {\r\n      case '{':\r\n      case '[':\r\n        prettyJson += char + '\\n' + ' '.repeat((indentLevel + 1) * 2);\r\n        indentLevel++;\r\n        break;\r\n\r\n      case '}':\r\n      case ']':\r\n        indentLevel = Math.max(0, indentLevel - 1);\r\n        prettyJson += '\\n' + ' '.repeat(indentLevel * 2) + char;\r\n        break;\r\n\r\n      case ':':\r\n        prettyJson += char + ' ';\r\n        break;\r\n\r\n      case ',':\r\n        prettyJson += char + '\\n' + ' '.repeat(indentLevel * 2);\r\n        break;\r\n\r\n      case '\"':\r\n        prettyJson += char;\r\n        inString = true;\r\n        break;\r\n\r\n      default:\r\n        prettyJson += char;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return prettyJson;\r\n}\r\nexport function generateInterfaceFromJson(json: string): string {\r\n  const parsedJson = JSON.parse(json);\r\n  const rootInterfaceName = 'Root';\r\n\r\n  function getInterfaceFromObject(obj: any, name: string): string {\r\n    const keys = Object.keys(obj);\r\n    let interfaceString = `interface ${name} {\\n`;\r\n\r\n    keys.forEach((key) => {\r\n      const value = obj[key];\r\n      if (Array.isArray(value)) {\r\n        const arrayInterfaceName = `${name}_${key}_Item`;\r\n        interfaceString += `  ${key}: ${arrayInterfaceName}[];\\n`;\r\n        interfaceString += getInterfaceFromObject(value[0], arrayInterfaceName);\r\n      } else if (typeof value === 'object') {\r\n        const objectInterfaceName = `${key}`;\r\n        interfaceString += `  ${key}: ${objectInterfaceName};\\n`;\r\n        interfaceString += getInterfaceFromObject(value, objectInterfaceName);\r\n      } else {\r\n        interfaceString += `  ${key}: ${typeof value};\\n`;\r\n      }\r\n    });\r\n\r\n    interfaceString += '}\\n';\r\n    return interfaceString;\r\n  }\r\n\r\n  const interfaceString = getInterfaceFromObject(parsedJson, rootInterfaceName);\r\n  return interfaceString;\r\n}\r\nexport const extractTitles = (array: IHooksDescription[]) => {\r\n  return array.map((item, i) => item.title);\r\n};\r\n","import { IScrollTo } from './Types';\r\nimport './scrollCss.css';\r\nexport const scrollTo = ({\r\n  id,\r\n  behavior = 'smooth',\r\n  block = 'start',\r\n  withHighlight = false,\r\n}: IScrollTo) => {\r\n  const element = document.getElementById(id);\r\n  if (element) {\r\n    element.scrollIntoView({ behavior, block });\r\n    if (withHighlight) {\r\n      element.classList.add('custom-highlighted-class');\r\n      setTimeout(() => {\r\n        element && element.classList.remove('custom-highlighted-class');\r\n      }, 3000);\r\n    }\r\n  } else {\r\n    console.log('ASdasd', element);\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Formatter_container__z1Zza\",\"separator\":\"Formatter_separator__6hmhI\",\"headline\":\"Formatter_headline__fX3Ly\",\"title\":\"Formatter_title__+Rl3t\",\"history\":\"Formatter_history__P7MFR\"};","import React, { useContext } from 'react';\r\nimport './DropZone.css';\r\nimport { DropZoneProps } from './DropZoneProps';\r\nimport { Text } from '../Text';\r\nimport { AppContext } from '../ThemeContext/ThemeContext';\r\n\r\nexport const DropZone = ({\r\n  onChange,\r\n  fileName,\r\n  setFileName,\r\n}: DropZoneProps) => {\r\n  const { isDark } = useContext(AppContext);\r\n\r\n  const handleDragOver = (e: {\r\n    preventDefault: () => void;\r\n    stopPropagation: () => void;\r\n  }) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDrop = (e: {\r\n    preventDefault: () => void;\r\n    dataTransfer: { files: any };\r\n  }) => {\r\n    e.preventDefault();\r\n\r\n    const file = e.dataTransfer.files[0];\r\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\r\n      setFileName(file.name);\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const content = e.target?.result;\r\n        onChange(content);\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert('Invalid file type. Only JSON and TXT files are supported.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: { target: { files: any } }) => {\r\n    const file = e.target.files[0];\r\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\r\n      setFileName(file.name);\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const content = e.target?.result;\r\n        onChange(content);\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert('Invalid file type. Only JSON and TXT files are supported.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form id=\"form-file-upload\">\r\n      <label\r\n        id={isDark ? 'dark-label-file-upload' : 'label-file-upload'}\r\n        htmlFor=\"input-file-upload\"\r\n        onDragOver={handleDragOver}\r\n        onDrop={handleDrop}\r\n      >\r\n        {!fileName ? (\r\n          <div>\r\n            <Text>Drag and drop your file here or click for file explorer</Text>\r\n          </div>\r\n        ) : (\r\n          <Text>{fileName}</Text>\r\n        )}\r\n      </label>\r\n      <input\r\n        accept=\".txt,.json\"\r\n        type=\"file\"\r\n        id=\"input-file-upload\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FetchModal_container__fWYzd\",\"input\":\"FetchModal_input__fcW8o\",\"button\":\"FetchModal_button__mqpvX\",\"buttonContainer\":\"FetchModal_buttonContainer__71CDu\"};","import { useState } from 'react';\r\nimport { isUrlValid } from '../../Helpers/Url';\r\nimport { FetchProps, FetchState } from './useFetchProps';\r\n\r\nexport const useFetch = (): FetchState => {\r\n  const [error, setError] = useState<string>('');\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const fetchData = ({ url }: FetchProps): Promise<any> => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!isUrlValid(url)) {\r\n        setError('Invalid Url');\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      fetch(url)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    });\r\n  };\r\n\r\n  return {\r\n    error,\r\n    isLoading,\r\n    setError,\r\n    fetchData,\r\n  };\r\n};\r\n","export const isUrlValid = (url: string) => {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch (_) {\r\n    return false;\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport styles from './FetchModal.module.css';\r\nimport { FetchModalProps } from './FetchModalProps';\r\nimport { FileCopy } from '@material-ui/icons';\r\nimport { useFetch } from '../../Hooks/useFetch/';\r\nimport { handlePaste } from '../../Helpers/Clipboard';\r\nexport const FetchModal = ({ onChange, handleModal }: FetchModalProps) => {\r\n  const [value, setValue] = useState<string>(\r\n    'https://jsonplaceholder.typicode.com/todos'\r\n  );\r\n  const { error, isLoading, fetchData, setError } = useFetch();\r\n\r\n  const loadData = () => {\r\n    setError('');\r\n    fetchData({ url: value }).then((data: any) => {\r\n      onChange(JSON.stringify(data, null, 5));\r\n      handleModal();\r\n    });\r\n  };\r\n  const handleChange = (e: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <TextField\r\n        label=\"Url\"\r\n        error={!!error}\r\n        helperText={error}\r\n        variant=\"outlined\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={styles.input}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => handlePaste(setValue)}>\r\n                <FileCopy />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <div className={styles.buttonContainer}>\r\n        <Button\r\n          disabled={!value}\r\n          onClick={loadData}\r\n          className={styles.button}\r\n          variant=\"contained\"\r\n        >\r\n          {isLoading ? (\r\n            <CircularProgress\r\n              style={{ color: 'white' }}\r\n              color=\"success\"\r\n              size={24}\r\n            />\r\n          ) : (\r\n            'Load'\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputs\":\"FormatterBody_inputs__RsUpU\",\"buttonContainer\":\"FormatterBody_buttonContainer__Qpp08\",\"subContainer\":\"FormatterBody_subContainer__myNyl\",\"input\":\"FormatterBody_input__Md1fX\",\"info\":\"FormatterBody_info__SEEHi\",\"button\":\"FormatterBody_button__iqYCP\",\"reset\":\"FormatterBody_reset__jNoho\",\"checkBox\":\"FormatterBody_checkBox__ouHv8\"};","import { useState, useEffect } from 'react';\r\n\r\nexport const useLocalStorage = <T extends unknown>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\r\n  const [value, setValue] = useState<T>(() => {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue !== null ? JSON.parse(storedValue) : initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { Button } from '@mui/material';\r\nimport React, { useContext, useState, useRef } from 'react';\r\nimport { MultiLineInput } from '../../../Components';\r\nimport { DropZone } from '../../../Components/DropZone';\r\nimport { FetchModal } from '../../../Components/FetchModal';\r\nimport { ModalContext } from '../../../Components/ModalContext/ModalContext';\r\nimport { jsonExample } from '../../../Constant/DropDown';\r\nimport { prettifyJSON } from '../../../Helpers/Json';\r\nimport styles from './FormatterBody.module.css';\r\nimport { FormatterBodyProps } from './FormatterBodyProps';\r\nimport { InputButtons } from '../../../Components/DiffChecker/InputButtons';\r\nimport { useLocalStorage } from '../../../Hooks/useLocalStorage';\r\n\r\nexport const FormatterBody = ({\r\n  setRes,\r\n  setError,\r\n  error,\r\n  raw,\r\n  setRaw,\r\n}: FormatterBodyProps) => {\r\n  const [fileName, setFileName] = useState<string>('');\r\n  const { handleModal } = useContext(ModalContext);\r\n  const countRef = useRef<number>(0);\r\n  const resetFields = () => {\r\n    setRaw('');\r\n    setFileName('');\r\n    setError('');\r\n    setRes({ json: false, res: '' });\r\n  };\r\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\r\n  const handleSaveSearch = (search: string) => {\r\n    if (!searches.includes(search)) {\r\n      const updatedSearches = [...searches, search];\r\n      setSearches(updatedSearches);\r\n    }\r\n  };\r\n  const setExample = () => {\r\n    setRaw(JSON.stringify(jsonExample));\r\n  };\r\n  const formatCode = () => {\r\n    try {\r\n      const formattedData = JSON.stringify(JSON.parse(raw), null, 5);\r\n      setRes({ json: true, res: JSON.parse(formattedData) });\r\n      setRaw(formattedData);\r\n      setError('');\r\n      handleSaveSearch(formattedData);\r\n    } catch (error: any) {\r\n      if (countRef.current === 0) {\r\n        countRef.current++;\r\n        setRaw(prettifyJSON(raw));\r\n      }\r\n      setError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.inputs}>\r\n      <div className={styles.input}>\r\n        <MultiLineInput\r\n          minRows={25}\r\n          placeholder={'{ Paste / Write Your json here... }'}\r\n          id=\"resInput\"\r\n          onChange={setRaw}\r\n          value={raw}\r\n          helperText={error}\r\n          error={!!error}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputButtons\r\n                withFile={false}\r\n                type={'Changed'}\r\n                value={raw}\r\n                onChange={setRaw}\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.buttonContainer}>\r\n        <DropZone\r\n          setError={setError}\r\n          fileName={fileName}\r\n          setFileName={setFileName}\r\n          onChange={setRaw}\r\n        />\r\n        <div className={styles.reset}>\r\n          <Button\r\n            style={{ width: '50%' }}\r\n            color={'error'}\r\n            onClick={resetFields}\r\n          >\r\n            Reset\r\n          </Button>\r\n\r\n          <Button style={{ width: '50%' }} onClick={setExample}>\r\n            Example\r\n          </Button>\r\n          <Button\r\n            style={{ width: '100%' }}\r\n            onClick={() => handleModal(<FetchModal onChange={setRaw} />)}\r\n          >\r\n            Load From Url\r\n          </Button>\r\n          <div className={styles.checkBox}></div>\r\n          <Button\r\n            className={styles.button}\r\n            variant=\"contained\"\r\n            disabled={!raw}\r\n            onClick={formatCode}\r\n          >\r\n            format\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"JsonTree_container__64BdE\",\"checkboxs\":\"JsonTree_checkboxs__Ipa6s\",\"slider\":\"JsonTree_slider__+cJMY\"};","import { ICheckBox } from './Types';\r\n\r\nexport const editorOptions: ICheckBox[] = [\r\n  {\r\n    id: 1,\r\n    label: 'Dark theme',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Data Types',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: 'Collapsed',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: 'Sort Keys',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: 'length',\r\n    state: false,\r\n  },\r\n];\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\r\nimport React from 'react';\r\nimport { CheckBoxProps } from './CheckBoxProps';\r\n\r\nexport const CheckBox = ({ options, setOptions, style }: CheckBoxProps) => {\r\n  return (\r\n    <FormGroup style={{ flexDirection: 'row' }} className={style}>\r\n      {options.map((c) => (\r\n        <FormControlLabel\r\n          key={c.id}\r\n          control={\r\n            <Checkbox checked={c.state} onClick={() => setOptions(c.id)} />\r\n          }\r\n          label={c.label}\r\n        />\r\n      ))}\r\n    </FormGroup>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useContext, useState } from 'react';\r\nimport styles from './JsonTree.module.css';\r\nimport { JsonTreeProps } from './JsonTreeProps';\r\nimport ReactJson from 'react-json-view';\r\nimport { editorOptions } from '../../Constant/CheckBox';\r\nimport { CheckBox } from '../CheckBox';\r\nimport { ICheckBox } from '../../Constant/Types';\r\nimport { AppContext } from '../ThemeContext/ThemeContext';\r\nimport { useMediaQuery } from '../../Hooks/useMediaQuery';\r\nimport { Slider } from '@mui/material';\r\nimport { Text } from '../Text';\r\n\r\nexport const JsonTree = ({ data,isSmallScreen }: JsonTreeProps) => {\r\n  const { isDark } = useContext(AppContext);\r\n  const [options, setOptions] = useState<ICheckBox[]>(editorOptions);\r\n  const [space, setSpace] = useState<number>(isSmallScreen ? 4 : 10);\r\n  const handleChange = (id: number) => {\r\n    const changedIndex: number = options.find((i) => i.id === id)?.id! - 1;\r\n    const modifiedArray = [...options];\r\n    modifiedArray[changedIndex] = {\r\n      ...modifiedArray[changedIndex],\r\n      state: !modifiedArray[changedIndex].state,\r\n    };\r\n    setOptions(modifiedArray);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n        <CheckBox\r\n          style={styles.checkboxs}\r\n          options={options}\r\n          setOptions={handleChange}\r\n        />\r\n        <div className={styles.slider}>\r\n          <Text>Space:</Text>\r\n          <Slider\r\n            onChange={(e: any) => setSpace(e.target.value)}\r\n            min={0}\r\n            max={15}\r\n            value={space}\r\n            valueLabelDisplay=\"auto\"\r\n            disableSwap\r\n          />\r\n        </div>\r\n      </div>\r\n      <ReactJson\r\n        style={{\r\n          width: '100%',\r\n          backgroundColor: options[0].state || isDark ? 'black' : 'white',\r\n        }}\r\n        src={data}\r\n        indentWidth={space}\r\n        onEdit={() => {}}\r\n        iconStyle={'circle'}\r\n        theme={options[0].state || isDark ? 'chalk' : undefined}\r\n        displayDataTypes={options[1].state}\r\n        collapsed={options[2].state ? 2 : undefined}\r\n        sortKeys={options[3].state}\r\n        displayObjectSize={options[4].state}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResContainer_container__gS2N+\"};","import React, { useEffect } from 'react';\r\nimport { JsonTree } from '../../../Components/JsonTree';\r\nimport { scrollTo } from '../../../Helpers/Scroll';\r\nimport styles from './ResContainer.module.css';\r\nimport { ResContainerProps } from './ResContainerProps';\r\nimport { useMediaQuery } from '../../../Hooks/useMediaQuery';\r\n\r\nexport const ResContainer = ({ data }: ResContainerProps) => {\r\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\r\n\r\n  useEffect(() => {\r\n    if (data.res !== '') scrollTo({ id: 'result' });\r\n  }, [data.res]);\r\n  return (\r\n    <div id=\"result\" className={styles.container}>\r\n      {data.res !== '' && <JsonTree isSmallScreen={isSmallScreen} data={data.res !== '' && data.res} />}\r\n    </div>\r\n  );\r\n};\r\n","export interface FormatterProps {\r\n  [key: string]: any;\r\n}\r\nexport interface ResState {\r\n  json: boolean;\r\n  res: string;\r\n}\r\nexport const ResInitState = {\r\n  json: true,\r\n  res: '',\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HistoryModal_container__zJzJR\"};","import React, { useEffect, useState } from 'react';\r\nimport styles from './HistoryModal.module.css';\r\nimport { HistoryModalProps } from './HistoryModalProps';\r\nimport { Text } from '../Text';\r\nimport { useLocalStorage } from '../../Hooks/useLocalStorage';\r\nimport { ButtonBase } from '@mui/material';\r\n\r\nexport const HistoryModal = ({ onClick, handleModal }: HistoryModalProps) => {\r\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\r\n\r\n  const onItemPressed = (e: any) => {\r\n    onClick(e.target.innerText);\r\n    handleModal();\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <Text variant=\"h6\"> Recent</Text>\r\n      {searches.length!==0 ? (\r\n        searches.map((s: string, i: number) => (\r\n          <ButtonBase key={i} onClick={onItemPressed}>\r\n            <Text\r\n              sx={{\r\n                display: '-webkit-box',\r\n                overflow: 'hidden',\r\n                WebkitBoxOrient: 'vertical',\r\n                WebkitLineClamp: 1,\r\n              }}\r\n              variant=\"body1\"\r\n            >\r\n              {s.toString()}\r\n            </Text>\r\n          </ButtonBase>\r\n        ))\r\n      ) : (\r\n        <Text>There is no recent Data</Text>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useContext, useState } from 'react';\r\nimport styles from './Formatter.module.css';\r\nimport { FormatterBody } from './FormatterBody';\r\nimport { ResContainer } from './ResContainer';\r\nimport { ResInitState, ResState } from './FormatterProps';\r\nimport { Text } from '../../Components';\r\nimport { CIconButton } from '../../Components/CIconButton';\r\nimport HistoryIcon from '@mui/icons-material/History';\r\nimport { ModalContext } from '../../Components/ModalContext/ModalContext';\r\nimport { HistoryModal } from '../../Components/HistoryModal';\r\n\r\nconst Formatter = () => {\r\n  const { handleModal } = useContext(ModalContext);\r\n  const [raw, setRaw] = useState<string>('');\r\n\r\n  const [res, setRes] = useState<ResState>(ResInitState);\r\n  const [error, setError] = useState<string>('');\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.headline}>\r\n        <Text className={styles.title} variant=\"h5\">\r\n          Json Formatter\r\n          <div className={styles.separator} />\r\n        </Text>\r\n        <div className={styles.history}>\r\n          <Text>History</Text>\r\n          <CIconButton\r\n            placement=\"right\"\r\n            title={'View Recent'}\r\n            onClick={() => handleModal(<HistoryModal onClick={setRaw} />)}\r\n          >\r\n            <HistoryIcon />\r\n          </CIconButton>\r\n        </div>\r\n      </div>\r\n      <FormatterBody\r\n        raw={raw}\r\n        setRaw={setRaw}\r\n        setRes={setRes}\r\n        error={error}\r\n        setError={setError}\r\n      />\r\n      {!error && <ResContainer data={res} />}\r\n    </div>\r\n  );\r\n};\r\nexport default Formatter;\r\n"],"names":["InputButtons","_ref","onChange","value","type","_ref$withFile","withFile","_jsxs","InputAdornment","className","styles","position","children","_jsx","CIconButton","placement","title","onClick","handleCopy","CallMadeSharp","handlePaste","CallReceivedSharp","DeleteIcon","IconButton","accept","id","concat","e","handleFile","style","display","htmlFor","Description","flexOptions","options","flexItemOptions","range","jsonExample","store","book","category","author","price","isbn","bicycle","color","setValue","navigator","clipboard","readText","then","text","t","writeText","console","log","catch","err","error","_e$target$files","file","target","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert","prettifyJSON","jsonStr","prettyJson","indentLevel","inString","i","length","char","repeat","Math","max","extractTitles","array","map","item","scrollTo","_ref$behavior","behavior","_ref$block","block","_ref$withHighlight","withHighlight","element","document","getElementById","scrollIntoView","classList","add","setTimeout","remove","DropZone","fileName","setFileName","isDark","useContext","AppContext","onDragOver","preventDefault","stopPropagation","onDrop","dataTransfer","name","Text","_e$target2","useFetch","_useState","useState","_useState2","_slicedToArray","setError","_useState3","_useState4","isLoading","setLoading","fetchData","url","Promise","resolve","reject","URL","_","isUrlValid","fetch","res","json","data","message","finally","FetchModal","handleModal","_useFetch","TextField","label","helperText","variant","InputProps","endAdornment","FileCopy","Button","disabled","JSON","stringify","CircularProgress","size","useLocalStorage","key","initialValue","storedValue","localStorage","getItem","parse","useEffect","setItem","FormatterBody","setRes","raw","setRaw","ModalContext","countRef","useRef","_useLocalStorage","_useLocalStorage2","searches","setSearches","MultiLineInput","minRows","placeholder","width","formattedData","search","includes","updatedSearches","_toConsumableArray","handleSaveSearch","current","editorOptions","state","CheckBox","setOptions","FormGroup","flexDirection","c","FormControlLabel","control","Checkbox","checked","JsonTree","isSmallScreen","space","setSpace","_options$find","changedIndex","find","modifiedArray","_objectSpread","Slider","min","valueLabelDisplay","disableSwap","ReactJson","backgroundColor","src","indentWidth","onEdit","iconStyle","theme","undefined","displayDataTypes","collapsed","sortKeys","displayObjectSize","ResContainer","useMediaQuery","ResInitState","HistoryModal","onItemPressed","innerText","s","ButtonBase","sx","overflow","WebkitBoxOrient","WebkitLineClamp","toString","_useState5","_useState6","HistoryIcon"],"sourceRoot":""}