{"version":3,"file":"static/js/formatter.f5976291.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?0789","Components/DiffChecker/InputButtons/InputButtons.tsx","Constant/Types.ts","Constant/DropDown.ts","Helpers/Clipboard.ts","Constant/FirbaseMessages.ts","Helpers/FireBase/Api.ts","Helpers/Json.ts","Helpers/Scroll.ts","Helpers/Url.ts","webpack://dev-tools/./src/Pages/Formatter/Formatter.module.css?feee","Components/DropZone/DropZone.tsx","webpack://dev-tools/./src/Components/FetchModal/FetchModal.module.css?b24b","Components/FetchModal/FetchModal.tsx","Hooks/useFetch/useFetch.ts","webpack://dev-tools/./src/Pages/Formatter/FormatterBody/FormatterBody.module.css?94f3","Hooks/useLocalStorage/useLocalStorage.ts","Pages/Formatter/FormatterBody/FormatterBody.tsx","webpack://dev-tools/./src/Components/JsonTree/JsonTree.module.css?b7cb","Constant/CheckBox.ts","Components/CheckBox/CheckBox.tsx","Components/JsonTree/JsonTree.tsx","webpack://dev-tools/./src/Pages/Formatter/ResContainer/ResContainer.module.css?4d28","Pages/Formatter/ResContainer/ResContainer.tsx","Pages/Formatter/FormatterProps.ts","webpack://dev-tools/./src/Components/HistoryModal/HistoryModal.module.css?2439","Components/HistoryModal/HistoryModal.tsx","Pages/Formatter/Formatter.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__7dfFm\"};","import React from 'react';\r\nimport styles from './InputButtons.module.css';\r\nimport { InputButtonsProps } from './InputButtonsProps';\r\nimport { IconButton, InputAdornment } from '@mui/material';\r\nimport {\r\n  Description,\r\n  CallReceivedSharp,\r\n  CallMadeSharp,\r\n} from '@material-ui/icons';\r\nimport {\r\n  handleCopy,\r\n  handleFile,\r\n  handlePaste,\r\n} from '../../../Helpers/Clipboard';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nimport { CIconButton } from '../../CIconButton';\r\nexport const InputButtons = ({\r\n  onChange,\r\n  value,\r\n  type,\r\n  withFile = true,\r\n}: InputButtonsProps) => {\r\n  return (\r\n    <InputAdornment className={styles.container} position=\"end\">\r\n      <CIconButton\r\n        placement=\"right\"\r\n        title={'Copy'}\r\n        onClick={() => handleCopy(value)}\r\n      >\r\n        <CallMadeSharp />\r\n      </CIconButton>\r\n      <CIconButton\r\n        placement=\"left\"\r\n        title={'Paste'}\r\n        onClick={() => handlePaste(onChange)}\r\n      >\r\n        <CallReceivedSharp />\r\n      </CIconButton>\r\n      <CIconButton\r\n        placement=\"right\"\r\n        title={'Delete'}\r\n        onClick={() => onChange('')}\r\n      >\r\n        <DeleteIcon />\r\n      </CIconButton>\r\n      {withFile && (\r\n        <IconButton onClick={() => {}}>\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt,.json\"\r\n            id={`fileInput${type}`}\r\n            onChange={(e) => handleFile(e, onChange)}\r\n            style={{ display: 'none' }}\r\n          />\r\n          <label htmlFor={`fileInput${type}`}>\r\n            <Description />\r\n          </label>\r\n        </IconButton>\r\n      )}\r\n    </InputAdornment>\r\n  );\r\n};\r\n","export type IJsonSpace = {\r\n  label: string;\r\n  value: number;\r\n};\r\nexport type ICheckBox = {\r\n  id: number;\r\n  label: string;\r\n  state: boolean;\r\n};\r\nexport type IFlexOptions = {\r\n  type: string;\r\n  options?: any;\r\n  range?: boolean;\r\n};\r\nexport const alignSelfs = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'space-between',\r\n  'space-around',\r\n  'stretch',\r\n  'auto',\r\n] as const;\r\nexport const flexDirections = [\r\n  'row',\r\n  'column',\r\n  'row-reverse',\r\n  'column-reverse',\r\n] as const;\r\nexport const flexWraps = ['nowrap', 'wrap', 'wrap-reverse'] as const;\r\nexport const justifyContentValues = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'space-between',\r\n  'space-around',\r\n] as const;\r\nexport const alignItemsValues = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'baseline',\r\n  'stretch',\r\n] as const;\r\nexport const alignContentValues = [\r\n  'flex-start',\r\n  'flex-end',\r\n  'center',\r\n  'space-between',\r\n  'space-around',\r\n  'stretch',\r\n] as const;\r\nexport const flexBasis = [\r\n  'auto',\r\n  'content',\r\n  'fit-content',\r\n  'max-content',\r\n  'min-content',\r\n  'none',\r\n  'initial',\r\n  'inherit',\r\n] as const;\r\n","import {\r\n  alignContentValues,\r\n  alignItemsValues,\r\n  alignSelfs,\r\n  flexBasis,\r\n  flexDirections,\r\n  flexWraps,\r\n  IFlexOptions,\r\n  IJsonSpace,\r\n  justifyContentValues,\r\n} from './Types';\r\n\r\nexport const jsonSpace: IJsonSpace[] = [\r\n  {\r\n    label: '4 Space Tab',\r\n    value: 4,\r\n  },\r\n  {\r\n    label: '3 Space Tab',\r\n    value: 3,\r\n  },\r\n  {\r\n    label: '2 Space Tab',\r\n    value: 2,\r\n  },\r\n  {\r\n    label: '1 Space Tab',\r\n    value: 1,\r\n  },\r\n];\r\nexport const flexOptions: IFlexOptions[] = [\r\n  {\r\n    options: flexDirections,\r\n    type: 'flexDirection',\r\n  },\r\n  {\r\n    options: justifyContentValues,\r\n    type: 'justifyContent',\r\n  },\r\n  {\r\n    options: alignItemsValues,\r\n    type: 'alignItems',\r\n  },\r\n  {\r\n    options: alignContentValues,\r\n    type: 'alignContent',\r\n  },\r\n  {\r\n    options: flexWraps,\r\n    type: 'flexWrap',\r\n  },\r\n];\r\nexport type Mutable<Type> = {\r\n  -readonly [Key in keyof Type]: Type[Key];\r\n};\r\nexport const flexItemOptions: IFlexOptions[] = [\r\n  {\r\n    type: 'order',\r\n    range: true,\r\n  },\r\n  {\r\n    type: 'flexGrow',\r\n    range: true,\r\n  },\r\n  {\r\n    type: 'flexShrink',\r\n    range: true,\r\n  },\r\n  {\r\n    type: 'flexBasis',\r\n    options: flexBasis,\r\n  },\r\n  {\r\n    type: 'alignSelf',\r\n    options: alignSelfs,\r\n  },\r\n];\r\n\r\nexport const jsonExample = {\r\n  store: {\r\n    book: [\r\n      {\r\n        category: 'reference',\r\n        author: 'Nigel Rees',\r\n        title: 'Sayings of the Century',\r\n        price: 8.95,\r\n      },\r\n      {\r\n        category: 'fiction',\r\n        author: 'Evelyn Waugh',\r\n        title: 'Sword of Honour',\r\n        price: 12.99,\r\n      },\r\n      {\r\n        category: 'fiction',\r\n        author: 'J. R. R. Tolkien',\r\n        title: 'The Lord of the Rings',\r\n        isbn: '0-395-19395-8',\r\n        price: 22.99,\r\n      },\r\n    ],\r\n    bicycle: { color: 'red', price: 19.95 },\r\n  },\r\n};\r\n\r\nexport const methods = ['GET', 'POST', 'PUT', 'DELETE'];\r\n","export const handlePaste = (setValue: (t: string) => void) => {\r\n  navigator.clipboard.readText().then((text = \"\") => {\r\n\r\n    setValue(text)\r\n  });\r\n};\r\nexport const handleCopy = (t: string) => {\r\n  navigator.clipboard\r\n    .writeText(t)\r\n    .then(() => {\r\n      console.log('Text copied to clipboard');\r\n    })\r\n    .catch((err) => {\r\n      console.error('Error copying text to clipboard:', err);\r\n    });\r\n};\r\nexport const handleFile = (\r\n  e: { target: { files: any } },\r\n  onChange: (t: any) => void\r\n) => {\r\n  const file = e.target.files?.[0];\r\n\r\n  if (file.type === 'application/json' || file.type === 'text/plain') {\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const content = e.target?.result;\r\n      onChange(content);\r\n    };\r\n    reader.readAsText(file);\r\n  } else {\r\n    alert('Invalid file type. Only JSON and TXT files are supported.');\r\n    return;\r\n  }\r\n};\r\n","export const apiMessages: { [key: string]: string } = {\r\n    addTab: \"Tab added successfully\",\r\n    removeTab: \"Tab removed successfully\",\r\n    deleteCollection: \"Collection deleted successfully\",\r\n};\r\n","import 'firebase/compat/auth';\r\nimport firebase from 'firebase/compat/app';\r\nimport { auth, db } from '../../Config/Firebase';\r\nimport { ITab, apiTabs } from '../../Constant/Mock';\r\nimport { toast } from 'react-toastify';\r\nimport { apiMessages } from '../../Constant/FirbaseMessages';\r\n\r\nexport const removeUnUsedVars = (tab: ITab) => {\r\n    tab.res.response = null;\r\n    tab.res.error = null;\r\n    tab.res.errorMessage = null;\r\n    tab.res.size = null;\r\n    tab.res.time = null;\r\n    return tab;\r\n};\r\n\r\nconst firebaseMiddleware = (\r\n    message: string,\r\n    callback: (\r\n        userRef: firebase.firestore.DocumentReference<firebase.firestore.DocumentData>\r\n    ) => Promise<any>\r\n) => {\r\n    if (!auth.currentUser) {\r\n        toast.error('Please logged in order to save your work.')\r\n        return;\r\n    }\r\n    const userRef = db.collection('users').doc(auth.currentUser!.email!);\r\n    callback(userRef)\r\n        .then(() => toast.success(apiMessages[message]))\r\n        .catch(() => toast.error('Operation failed'));\r\n};\r\n\r\nexport const deleteTabByCollection = (collection: string) => {\r\n    firebaseMiddleware(\"deleteCollection\", async (userRef) => {\r\n        const doc = await userRef.get();\r\n        if (doc.exists) {\r\n            const apiData = doc.data()?.api || {};\r\n            const deletePromises: Promise<void>[] = [];\r\n            Object.entries(apiData).forEach(([key, tab]: any) => {\r\n                if (tab.collection === collection) {\r\n                    deletePromises.push(userRef.update({\r\n                        [`api.${key}`]: firebase.firestore.FieldValue.delete()\r\n                    }));\r\n                }\r\n            });\r\n            return Promise.all(deletePromises);\r\n        }\r\n    });\r\n};\r\nexport const saveTab = (tabId: string, tab: ITab) => {\r\n    firebaseMiddleware(\"addTab\", (userRef) => {\r\n        const updateData = {\r\n            [`api`]: {\r\n                [`${tabId}`]: { ...removeUnUsedVars(tab) },\r\n            },\r\n        };\r\n        return userRef.set(updateData, { merge: true });\r\n    });\r\n};\r\nexport const deleteTabFB = (tabId: string) => {\r\n    firebaseMiddleware(\"removeTab\", (userRef) => {\r\n        const updateData = {\r\n            [`api.${tabId}`]: firebase.firestore.FieldValue.delete(),\r\n        };\r\n        return userRef.update(updateData);\r\n    });\r\n};\r\n\r\nexport const getAllTabs = (email: string) => {\r\n    return new Promise((resolve, reject) => {\r\n        const userRef = db.collection('users').doc(email);\r\n        userRef\r\n            .get()\r\n            .then((doc: any) => {\r\n                if (doc.exists) {\r\n                    resolve(doc.data()?.api ?? {});\r\n                } else {\r\n                    userRef.set({ sections: {} }).then(() => resolve({}));\r\n                }\r\n            })\r\n            .catch(reject);\r\n    });\r\n};\r\n","import { AxiosHeaders } from 'axios';\r\nimport { IHooksDescription } from '../Constant/Hooks';\r\nimport { IApiTabs, IParams, ITab } from '../Constant/Mock';\r\nimport { removeUnUsedVars } from './FireBase/Api';\r\n\r\nexport function prettifyJSON(jsonStr: string | any[]) {\r\n  if (!jsonStr || typeof jsonStr !== 'string') {\r\n    return 'Invalid JSON';\r\n  }\r\n\r\n  let prettyJson = '';\r\n  let indentLevel = 0;\r\n  let inString = false;\r\n\r\n  for (let i = 0; i < jsonStr.length; i++) {\r\n    const char = jsonStr[i];\r\n\r\n    if (inString) {\r\n      prettyJson += char;\r\n      if (char === '\"' && jsonStr[i - 1] !== '\\\\') {\r\n        inString = false;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    switch (char) {\r\n      case '{':\r\n      case '[':\r\n        prettyJson += char + '\\n' + ' '.repeat((indentLevel + 1) * 2);\r\n        indentLevel++;\r\n        break;\r\n\r\n      case '}':\r\n      case ']':\r\n        indentLevel = Math.max(0, indentLevel - 1);\r\n        prettyJson += '\\n' + ' '.repeat(indentLevel * 2) + char;\r\n        break;\r\n\r\n      case ':':\r\n        prettyJson += char + ' ';\r\n        break;\r\n\r\n      case ',':\r\n        prettyJson += char + '\\n' + ' '.repeat(indentLevel * 2);\r\n        break;\r\n\r\n      case '\"':\r\n        prettyJson += char;\r\n        inString = true;\r\n        break;\r\n\r\n      default:\r\n        prettyJson += char;\r\n        break;\r\n    }\r\n  }\r\n\r\n  return prettyJson;\r\n}\r\nexport function generateInterfaceFromJson(json: string): string {\r\n  const parsedJson = JSON.parse(json);\r\n  const rootInterfaceName = 'Root';\r\n\r\n  function getInterfaceFromObject(obj: any, name: string): string {\r\n    const keys = Object.keys(obj);\r\n    let interfaceString = `interface ${name} {\\n`;\r\n\r\n    keys.forEach((key) => {\r\n      const value = obj[key];\r\n      if (Array.isArray(value)) {\r\n        const arrayInterfaceName = `${name}_${key}_Item`;\r\n        interfaceString += `  ${key}: ${arrayInterfaceName}[];\\n`;\r\n        interfaceString += getInterfaceFromObject(value[0], arrayInterfaceName);\r\n      } else if (typeof value === 'object') {\r\n        const objectInterfaceName = `${key}`;\r\n        interfaceString += `  ${key}: ${objectInterfaceName};\\n`;\r\n        interfaceString += getInterfaceFromObject(value, objectInterfaceName);\r\n      } else {\r\n        interfaceString += `  ${key}: ${typeof value};\\n`;\r\n      }\r\n    });\r\n\r\n    interfaceString += '}\\n';\r\n    return interfaceString;\r\n  }\r\n\r\n  const interfaceString = getInterfaceFromObject(parsedJson, rootInterfaceName);\r\n  return interfaceString;\r\n}\r\nexport const extractTitles = (array: IHooksDescription[]) => {\r\n  return array.map((item, i) => item.title);\r\n};\r\nexport const getFirstId = (array: IApiTabs) => {\r\n  return array[Object.keys(array)[0]];\r\n};\r\n\r\nexport const objectToPairs = (obj: IParams): AxiosHeaders => {\r\n  return Object.fromEntries(\r\n    Object.entries(obj)\r\n      .filter(([key, value]) => value.value !== \"\" && (value.checked === undefined || value.checked)) // Exclude pairs with empty values or checked set to false\r\n      .map(([key, value]) => [value.key, value.value])\r\n  ) as AxiosHeaders;\r\n};\r\nexport function countCheckedItems(params: IParams): number {\r\n  let count = 0;\r\n  for (const key in params) {\r\n    if (params.hasOwnProperty(key) && params[key].checked) {\r\n      count++;\r\n    }\r\n  }\r\n  return count;\r\n}\r\nexport function findTabByCollection(apiTabs: IApiTabs, collection: string): string | undefined {\r\n  for (const key in apiTabs) {\r\n    if (apiTabs.hasOwnProperty(key) && apiTabs[key].collection === collection) {\r\n      return apiTabs[key].id;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\nexport const changesAccrued = (prev: ITab, next: ITab) => {\r\n  const newPrev = JSON.parse(JSON.stringify(prev));\r\n  const newNext = JSON.parse(JSON.stringify(next));\r\n  return JSON.stringify(removeUnUsedVars(newPrev)) !==\r\n    JSON.stringify(removeUnUsedVars(newNext));\r\n};","import { IScrollTo } from './Types';\r\nimport './scrollCss.css';\r\nexport const scrollTo = ({\r\n  id,\r\n  behavior = 'smooth',\r\n  block = 'start',\r\n  withHighlight = false,\r\n}: IScrollTo) => {\r\n  const element = document.getElementById(id);\r\n  if (element) {\r\n    element.scrollIntoView({ behavior, block });\r\n    if (withHighlight) {\r\n      element.classList.add('custom-highlighted-class');\r\n      setTimeout(() => {\r\n        element && element.classList.remove('custom-highlighted-class');\r\n      }, 3000);\r\n    }\r\n  } else {\r\n  }\r\n};\r\n","import { IParams } from '../Constant/Mock';\r\n\r\nexport const isUrlValid = (url: string) => {\r\n  try {\r\n    new URL(url);\r\n    return true;\r\n  } catch (_) {\r\n    return false;\r\n  }\r\n};\r\nexport function addParamsToURL(url: string, params: IParams) {\r\n  const [baseUrl] = url.split('?');\r\n  const queryString = Object.keys(params)\r\n    .filter((key) => key !== '' && params[key].key !== '' && params[key].checked)\r\n    .map(\r\n      (key) =>\r\n        `${encodeURIComponent(params[key].key)}=${encodeURIComponent(\r\n          params[key].value\r\n        )}`\r\n    )\r\n    .join('&');\r\n\r\n  const updatedURL = queryString ? `${baseUrl}?${queryString}` : baseUrl;\r\n\r\n  return updatedURL;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Formatter_container__z1Zza\",\"separator\":\"Formatter_separator__6hmhI\",\"headline\":\"Formatter_headline__fX3Ly\",\"title\":\"Formatter_title__+Rl3t\",\"history\":\"Formatter_history__P7MFR\"};","import React, { useContext } from 'react';\r\nimport './DropZone.css';\r\nimport { DropZoneProps } from './DropZoneProps';\r\nimport { Text } from '../Text';\r\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\r\n\r\nexport const DropZone = ({\r\n  onChange,\r\n  fileName,\r\n  setFileName,\r\n}: DropZoneProps) => {\r\n  const { isDark } = useContext(AppContext);\r\n\r\n  const handleDragOver = (e: {\r\n    preventDefault: () => void;\r\n    stopPropagation: () => void;\r\n  }) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDrop = (e: {\r\n    preventDefault: () => void;\r\n    dataTransfer: { files: any };\r\n  }) => {\r\n    e.preventDefault();\r\n\r\n    const file = e.dataTransfer.files[0];\r\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\r\n      setFileName(file.name);\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const content = e.target?.result;\r\n        onChange(content);\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert('Invalid file type. Only JSON and TXT files are supported.');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: { target: { files: any } }) => {\r\n    const file = e.target.files[0];\r\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\r\n      setFileName(file.name);\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const content = e.target?.result;\r\n        onChange(content);\r\n      };\r\n      reader.readAsText(file);\r\n    } else {\r\n      alert('Invalid file type. Only JSON and TXT files are supported.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form id=\"form-file-upload\">\r\n      <label\r\n        id={isDark ? 'dark-label-file-upload' : 'label-file-upload'}\r\n        htmlFor=\"input-file-upload\"\r\n        onDragOver={handleDragOver}\r\n        onDrop={handleDrop}\r\n      >\r\n        {!fileName ? (\r\n          <div>\r\n            <Text>Drag and drop your file here or click for file explorer</Text>\r\n          </div>\r\n        ) : (\r\n          <Text>{fileName}</Text>\r\n        )}\r\n      </label>\r\n      <input\r\n        accept=\".txt,.json\"\r\n        type=\"file\"\r\n        id=\"input-file-upload\"\r\n        onChange={handleFileChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FetchModal_container__fWYzd\",\"input\":\"FetchModal_input__fcW8o\",\"button\":\"FetchModal_button__mqpvX\",\"buttonContainer\":\"FetchModal_buttonContainer__71CDu\"};","import {\r\n  Button,\r\n  CircularProgress,\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n} from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport styles from './FetchModal.module.css';\r\nimport { FetchModalProps } from './FetchModalProps';\r\nimport { FileCopy } from '@material-ui/icons';\r\nimport { useFetch } from '../../Hooks/useFetch/';\r\nimport { handlePaste } from '../../Helpers/Clipboard';\r\nexport const FetchModal = ({ onChange, handleModal }: FetchModalProps) => {\r\n  const [value, setValue] = useState<string>(\r\n    'https://jsonplaceholder.typicode.com/todos'\r\n  );\r\n  const { error, isLoading, fetchData, setError } = useFetch();\r\n\r\n  const loadData = () => {\r\n    setError('');\r\n    fetchData({ url: value }).then((data: any) => {\r\n      onChange(JSON.stringify(data, null, 5));\r\n      handleModal();\r\n    });\r\n  };\r\n  const handleChange = (e: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) => {\r\n    setValue(e.target.value);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <TextField\r\n        label=\"Url\"\r\n        error={!!error}\r\n        helperText={error}\r\n        variant=\"outlined\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        className={styles.input}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton onClick={() => handlePaste(setValue)}>\r\n                <FileCopy />\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n      <div className={styles.buttonContainer}>\r\n        <Button\r\n          disabled={!value}\r\n          onClick={loadData}\r\n          className={styles.button}\r\n          variant=\"contained\"\r\n        >\r\n          {isLoading ? (\r\n            <CircularProgress\r\n              style={{ color: 'white' }}\r\n              color=\"success\"\r\n              size={24}\r\n            />\r\n          ) : (\r\n            'Load'\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { isUrlValid } from '../../Helpers/Url';\r\nimport { FetchProps, FetchState } from './useFetchProps';\r\n\r\nexport const useFetch = (): FetchState => {\r\n  const [error, setError] = useState<string>('');\r\n  const [isLoading, setLoading] = useState<boolean>(false);\r\n\r\n  const fetchData = ({ url }: FetchProps): Promise<any> => {\r\n    return new Promise((resolve, reject) => {\r\n      if (!isUrlValid(url)) {\r\n        setError('Invalid Url');\r\n        return;\r\n      }\r\n      setLoading(true);\r\n      fetch(url)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          resolve(data);\r\n        })\r\n        .catch((error) => {\r\n          setError(error.message);\r\n        })\r\n        .finally(() => setLoading(false));\r\n    });\r\n  };\r\n\r\n  return {\r\n    error,\r\n    isLoading,\r\n    setError,\r\n    fetchData,\r\n  };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputs\":\"FormatterBody_inputs__RsUpU\",\"buttonContainer\":\"FormatterBody_buttonContainer__Qpp08\",\"subContainer\":\"FormatterBody_subContainer__myNyl\",\"input\":\"FormatterBody_input__Md1fX\",\"info\":\"FormatterBody_info__SEEHi\",\"button\":\"FormatterBody_button__iqYCP\",\"reset\":\"FormatterBody_reset__jNoho\",\"checkBox\":\"FormatterBody_checkBox__ouHv8\"};","import { useState, useEffect } from 'react';\r\n\r\nexport const useLocalStorage = <T extends unknown>(\r\n  key: string,\r\n  initialValue: T\r\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\r\n  const [value, setValue] = useState<T>(() => {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue !== null ? JSON.parse(storedValue) : initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { Button } from '@mui/material';\r\nimport React, { useContext, useState, useRef } from 'react';\r\nimport { MultiLineInput } from '../../../Components';\r\nimport { DropZone } from '../../../Components/DropZone';\r\nimport { FetchModal } from '../../../Components/FetchModal';\r\nimport { ModalContext } from '../../../Components/ModalContext/ModalContext';\r\nimport { jsonExample } from '../../../Constant/DropDown';\r\nimport { prettifyJSON } from '../../../Helpers/Json';\r\nimport styles from './FormatterBody.module.css';\r\nimport { FormatterBodyProps } from './FormatterBodyProps';\r\nimport { InputButtons } from '../../../Components/DiffChecker/InputButtons';\r\nimport { useLocalStorage } from '../../../Hooks/useLocalStorage';\r\n\r\nexport const FormatterBody = ({\r\n  setRes,\r\n  setError,\r\n  error,\r\n  raw,\r\n  setRaw,\r\n}: FormatterBodyProps) => {\r\n  const [fileName, setFileName] = useState<string>('');\r\n  const { handleModal } = useContext(ModalContext);\r\n  const countRef = useRef<number>(0);\r\n  const resetFields = () => {\r\n    setRaw('');\r\n    setFileName('');\r\n    setError('');\r\n    setRes({ json: false, res: '' });\r\n  };\r\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\r\n  const handleSaveSearch = (search: string) => {\r\n    if (!searches.includes(search)) {\r\n      const updatedSearches = [...searches, search];\r\n      setSearches(updatedSearches);\r\n    }\r\n  };\r\n  const setExample = () => {\r\n    setRaw(JSON.stringify(jsonExample));\r\n  };\r\n  const formatCode = () => {\r\n    try {\r\n      const formattedData = JSON.stringify(JSON.parse(raw), null, 5);\r\n      setRes({ json: true, res: JSON.parse(formattedData) });\r\n      setRaw(formattedData);\r\n      setError('');\r\n      handleSaveSearch(formattedData);\r\n    } catch (error: any) {\r\n      if (countRef.current === 0) {\r\n        countRef.current++;\r\n        setRaw(prettifyJSON(raw));\r\n      }\r\n      setError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <div className={styles.inputs}>\r\n      <div className={styles.input}>\r\n        <MultiLineInput\r\n          minRows={25}\r\n          placeholder={'{ Paste / Write Your json here... }'}\r\n          id=\"resInput\"\r\n          onChange={setRaw}\r\n          value={raw}\r\n          helperText={error}\r\n          error={!!error}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputButtons\r\n                withFile={false}\r\n                type={'Changed'}\r\n                value={raw}\r\n                onChange={setRaw}\r\n              />\r\n            ),\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.buttonContainer}>\r\n        <DropZone\r\n          setError={setError}\r\n          fileName={fileName}\r\n          setFileName={setFileName}\r\n          onChange={setRaw}\r\n        />\r\n        <div className={styles.reset}>\r\n          <Button\r\n            style={{ width: '50%' }}\r\n            color={'error'}\r\n            onClick={resetFields}\r\n          >\r\n            Reset\r\n          </Button>\r\n\r\n          <Button style={{ width: '50%' }} onClick={setExample}>\r\n            Example\r\n          </Button>\r\n          <Button\r\n            style={{ width: '100%' }}\r\n            onClick={() => handleModal(<FetchModal onChange={setRaw} />)}\r\n          >\r\n            Load From Url\r\n          </Button>\r\n          <div className={styles.checkBox}></div>\r\n          <Button\r\n            className={styles.button}\r\n            variant=\"contained\"\r\n            disabled={!raw}\r\n            onClick={formatCode}\r\n          >\r\n            format\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"JsonTree_container__64BdE\",\"checkboxs\":\"JsonTree_checkboxs__Ipa6s\",\"slider\":\"JsonTree_slider__+cJMY\"};","import { ICheckBox } from './Types';\r\n\r\nexport const editorOptions: ICheckBox[] = [\r\n  {\r\n    id: 1,\r\n    label: 'Dark theme',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    label: 'Data Types',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: 'Collapsed',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: 'Sort Keys',\r\n    state: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: 'length',\r\n    state: false,\r\n  },\r\n];\r\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\r\nimport React from 'react';\r\nimport { CheckBoxProps } from './CheckBoxProps';\r\n\r\nexport const CheckBox = ({ options, setOptions, style }: CheckBoxProps) => {\r\n  return (\r\n    <FormGroup style={{ flexDirection: 'row' }} className={style}>\r\n      {options.map((c) => (\r\n        <FormControlLabel\r\n          key={c.id}\r\n          control={\r\n            <Checkbox checked={c.state} onClick={() => setOptions(c.id)} />\r\n          }\r\n          label={c.label}\r\n        />\r\n      ))}\r\n    </FormGroup>\r\n  );\r\n};\r\n","import React, { ChangeEvent, useContext, useState } from 'react';\r\nimport styles from './JsonTree.module.css';\r\nimport { JsonTreeProps } from './JsonTreeProps';\r\nimport ReactJson from 'react-json-view';\r\nimport { editorOptions } from '../../Constant/CheckBox';\r\nimport { CheckBox } from '../CheckBox';\r\nimport { ICheckBox } from '../../Constant/Types';\r\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\r\nimport { useMediaQuery } from '../../Hooks/useMediaQuery';\r\nimport { Slider } from '@mui/material';\r\nimport { Text } from '../Text';\r\n\r\nexport const JsonTree = ({ data, isSmallScreen }: JsonTreeProps) => {\r\n  const { isDark } = useContext(AppContext);\r\n  const [options, setOptions] = useState<ICheckBox[]>(editorOptions);\r\n  const [space, setSpace] = useState<number>(isSmallScreen ? 4 : 10);\r\n  const handleChange = (id: number) => {\r\n    const changedIndex: number = options.find((i) => i.id === id)?.id! - 1;\r\n    const modifiedArray = [...options];\r\n    modifiedArray[changedIndex] = {\r\n      ...modifiedArray[changedIndex],\r\n      state: !modifiedArray[changedIndex].state,\r\n    };\r\n    setOptions(modifiedArray);\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={{ flexDirection: 'row', display: 'flex' }}>\r\n        <CheckBox\r\n          style={styles.checkboxs}\r\n          options={options}\r\n          setOptions={handleChange}\r\n        />\r\n        <div className={styles.slider}>\r\n          <Text>Space:</Text>\r\n          <Slider\r\n            onChange={(e: any) => setSpace(e.target.value)}\r\n            min={0}\r\n            max={15}\r\n            value={space}\r\n            valueLabelDisplay=\"auto\"\r\n            disableSwap\r\n          />\r\n        </div>\r\n      </div>\r\n      <ReactJson\r\n        style={{\r\n          width: '100%',\r\n          backgroundColor: options[0].state || isDark ? 'black' : 'white',\r\n        }}\r\n        src={data}\r\n        indentWidth={space}\r\n        onEdit={() => {}}\r\n        iconStyle={'circle'}\r\n        theme={options[0].state || isDark ? 'chalk' : undefined}\r\n        displayDataTypes={options[1].state}\r\n        collapsed={options[2].state ? 2 : undefined}\r\n        sortKeys={options[3].state}\r\n        displayObjectSize={options[4].state}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResContainer_container__gS2N+\"};","import React, { useEffect } from 'react';\r\nimport { JsonTree } from '../../../Components/JsonTree';\r\nimport { scrollTo } from '../../../Helpers/Scroll';\r\nimport styles from './ResContainer.module.css';\r\nimport { ResContainerProps } from './ResContainerProps';\r\nimport { useMediaQuery } from '../../../Hooks/useMediaQuery';\r\n\r\nexport const ResContainer = ({ data }: ResContainerProps) => {\r\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\r\n\r\n  useEffect(() => {\r\n    if (data.res !== '') scrollTo({ id: 'result' });\r\n  }, [data.res]);\r\n  return (\r\n    <div id=\"result\" className={styles.container}>\r\n      {data.res !== '' && (\r\n        <JsonTree\r\n          isSmallScreen={isSmallScreen}\r\n          data={data.res !== '' && data.res}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","export interface FormatterProps {\r\n  [key: string]: any;\r\n}\r\nexport interface ResState {\r\n  json: boolean;\r\n  res: string;\r\n}\r\nexport const ResInitState = {\r\n  json: true,\r\n  res: '',\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HistoryModal_container__zJzJR\"};","import React, { useEffect, useState } from 'react';\r\nimport styles from './HistoryModal.module.css';\r\nimport { HistoryModalProps } from './HistoryModalProps';\r\nimport { Text } from '../Text';\r\nimport { useLocalStorage } from '../../Hooks/useLocalStorage';\r\nimport { ButtonBase } from '@mui/material';\r\n\r\nexport const HistoryModal = ({ onClick, handleModal }: HistoryModalProps) => {\r\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\r\n\r\n  const onItemPressed = (e: any) => {\r\n    onClick(e.target.innerText);\r\n    handleModal();\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      <Text variant=\"h6\"> Recent</Text>\r\n      {searches.length !== 0 ? (\r\n        searches.map((s: string, i: number) => (\r\n          <ButtonBase key={i} onClick={onItemPressed}>\r\n            <Text\r\n              sx={{\r\n                display: '-webkit-box',\r\n                overflow: 'hidden',\r\n                WebkitBoxOrient: 'vertical',\r\n                WebkitLineClamp: 1,\r\n              }}\r\n              variant=\"body1\"\r\n            >\r\n              {s.toString()}\r\n            </Text>\r\n          </ButtonBase>\r\n        ))\r\n      ) : (\r\n        <Text>There is no recent Data</Text>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { useContext, useState } from 'react';\r\nimport styles from './Formatter.module.css';\r\nimport { FormatterBody } from './FormatterBody';\r\nimport { ResContainer } from './ResContainer';\r\nimport { ResInitState, ResState } from './FormatterProps';\r\nimport { Text } from '../../Components';\r\nimport { CIconButton } from '../../Components/CIconButton';\r\nimport HistoryIcon from '@mui/icons-material/History';\r\nimport { ModalContext } from '../../Components/ModalContext/ModalContext';\r\nimport { HistoryModal } from '../../Components/HistoryModal';\r\n\r\nconst Formatter = () => {\r\n  const { handleModal } = useContext(ModalContext);\r\n  const [raw, setRaw] = useState<string>('');\r\n\r\n  const [res, setRes] = useState<ResState>(ResInitState);\r\n  const [error, setError] = useState<string>('');\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.headline}>\r\n        <Text className={styles.title} variant=\"h5\">\r\n          Json Formatter\r\n          <div className={styles.separator} />\r\n        </Text>\r\n        <div className={styles.history}>\r\n          <Text>History</Text>\r\n          <CIconButton\r\n            placement=\"right\"\r\n            title={'View Recent'}\r\n            onClick={() => handleModal(<HistoryModal onClick={setRaw} />)}\r\n          >\r\n            <HistoryIcon />\r\n          </CIconButton>\r\n        </div>\r\n      </div>\r\n      <FormatterBody\r\n        raw={raw}\r\n        setRaw={setRaw}\r\n        setRes={setRes}\r\n        error={error}\r\n        setError={setError}\r\n      />\r\n      {!error && <ResContainer data={res} />}\r\n    </div>\r\n  );\r\n};\r\nexport default Formatter;\r\n"],"names":["InputButtons","_ref","onChange","value","type","_ref$withFile","withFile","_jsxs","InputAdornment","className","styles","position","children","_jsx","CIconButton","placement","title","onClick","handleCopy","CallMadeSharp","handlePaste","CallReceivedSharp","DeleteIcon","IconButton","accept","id","concat","e","handleFile","style","display","htmlFor","Description","flexOptions","options","flexItemOptions","range","jsonExample","store","book","category","author","price","isbn","bicycle","color","methods","setValue","navigator","clipboard","readText","then","arguments","length","undefined","t","writeText","console","log","catch","err","error","_e$target$files","file","target","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert","apiMessages","addTab","removeTab","deleteCollection","removeUnUsedVars","tab","res","response","errorMessage","size","time","firebaseMiddleware","message","callback","auth","db","doc","toast","deleteTabByCollection","collection","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userRef","_doc$data","apiData","deletePromises","wrap","_context","prev","next","get","sent","exists","data","api","Object","entries","forEach","_ref2","_ref3","_slicedToArray","key","push","update","_defineProperty","firebase","abrupt","Promise","all","stop","_x","apply","saveTab","tabId","updateData","_objectSpread","set","merge","deleteTabFB","getAllTabs","email","resolve","reject","_doc$data$api","_doc$data2","sections","prettifyJSON","jsonStr","prettyJson","indentLevel","inString","i","char","repeat","Math","max","extractTitles","array","map","item","objectToPairs","obj","fromEntries","filter","checked","_ref4","countCheckedItems","params","count","hasOwnProperty","findTabByCollection","apiTabs","changesAccrued","newPrev","JSON","parse","stringify","newNext","scrollTo","_ref$behavior","behavior","_ref$block","block","_ref$withHighlight","withHighlight","element","document","getElementById","scrollIntoView","classList","add","setTimeout","remove","isUrlValid","url","URL","_","addParamsToURL","_url$split","split","baseUrl","queryString","keys","encodeURIComponent","join","DropZone","fileName","setFileName","isDark","useContext","AppContext","onDragOver","preventDefault","stopPropagation","onDrop","dataTransfer","name","Text","_e$target2","FetchModal","handleModal","_useState","useState","_useState2","_useFetch","setError","_useState3","_useState4","isLoading","setLoading","fetchData","fetch","json","finally","useFetch","TextField","label","helperText","variant","InputProps","endAdornment","FileCopy","Button","disabled","CircularProgress","useLocalStorage","initialValue","storedValue","localStorage","getItem","useEffect","setItem","FormatterBody","setRes","raw","setRaw","ModalContext","countRef","useRef","_useLocalStorage","_useLocalStorage2","searches","setSearches","MultiLineInput","minRows","placeholder","width","formattedData","search","includes","updatedSearches","_toConsumableArray","handleSaveSearch","current","editorOptions","state","CheckBox","setOptions","FormGroup","flexDirection","c","FormControlLabel","control","Checkbox","JsonTree","isSmallScreen","space","setSpace","_options$find","changedIndex","find","modifiedArray","Slider","min","valueLabelDisplay","disableSwap","ReactJson","backgroundColor","src","indentWidth","onEdit","iconStyle","theme","displayDataTypes","collapsed","sortKeys","displayObjectSize","ResContainer","useMediaQuery","ResInitState","HistoryModal","onItemPressed","innerText","s","ButtonBase","sx","overflow","WebkitBoxOrient","WebkitLineClamp","toString","_useState5","_useState6","HistoryIcon"],"sourceRoot":""}