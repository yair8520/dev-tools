{"version":3,"file":"static/js/formatter.5af7acbc.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?0789","Components/DiffChecker/InputButtons/InputButtons.tsx","Constant/Types.ts","Constant/DropDown.ts","Helpers/Clipboard.ts","Helpers/Json.ts","Helpers/Scroll.ts","webpack://dev-tools/./src/Pages/Formatter/Formatter.module.css?feee","Components/DropZone/DropZone.tsx","webpack://dev-tools/./src/Components/FetchModal/FetchModal.module.css?b24b","Hooks/useFetch/useFetch.ts","Helpers/Url.ts","Components/FetchModal/FetchModal.tsx","webpack://dev-tools/./src/Pages/Formatter/FormatterBody/FormatterBody.module.css?94f3","Hooks/useLocalStorage/useLocalStorage.ts","Pages/Formatter/FormatterBody/FormatterBody.tsx","webpack://dev-tools/./src/Components/JsonTree/JsonTree.module.css?b7cb","Constant/CheckBox.ts","Components/CheckBox/CheckBox.tsx","Components/JsonTree/JsonTree.tsx","webpack://dev-tools/./src/Pages/Formatter/ResContainer/ResContainer.module.css?4d28","Pages/Formatter/ResContainer/ResContainer.tsx","Pages/Formatter/FormatterProps.ts","webpack://dev-tools/./src/Components/HistoryModal/HistoryModal.module.css?2439","Components/HistoryModal/HistoryModal.tsx","Pages/Formatter/Formatter.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__bHQ8e\"};","import React from 'react';\nimport styles from './InputButtons.module.css';\nimport { InputButtonsProps } from './InputButtonsProps';\nimport { IconButton, InputAdornment } from '@mui/material';\nimport {\n  Description,\n  CallReceivedSharp,\n  CallMadeSharp,\n} from '@material-ui/icons';\nimport {\n  handleCopy,\n  handleFile,\n  handlePaste,\n} from '../../../Helpers/Clipboard';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { CIconButton } from '../../CIconButton';\nexport const InputButtons = ({\n  onChange,\n  value,\n  type,\n  withFile = true,\n}: InputButtonsProps) => {\n  return (\n    <InputAdornment className={styles.container} position=\"end\">\n      <CIconButton\n        placement=\"right\"\n        title={'Copy'}\n        onClick={() => handleCopy(value)}\n      >\n        <CallMadeSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"left\"\n        title={'Paste'}\n        onClick={() => handlePaste(onChange)}\n      >\n        <CallReceivedSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"right\"\n        title={'Delete'}\n        onClick={() => onChange('')}\n      >\n        <DeleteIcon />\n      </CIconButton>\n      {withFile && (\n        <IconButton onClick={() => {}}>\n          <input\n            type=\"file\"\n            accept=\".txt,.json\"\n            id={`fileInput${type}`}\n            onChange={(e) => handleFile(e, onChange)}\n            style={{ display: 'none' }}\n          />\n          <label htmlFor={`fileInput${type}`}>\n            <Description />\n          </label>\n        </IconButton>\n      )}\n    </InputAdornment>\n  );\n};\n","export type IJsonSpace = {\n  label: string;\n  value: number;\n};\nexport type ICheckBox = {\n  id: number;\n  label: string;\n  state: boolean;\n};\nexport type IFlexOptions = {\n  type: string;\n  options?: any;\n  range?: boolean;\n};\nexport const alignSelfs = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'space-between',\n  'space-around',\n  'stretch',\n  'auto',\n] as const;\nexport const flexDirections = [\n  'row',\n  'column',\n  'row-reverse',\n  'column-reverse',\n] as const;\nexport const flexWraps = ['nowrap', 'wrap', 'wrap-reverse'] as const;\nexport const justifyContentValues = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'space-between',\n  'space-around',\n] as const;\nexport const alignItemsValues = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'baseline',\n  'stretch',\n] as const;\nexport const alignContentValues = [\n  'flex-start',\n  'flex-end',\n  'center',\n  'space-between',\n  'space-around',\n  'stretch',\n] as const;\nexport const flexBasis = [\n  'auto',\n  'content',\n  'fit-content',\n  'max-content',\n  'min-content',\n  'none',\n  'initial',\n  'inherit',\n] as const;\n","import {\n  alignContentValues,\n  alignItemsValues,\n  alignSelfs,\n  flexBasis,\n  flexDirections,\n  flexWraps,\n  IFlexOptions,\n  IJsonSpace,\n  justifyContentValues,\n} from './Types';\n\nexport const jsonSpace: IJsonSpace[] = [\n  {\n    label: '4 Space Tab',\n    value: 4,\n  },\n  {\n    label: '3 Space Tab',\n    value: 3,\n  },\n  {\n    label: '2 Space Tab',\n    value: 2,\n  },\n  {\n    label: '1 Space Tab',\n    value: 1,\n  },\n];\nexport const flexOptions: IFlexOptions[] = [\n  {\n    options: flexDirections,\n    type: 'flexDirection',\n  },\n  {\n    options: justifyContentValues,\n    type: 'justifyContent',\n  },\n  {\n    options: alignItemsValues,\n    type: 'alignItems',\n  },\n  {\n    options: alignContentValues,\n    type: 'alignContent',\n  },\n  {\n    options: flexWraps,\n    type: 'flexWrap',\n  },\n];\nexport type Mutable<Type> = {\n  -readonly [Key in keyof Type]: Type[Key];\n};\nexport const flexItemOptions: IFlexOptions[] = [\n  {\n    type: 'order',\n    range: true,\n  },\n  {\n    type: 'flexGrow',\n    range: true,\n  },\n  {\n    type: 'flexShrink',\n    range: true,\n  },\n  {\n    type: 'flexBasis',\n    options: flexBasis,\n  },\n  {\n    type: 'alignSelf',\n    options: alignSelfs,\n  },\n];\n\nexport const jsonExample = {\n  store: {\n    book: [\n      {\n        category: 'reference',\n        author: 'Nigel Rees',\n        title: 'Sayings of the Century',\n        price: 8.95,\n      },\n      {\n        category: 'fiction',\n        author: 'Evelyn Waugh',\n        title: 'Sword of Honour',\n        price: 12.99,\n      },\n      {\n        category: 'fiction',\n        author: 'J. R. R. Tolkien',\n        title: 'The Lord of the Rings',\n        isbn: '0-395-19395-8',\n        price: 22.99,\n      },\n    ],\n    bicycle: { color: 'red', price: 19.95 },\n  },\n};\n\nexport const methods = ['GET', 'POST', 'PUT', 'DELETE'];\n","export const handlePaste = (setValue: (t: string) => void) => {\n  navigator.clipboard.readText().then((text) => setValue(text));\n};\nexport const handleCopy = (t: string) => {\n  navigator.clipboard\n    .writeText(t)\n    .then(() => {\n      console.log('Text copied to clipboard');\n    })\n    .catch((err) => {\n      console.error('Error copying text to clipboard:', err);\n    });\n};\nexport const handleFile = (\n  e: { target: { files: any } },\n  onChange: (t: any) => void\n) => {\n  const file = e.target.files?.[0];\n\n  if (file.type === 'application/json' || file.type === 'text/plain') {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result;\n      onChange(content);\n    };\n    reader.readAsText(file);\n  } else {\n    alert('Invalid file type. Only JSON and TXT files are supported.');\n    return;\n  }\n};\n","import { AxiosHeaders } from 'axios';\nimport { IHooksDescription } from '../Constant/Hooks';\nimport { IParams } from '../Constant/Mock';\n\nexport function prettifyJSON(jsonStr: string | any[]) {\n  if (!jsonStr || typeof jsonStr !== 'string') {\n    return 'Invalid JSON';\n  }\n\n  let prettyJson = '';\n  let indentLevel = 0;\n  let inString = false;\n\n  for (let i = 0; i < jsonStr.length; i++) {\n    const char = jsonStr[i];\n\n    if (inString) {\n      prettyJson += char;\n      if (char === '\"' && jsonStr[i - 1] !== '\\\\') {\n        inString = false;\n      }\n      continue;\n    }\n\n    switch (char) {\n      case '{':\n      case '[':\n        prettyJson += char + '\\n' + ' '.repeat((indentLevel + 1) * 2);\n        indentLevel++;\n        break;\n\n      case '}':\n      case ']':\n        indentLevel = Math.max(0, indentLevel - 1);\n        prettyJson += '\\n' + ' '.repeat(indentLevel * 2) + char;\n        break;\n\n      case ':':\n        prettyJson += char + ' ';\n        break;\n\n      case ',':\n        prettyJson += char + '\\n' + ' '.repeat(indentLevel * 2);\n        break;\n\n      case '\"':\n        prettyJson += char;\n        inString = true;\n        break;\n\n      default:\n        prettyJson += char;\n        break;\n    }\n  }\n\n  return prettyJson;\n}\nexport function generateInterfaceFromJson(json: string): string {\n  const parsedJson = JSON.parse(json);\n  const rootInterfaceName = 'Root';\n\n  function getInterfaceFromObject(obj: any, name: string): string {\n    const keys = Object.keys(obj);\n    let interfaceString = `interface ${name} {\\n`;\n\n    keys.forEach((key) => {\n      const value = obj[key];\n      if (Array.isArray(value)) {\n        const arrayInterfaceName = `${name}_${key}_Item`;\n        interfaceString += `  ${key}: ${arrayInterfaceName}[];\\n`;\n        interfaceString += getInterfaceFromObject(value[0], arrayInterfaceName);\n      } else if (typeof value === 'object') {\n        const objectInterfaceName = `${key}`;\n        interfaceString += `  ${key}: ${objectInterfaceName};\\n`;\n        interfaceString += getInterfaceFromObject(value, objectInterfaceName);\n      } else {\n        interfaceString += `  ${key}: ${typeof value};\\n`;\n      }\n    });\n\n    interfaceString += '}\\n';\n    return interfaceString;\n  }\n\n  const interfaceString = getInterfaceFromObject(parsedJson, rootInterfaceName);\n  return interfaceString;\n}\nexport const extractTitles = (array: IHooksDescription[]) => {\n  return array.map((item, i) => item.title);\n};\n\nexport const objectToPairs = (obj: IParams): AxiosHeaders => {\n  return Object.fromEntries(\n    Object.entries(obj)\n      .filter(([key, value]) => value.value !== \"\") // Exclude pairs with empty values\n      .map(([key, value]) => [value.key, value.value])\n  ) as AxiosHeaders;\n};\n","import { IScrollTo } from './Types';\nimport './scrollCss.css';\nexport const scrollTo = ({\n  id,\n  behavior = 'smooth',\n  block = 'start',\n  withHighlight = false,\n}: IScrollTo) => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.scrollIntoView({ behavior, block });\n    if (withHighlight) {\n      element.classList.add('custom-highlighted-class');\n      setTimeout(() => {\n        element && element.classList.remove('custom-highlighted-class');\n      }, 3000);\n    }\n  } else {\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Formatter_container__UUNvv\",\"separator\":\"Formatter_separator__E4tkG\",\"headline\":\"Formatter_headline__BQExT\",\"title\":\"Formatter_title__ibMOf\",\"history\":\"Formatter_history__QSDoZ\"};","import React, { useContext } from 'react';\nimport './DropZone.css';\nimport { DropZoneProps } from './DropZoneProps';\nimport { Text } from '../Text';\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\n\nexport const DropZone = ({\n  onChange,\n  fileName,\n  setFileName,\n}: DropZoneProps) => {\n  const { isDark } = useContext(AppContext);\n\n  const handleDragOver = (e: {\n    preventDefault: () => void;\n    stopPropagation: () => void;\n  }) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: {\n    preventDefault: () => void;\n    dataTransfer: { files: any };\n  }) => {\n    e.preventDefault();\n\n    const file = e.dataTransfer.files[0];\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\n      setFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result;\n        onChange(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Invalid file type. Only JSON and TXT files are supported.');\n    }\n  };\n\n  const handleFileChange = (e: { target: { files: any } }) => {\n    const file = e.target.files[0];\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\n      setFileName(file.name);\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result;\n        onChange(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Invalid file type. Only JSON and TXT files are supported.');\n    }\n  };\n\n  return (\n    <form id=\"form-file-upload\">\n      <label\n        id={isDark ? 'dark-label-file-upload' : 'label-file-upload'}\n        htmlFor=\"input-file-upload\"\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      >\n        {!fileName ? (\n          <div>\n            <Text>Drag and drop your file here or click for file explorer</Text>\n          </div>\n        ) : (\n          <Text>{fileName}</Text>\n        )}\n      </label>\n      <input\n        accept=\".txt,.json\"\n        type=\"file\"\n        id=\"input-file-upload\"\n        onChange={handleFileChange}\n      />\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FetchModal_container__ZpWVl\",\"input\":\"FetchModal_input__HIplP\",\"button\":\"FetchModal_button__bFnxj\",\"buttonContainer\":\"FetchModal_buttonContainer__yq6v0\"};","import { useState } from 'react';\nimport { isUrlValid } from '../../Helpers/Url';\nimport { FetchProps, FetchState } from './useFetchProps';\n\nexport const useFetch = (): FetchState => {\n  const [error, setError] = useState<string>('');\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const fetchData = ({ url }: FetchProps): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      if (!isUrlValid(url)) {\n        setError('Invalid Url');\n        return;\n      }\n      setLoading(true);\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          resolve(data);\n        })\n        .catch((error) => {\n          setError(error.message);\n        })\n        .finally(() => setLoading(false));\n    });\n  };\n\n  return {\n    error,\n    isLoading,\n    setError,\n    fetchData,\n  };\n};\n","export const isUrlValid = (url: string) => {\n  try {\n    new URL(url);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\n","import {\n  Button,\n  CircularProgress,\n  IconButton,\n  InputAdornment,\n  TextField,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport styles from './FetchModal.module.css';\nimport { FetchModalProps } from './FetchModalProps';\nimport { FileCopy } from '@material-ui/icons';\nimport { useFetch } from '../../Hooks/useFetch/';\nimport { handlePaste } from '../../Helpers/Clipboard';\nexport const FetchModal = ({ onChange, handleModal }: FetchModalProps) => {\n  const [value, setValue] = useState<string>(\n    'https://jsonplaceholder.typicode.com/todos'\n  );\n  const { error, isLoading, fetchData, setError } = useFetch();\n\n  const loadData = () => {\n    setError('');\n    fetchData({ url: value }).then((data: any) => {\n      onChange(JSON.stringify(data, null, 5));\n      handleModal();\n    });\n  };\n  const handleChange = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setValue(e.target.value);\n  };\n  return (\n    <div className={styles.container}>\n      <TextField\n        label=\"Url\"\n        error={!!error}\n        helperText={error}\n        variant=\"outlined\"\n        value={value}\n        onChange={handleChange}\n        className={styles.input}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton onClick={() => handlePaste(setValue)}>\n                <FileCopy />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={styles.buttonContainer}>\n        <Button\n          disabled={!value}\n          onClick={loadData}\n          className={styles.button}\n          variant=\"contained\"\n        >\n          {isLoading ? (\n            <CircularProgress\n              style={{ color: 'white' }}\n              color=\"success\"\n              size={24}\n            />\n          ) : (\n            'Load'\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputs\":\"FormatterBody_inputs__kSx31\",\"buttonContainer\":\"FormatterBody_buttonContainer__APwnB\",\"subContainer\":\"FormatterBody_subContainer__6niOa\",\"input\":\"FormatterBody_input__gC1XE\",\"info\":\"FormatterBody_info__8Jdbz\",\"button\":\"FormatterBody_button__lPsgV\",\"reset\":\"FormatterBody_reset__BJSYp\",\"checkBox\":\"FormatterBody_checkBox__hzxCZ\"};","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = <T extends unknown>(\n  key: string,\n  initialValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const [value, setValue] = useState<T>(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue !== null ? JSON.parse(storedValue) : initialValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Button } from '@mui/material';\nimport React, { useContext, useState, useRef } from 'react';\nimport { MultiLineInput } from '../../../Components';\nimport { DropZone } from '../../../Components/DropZone';\nimport { FetchModal } from '../../../Components/FetchModal';\nimport { ModalContext } from '../../../Components/ModalContext/ModalContext';\nimport { jsonExample } from '../../../Constant/DropDown';\nimport { prettifyJSON } from '../../../Helpers/Json';\nimport styles from './FormatterBody.module.css';\nimport { FormatterBodyProps } from './FormatterBodyProps';\nimport { InputButtons } from '../../../Components/DiffChecker/InputButtons';\nimport { useLocalStorage } from '../../../Hooks/useLocalStorage';\n\nexport const FormatterBody = ({\n  setRes,\n  setError,\n  error,\n  raw,\n  setRaw,\n}: FormatterBodyProps) => {\n  const [fileName, setFileName] = useState<string>('');\n  const { handleModal } = useContext(ModalContext);\n  const countRef = useRef<number>(0);\n  const resetFields = () => {\n    setRaw('');\n    setFileName('');\n    setError('');\n    setRes({ json: false, res: '' });\n  };\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\n  const handleSaveSearch = (search: string) => {\n    if (!searches.includes(search)) {\n      const updatedSearches = [...searches, search];\n      setSearches(updatedSearches);\n    }\n  };\n  const setExample = () => {\n    setRaw(JSON.stringify(jsonExample));\n  };\n  const formatCode = () => {\n    try {\n      const formattedData = JSON.stringify(JSON.parse(raw), null, 5);\n      setRes({ json: true, res: JSON.parse(formattedData) });\n      setRaw(formattedData);\n      setError('');\n      handleSaveSearch(formattedData);\n    } catch (error: any) {\n      if (countRef.current === 0) {\n        countRef.current++;\n        setRaw(prettifyJSON(raw));\n      }\n      setError(error.message);\n    }\n  };\n  return (\n    <div className={styles.inputs}>\n      <div className={styles.input}>\n        <MultiLineInput\n          minRows={25}\n          placeholder={'{ Paste / Write Your json here... }'}\n          id=\"resInput\"\n          onChange={setRaw}\n          value={raw}\n          helperText={error}\n          error={!!error}\n          InputProps={{\n            endAdornment: (\n              <InputButtons\n                withFile={false}\n                type={'Changed'}\n                value={raw}\n                onChange={setRaw}\n              />\n            ),\n          }}\n        />\n      </div>\n      <div className={styles.buttonContainer}>\n        <DropZone\n          setError={setError}\n          fileName={fileName}\n          setFileName={setFileName}\n          onChange={setRaw}\n        />\n        <div className={styles.reset}>\n          <Button\n            style={{ width: '50%' }}\n            color={'error'}\n            onClick={resetFields}\n          >\n            Reset\n          </Button>\n\n          <Button style={{ width: '50%' }} onClick={setExample}>\n            Example\n          </Button>\n          <Button\n            style={{ width: '100%' }}\n            onClick={() => handleModal(<FetchModal onChange={setRaw} />)}\n          >\n            Load From Url\n          </Button>\n          <div className={styles.checkBox}></div>\n          <Button\n            className={styles.button}\n            variant=\"contained\"\n            disabled={!raw}\n            onClick={formatCode}\n          >\n            format\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"JsonTree_container__cqf1V\",\"checkboxs\":\"JsonTree_checkboxs__MPqjS\",\"slider\":\"JsonTree_slider__4pUhC\"};","import { ICheckBox } from './Types';\n\nexport const editorOptions: ICheckBox[] = [\n  {\n    id: 1,\n    label: 'Dark theme',\n    state: false,\n  },\n  {\n    id: 2,\n    label: 'Data Types',\n    state: false,\n  },\n  {\n    id: 3,\n    label: 'Collapsed',\n    state: false,\n  },\n  {\n    id: 4,\n    label: 'Sort Keys',\n    state: false,\n  },\n  {\n    id: 5,\n    label: 'length',\n    state: false,\n  },\n];\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport React from 'react';\nimport { CheckBoxProps } from './CheckBoxProps';\n\nexport const CheckBox = ({ options, setOptions, style }: CheckBoxProps) => {\n  return (\n    <FormGroup style={{ flexDirection: 'row' }} className={style}>\n      {options.map((c) => (\n        <FormControlLabel\n          key={c.id}\n          control={\n            <Checkbox checked={c.state} onClick={() => setOptions(c.id)} />\n          }\n          label={c.label}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n","import React, { ChangeEvent, useContext, useState } from 'react';\nimport styles from './JsonTree.module.css';\nimport { JsonTreeProps } from './JsonTreeProps';\nimport ReactJson from 'react-json-view';\nimport { editorOptions } from '../../Constant/CheckBox';\nimport { CheckBox } from '../CheckBox';\nimport { ICheckBox } from '../../Constant/Types';\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\nimport { useMediaQuery } from '../../Hooks/useMediaQuery';\nimport { Slider } from '@mui/material';\nimport { Text } from '../Text';\n\nexport const JsonTree = ({ data, isSmallScreen }: JsonTreeProps) => {\n  const { isDark } = useContext(AppContext);\n  const [options, setOptions] = useState<ICheckBox[]>(editorOptions);\n  const [space, setSpace] = useState<number>(isSmallScreen ? 4 : 10);\n  const handleChange = (id: number) => {\n    const changedIndex: number = options.find((i) => i.id === id)?.id! - 1;\n    const modifiedArray = [...options];\n    modifiedArray[changedIndex] = {\n      ...modifiedArray[changedIndex],\n      state: !modifiedArray[changedIndex].state,\n    };\n    setOptions(modifiedArray);\n  };\n  return (\n    <div className={styles.container}>\n      <div style={{ flexDirection: 'row', display: 'flex' }}>\n        <CheckBox\n          style={styles.checkboxs}\n          options={options}\n          setOptions={handleChange}\n        />\n        <div className={styles.slider}>\n          <Text>Space:</Text>\n          <Slider\n            onChange={(e: any) => setSpace(e.target.value)}\n            min={0}\n            max={15}\n            value={space}\n            valueLabelDisplay=\"auto\"\n            disableSwap\n          />\n        </div>\n      </div>\n      <ReactJson\n        style={{\n          width: '100%',\n          backgroundColor: options[0].state || isDark ? 'black' : 'white',\n        }}\n        src={data}\n        indentWidth={space}\n        onEdit={() => {}}\n        iconStyle={'circle'}\n        theme={options[0].state || isDark ? 'chalk' : undefined}\n        displayDataTypes={options[1].state}\n        collapsed={options[2].state ? 2 : undefined}\n        sortKeys={options[3].state}\n        displayObjectSize={options[4].state}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResContainer_container__ORbTk\"};","import React, { useEffect } from 'react';\nimport { JsonTree } from '../../../Components/JsonTree';\nimport { scrollTo } from '../../../Helpers/Scroll';\nimport styles from './ResContainer.module.css';\nimport { ResContainerProps } from './ResContainerProps';\nimport { useMediaQuery } from '../../../Hooks/useMediaQuery';\n\nexport const ResContainer = ({ data }: ResContainerProps) => {\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n\n  useEffect(() => {\n    if (data.res !== '') scrollTo({ id: 'result' });\n  }, [data.res]);\n  return (\n    <div id=\"result\" className={styles.container}>\n      {data.res !== '' && (\n        <JsonTree\n          isSmallScreen={isSmallScreen}\n          data={data.res !== '' && data.res}\n        />\n      )}\n    </div>\n  );\n};\n","export interface FormatterProps {\n  [key: string]: any;\n}\nexport interface ResState {\n  json: boolean;\n  res: string;\n}\nexport const ResInitState = {\n  json: true,\n  res: '',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HistoryModal_container__d0uap\"};","import React, { useEffect, useState } from 'react';\nimport styles from './HistoryModal.module.css';\nimport { HistoryModalProps } from './HistoryModalProps';\nimport { Text } from '../Text';\nimport { useLocalStorage } from '../../Hooks/useLocalStorage';\nimport { ButtonBase } from '@mui/material';\n\nexport const HistoryModal = ({ onClick, handleModal }: HistoryModalProps) => {\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\n\n  const onItemPressed = (e: any) => {\n    onClick(e.target.innerText);\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text variant=\"h6\"> Recent</Text>\n      {searches.length !== 0 ? (\n        searches.map((s: string, i: number) => (\n          <ButtonBase key={i} onClick={onItemPressed}>\n            <Text\n              sx={{\n                display: '-webkit-box',\n                overflow: 'hidden',\n                WebkitBoxOrient: 'vertical',\n                WebkitLineClamp: 1,\n              }}\n              variant=\"body1\"\n            >\n              {s.toString()}\n            </Text>\n          </ButtonBase>\n        ))\n      ) : (\n        <Text>There is no recent Data</Text>\n      )}\n    </div>\n  );\n};\n","import { useContext, useState } from 'react';\nimport styles from './Formatter.module.css';\nimport { FormatterBody } from './FormatterBody';\nimport { ResContainer } from './ResContainer';\nimport { ResInitState, ResState } from './FormatterProps';\nimport { Text } from '../../Components';\nimport { CIconButton } from '../../Components/CIconButton';\nimport HistoryIcon from '@mui/icons-material/History';\nimport { ModalContext } from '../../Components/ModalContext/ModalContext';\nimport { HistoryModal } from '../../Components/HistoryModal';\n\nconst Formatter = () => {\n  const { handleModal } = useContext(ModalContext);\n  const [raw, setRaw] = useState<string>('');\n\n  const [res, setRes] = useState<ResState>(ResInitState);\n  const [error, setError] = useState<string>('');\n  return (\n    <div className={styles.container}>\n      <div className={styles.headline}>\n        <Text className={styles.title} variant=\"h5\">\n          Json Formatter\n          <div className={styles.separator} />\n        </Text>\n        <div className={styles.history}>\n          <Text>History</Text>\n          <CIconButton\n            placement=\"right\"\n            title={'View Recent'}\n            onClick={() => handleModal(<HistoryModal onClick={setRaw} />)}\n          >\n            <HistoryIcon />\n          </CIconButton>\n        </div>\n      </div>\n      <FormatterBody\n        raw={raw}\n        setRaw={setRaw}\n        setRes={setRes}\n        error={error}\n        setError={setError}\n      />\n      {!error && <ResContainer data={res} />}\n    </div>\n  );\n};\nexport default Formatter;\n"],"names":["InputButtons","_ref","onChange","value","type","_ref$withFile","withFile","_jsxs","InputAdornment","className","styles","position","children","_jsx","CIconButton","placement","title","onClick","handleCopy","CallMadeSharp","handlePaste","CallReceivedSharp","DeleteIcon","IconButton","accept","id","concat","e","handleFile","style","display","htmlFor","Description","flexOptions","options","flexItemOptions","range","jsonExample","store","book","category","author","price","isbn","bicycle","color","methods","setValue","navigator","clipboard","readText","then","text","t","writeText","console","log","catch","err","error","_e$target$files","file","target","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert","prettifyJSON","jsonStr","prettyJson","indentLevel","inString","i","length","char","repeat","Math","max","extractTitles","array","map","item","objectToPairs","obj","Object","fromEntries","entries","filter","_ref2","_slicedToArray","_ref3","_ref4","key","scrollTo","_ref$behavior","behavior","_ref$block","block","_ref$withHighlight","withHighlight","element","document","getElementById","scrollIntoView","classList","add","setTimeout","remove","DropZone","fileName","setFileName","isDark","useContext","AppContext","onDragOver","preventDefault","stopPropagation","onDrop","dataTransfer","name","Text","_e$target2","useFetch","_useState","useState","_useState2","setError","_useState3","_useState4","isLoading","setLoading","fetchData","url","Promise","resolve","reject","URL","_","isUrlValid","fetch","res","json","data","message","finally","FetchModal","handleModal","_useFetch","TextField","label","helperText","variant","InputProps","endAdornment","FileCopy","Button","disabled","JSON","stringify","CircularProgress","size","useLocalStorage","initialValue","storedValue","localStorage","getItem","parse","useEffect","setItem","FormatterBody","setRes","raw","setRaw","ModalContext","countRef","useRef","_useLocalStorage","_useLocalStorage2","searches","setSearches","MultiLineInput","minRows","placeholder","width","formattedData","search","includes","updatedSearches","_toConsumableArray","handleSaveSearch","current","editorOptions","state","CheckBox","setOptions","FormGroup","flexDirection","c","FormControlLabel","control","Checkbox","checked","JsonTree","isSmallScreen","space","setSpace","_options$find","changedIndex","find","modifiedArray","_objectSpread","Slider","min","valueLabelDisplay","disableSwap","ReactJson","backgroundColor","src","indentWidth","onEdit","iconStyle","theme","undefined","displayDataTypes","collapsed","sortKeys","displayObjectSize","ResContainer","useMediaQuery","ResInitState","HistoryModal","onItemPressed","innerText","s","ButtonBase","sx","overflow","WebkitBoxOrient","WebkitLineClamp","toString","_useState5","_useState6","HistoryIcon"],"sourceRoot":""}