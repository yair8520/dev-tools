{"version":3,"file":"static/js/SharedWithMe.3dcd2a67.chunk.js","mappings":"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","sources":["Helpers/FireBase/ShareBin.ts","Helpers/Time.ts","webpack://dev-tools/./src/Pages/SharedWithMe/SharedWithMe.module.css?0d1e","Pages/SharedWithMe/SharedWithMe.tsx"],"sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport 'firebase/compat/firestore';\r\nimport { auth, db } from '../../Config/Firebase';\r\nimport { TShareBinData } from '../../Components/ShareEditor/ShareEditorProps';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { getTime } from '../Time';\r\nimport { TSharedLinks } from '../../Pages/ShareBinPage/ShareBinPageProps';\r\n\r\nconst firebaseMiddlware = (callback: (userRef: any) => void) => {\r\n  if (!auth.currentUser) {\r\n    console.log('not auth', auth.currentUser);\r\n    return;\r\n  }\r\n  const userRef = db.collection('users').doc(auth.currentUser!.email!);\r\n  callback(userRef);\r\n};\r\nexport const saveShareBinEntry = async (\r\n  id: string,\r\n  data: Omit<TShareBinData, 'code '>\r\n): Promise<void> => {\r\n  return new Promise<void>((resolve, reject) => {\r\n    firebaseMiddlware((userRef) => {\r\n      const updateData = {\r\n        [`share-bin`]: {\r\n          [`${id}`]: {\r\n            comment: data.comment,\r\n            date: data.date,\r\n            headline: data.headline,\r\n          },\r\n        },\r\n      };\r\n\r\n      userRef\r\n        .set(updateData, { merge: true })\r\n        .then(() => resolve())\r\n        .catch((error: any) => reject(error));\r\n    });\r\n  });\r\n};\r\nexport const getSharedEntryPerUser = async (): Promise<TSharedLinks | null> => {\r\n  return new Promise<TSharedLinks | null>((resolve, reject) => {\r\n    firebaseMiddlware((userRef) => {\r\n      userRef\r\n        .get()\r\n        .then((doc: any) => {\r\n          if (doc.exists) {\r\n            const shareBinData: TSharedLinks =\r\n              doc.data()?.['share-bin'] || null;\r\n            resolve(shareBinData);\r\n          } else {\r\n            resolve(null);\r\n          }\r\n        })\r\n        .catch(reject);\r\n    });\r\n  });\r\n};\r\n\r\nconst generateShortId = () => {\r\n  const fullUuid = uuidv4();\r\n  const shortId = fullUuid.substring(0, 8);\r\n  return shortId;\r\n};\r\n\r\nexport const addShareBinData = (shareBinData: TShareBinData) => {\r\n  const shortId = generateShortId();\r\n\r\n  const shareBinCollection = db.collection('share-bin');\r\n\r\n  const shareBinDocument = shareBinCollection.doc(shortId);\r\n  return shareBinDocument\r\n    .set({\r\n      code: shareBinData.code,\r\n      headline: shareBinData.headline,\r\n      comment: shareBinData.comment,\r\n      date: getTime(),\r\n    })\r\n    .then(() => {\r\n      return shortId;\r\n    })\r\n    .catch((error) => {\r\n      return 'Error adding share bin data: ';\r\n    });\r\n};\r\nexport const getSharedBinByID = (id: string): Promise<TShareBinData | null> => {\r\n  const shareBinCollection = db.collection('share-bin');\r\n\r\n  const shareBinDocument = shareBinCollection.doc(id);\r\n  return shareBinDocument\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        return doc.data() as TShareBinData;\r\n      } else {\r\n        return null;\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      throw new Error('Error getting share bin data: ' + error.message);\r\n    });\r\n};\r\n","import { TShareBinData } from \"../Components/ShareEditor/ShareEditorProps\";\nimport { TSharedLinks } from \"../Pages/ShareBinPage/ShareBinPageProps\";\n\nexport const getTime = () => {\n  const timestamp = Date.now();\n  const date = new Date(timestamp);\n\n  const dateString = date.toLocaleDateString('he-IL', {\n    day: '2-digit',\n    month: '2-digit',\n    year: '2-digit',\n  });\n\n  const timeString = date.toLocaleTimeString('he-IL', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `${timeString} ${dateString} `;\n};\n\nexport const getTimeStamp = () => {\n  const timestamp = Date.now();\n\n  return timestamp;\n};\nexport const sortByDate = (a: TShareBinData, b: TShareBinData) => {\n  const parseDate = (dateString: string | undefined): Date | null => {\n    if (!dateString) return null;\n\n    const [time, dayMonthYear] = dateString.split(' ');\n    const [hour, minute] = time.split(':');\n    const [day, month, year] = dayMonthYear.split('.');\n\n    // Creating a Date object with the parsed values\n    return new Date(`20${year}-${month}-${day}T${hour}:${minute}`);\n  };\n\n  const dateA = parseDate(a.date);\n  const dateB = parseDate(b.date);\n\n  if (dateA && dateB) {\n    return dateB.getTime() - dateA.getTime(); // Swapping dateA and dateB\n  } else if (dateA) {\n    return -1;\n  } else if (dateB) {\n    return 1;\n  }\n\n  return 0; // Handle cases where date is missing or not valid\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SharedWithMe_container__5iEwk\",\"enter\":\"SharedWithMe_enter__+1pJJ\",\"separator\":\"SharedWithMe_separator__9zX5U\",\"saveCon\":\"SharedWithMe_saveCon__rGc+2\",\"codeContainer\":\"SharedWithMe_codeContainer__pdJec\"};","import React, { useContext, useEffect, useState } from 'react';\nimport styles from './SharedWithMe.module.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { TShareBinData } from '../../Components/ShareEditor/ShareEditorProps';\nimport {\n  getSharedBinByID,\n  saveShareBinEntry,\n} from '../../Helpers/FireBase/ShareBin';\nimport { Text } from '../../Components';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\nimport { dracula, github } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { UserContext } from '../../Context/UserContext';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { Paper } from '@mui/material';\n\nconst SharedWithMe = () => {\n  const navigate = useNavigate();\n\n  const { targetId } = useParams();\n  const [data, setData] = useState<TShareBinData | null>();\n  const [saved, setSaved] = useState<boolean>();\n  const { isDark } = useContext(AppContext);\n  const { user } = useContext(UserContext);\n\n  useEffect(() => {\n    if (targetId) {\n      getSharedBinByID(targetId)\n        .then((d) => {\n          setData(d);\n        })\n        .catch(() => {\n          setData(null);\n        });\n    }\n  }, [targetId]);\n  useEffect(() => {\n    if (data && user)\n      saveShareBinEntry(targetId!, data)\n        .then(() => setSaved(true))\n        .catch(() => {});\n  }, [data, targetId, user]);\n\n  return (\n    <div className={styles.container}>\n      <Text style={{ alignSelf: 'center' }} padding={'25px'} variant=\"h6\">\n        Shared With Me\n        <div className={styles.separator} />\n      </Text>\n      <div style={{ alignSelf: 'center' }}>\n        {!user?.email ? (\n          'Log In with your Google Account to save '\n        ) : (\n          <>\n            <div className={styles.saveCon}>\n              Logged in as {user?.email}\n              <br />\n              {saved ? (\n                <Text\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    gap: '15px',\n                  }}\n                >\n                  Data saved in your account\n                  <LaunchIcon onClick={() => navigate('/share-bin')} />\n                </Text>\n              ) : null}\n            </div>\n          </>\n        )}\n      </div>\n      <div className={styles.content}>\n        <Paper>\n          <Text padding={'10px'} variant=\"h6\">\n            Headline : {data?.headline}\n          </Text>\n          {data?.comment && (\n            <Text padding={'10px'} variant=\"h6\">\n              Comment : {data?.comment}\n            </Text>\n          )}\n          <Text padding={'10px'} variant=\"h6\">\n            Date : {data?.date}\n          </Text>\n        </Paper>\n\n        <SyntaxHighlighter\n          style={isDark ? dracula : github}\n          showLineNumbers={true}\n          language=\"javascript\"\n        >\n          {data?.code ?? 'Error Invalid link: please try again '}\n        </SyntaxHighlighter>\n      </div>\n    </div>\n  );\n};\nexport default SharedWithMe;\n"],"names":["firebaseMiddlware","callback","auth","currentUser","console","log","db","collection","doc","email","saveShareBinEntry","async","id","data","Promise","resolve","reject","userRef","updateData","concat","comment","date","headline","set","merge","then","catch","error","getSharedEntryPerUser","get","exists","_doc$data","shareBinData","addShareBinData","shortId","uuidv4","substring","code","getTime","getSharedBinByID","Error","message","timestamp","Date","now","dateString","toLocaleDateString","day","month","year","timeString","toLocaleTimeString","hour","minute","getTimeStamp","sortByDate","a","b","parseDate","time","dayMonthYear","split","dateA","dateB","SharedWithMe","_data$code","navigate","useNavigate","targetId","useParams","setData","useState","saved","setSaved","isDark","useContext","AppContext","user","UserContext","useEffect","d","_jsxs","className","styles","container","children","Text","style","alignSelf","padding","variant","_jsx","separator","_Fragment","saveCon","display","alignItems","justifyContent","gap","LaunchIcon","onClick","content","Paper","SyntaxHighlighter","dracula","github","showLineNumbers","language"],"sourceRoot":""}