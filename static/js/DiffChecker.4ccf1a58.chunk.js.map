{"version":3,"file":"static/js/DiffChecker.4ccf1a58.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/DiffChecker/DiffChecker.module.css?647a","Components/DiffContainer/DiffContainer.tsx","Components/DiffChecker/DiffChecker.tsx","webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?0789","Components/DiffChecker/InputButtons/InputButtons.tsx","Helpers/Clipboard.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DiffChecker_container__iVQnA\",\"text\":\"DiffChecker_text__DyMxk\",\"inputs\":\"DiffChecker_inputs__vOwsE\",\"input\":\"DiffChecker_input__pzwqU\",\"inputContainer\":\"DiffChecker_inputContainer__hMfEq\"};","import React, { useContext } from 'react';\nimport './DiffContainer.module.css';\nimport { DiffContainerProps } from './DiffContainerProps';\nimport ReactDiffViewer from 'react-diff-viewer';\nimport { AppContext } from '../ThemeContext/ThemeContext';\n\nexport const DiffContainer = ({ original, changed }: DiffContainerProps) => {\n  const { isDark } = useContext(AppContext);\n\n  return (\n    <div style={{ maxWidth: '100vw', overflow: 'auto' }}>\n      <ReactDiffViewer\n        useDarkTheme={isDark}\n        rightTitle={'Changed'}\n        leftTitle={'Original'}\n        oldValue={original}\n        newValue={changed}\n        splitView={true}\n        showDiffOnly={false}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styles from './DiffChecker.module.css';\nimport { DiffContainer } from '../DiffContainer';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { Text } from '../Text';\nimport { InputButtons } from './InputButtons';\n\nconst DiffChecker = () => {\n  const [original, setOriginal] = useState<string>('');\n  const [changed, setChanged] = useState<string>('');\n  return (\n    <div className={styles.container}>\n      <Text variant=\"h4\" className={styles.text}>\n        Diff Checker\n      </Text>\n      <div className={styles.inputs}>\n        <div className={styles.inputContainer}>\n          <MultiLineInput\n            className={styles.input}\n            minRows={15}\n            maxRows={20}\n            placeholder={'Original'}\n            value={original}\n            onChange={setOriginal}\n            InputProps={{\n              endAdornment: (\n                <InputButtons\n                  type={'Original'}\n                  value={original}\n                  onChange={setOriginal}\n                />\n              ),\n            }}\n          />\n        </div>\n        <div className={styles.inputContainer}>\n          <MultiLineInput\n            className={styles.input}\n            minRows={15}\n            maxRows={20}\n            placeholder={'Changed'}\n            value={changed}\n            onChange={setChanged}\n            InputProps={{\n              endAdornment: (\n                <InputButtons\n                  type={'Changed'}\n                  value={changed}\n                  onChange={setChanged}\n                />\n              ),\n            }}\n          />\n        </div>\n      </div>\n      <DiffContainer original={original} changed={changed} />\n    </div>\n  );\n};\nexport default DiffChecker","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__bHQ8e\"};","import React from 'react';\nimport styles from './InputButtons.module.css';\nimport { InputButtonsProps } from './InputButtonsProps';\nimport { IconButton, InputAdornment } from '@mui/material';\nimport {\n  Description,\n  CallReceivedSharp,\n  CallMadeSharp,\n} from '@material-ui/icons';\nimport {\n  handleCopy,\n  handleFile,\n  handlePaste,\n} from '../../../Helpers/Clipboard';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { CIconButton } from '../../CIconButton';\nexport const InputButtons = ({\n  onChange,\n  value,\n  type,\n  withFile = true,\n}: InputButtonsProps) => {\n  return (\n    <InputAdornment className={styles.container} position=\"end\">\n      <CIconButton\n        placement=\"right\"\n        title={'Copy'}\n        onClick={() => handleCopy(value)}\n      >\n        <CallMadeSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"left\"\n        title={'Paste'}\n        onClick={() => handlePaste(onChange)}\n      >\n        <CallReceivedSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"right\"\n        title={'Delete'}\n        onClick={() => onChange('')}\n      >\n        <DeleteIcon />\n      </CIconButton>\n      {withFile && (\n        <IconButton onClick={() => {}}>\n          <input\n            type=\"file\"\n            accept=\".txt,.json\"\n            id={`fileInput${type}`}\n            onChange={(e) => handleFile(e, onChange)}\n            style={{ display: 'none' }}\n          />\n          <label htmlFor={`fileInput${type}`}>\n            <Description />\n          </label>\n        </IconButton>\n      )}\n    </InputAdornment>\n  );\n};\n","export const handlePaste = (setValue: (t: string) => void) => {\n  navigator.clipboard.readText().then((text) => setValue(text));\n};\nexport const handleCopy = (t: string) => {\n  navigator.clipboard\n    .writeText(t)\n    .then(() => {\n      console.log('Text copied to clipboard');\n    })\n    .catch((err) => {\n      console.error('Error copying text to clipboard:', err);\n    });\n};\nexport const handleFile = (\n  e: { target: { files: any } },\n  onChange: (t: any) => void\n) => {\n  const file = e.target.files?.[0];\n\n  if (file.type !== 'application/json' || file.type !== 'text/plain') {\n    alert('Invalid file type. Only JSON and TXT files are supported.');\n    return;\n  }\n\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    const content = e.target?.result;\n    onChange(content);\n  };\n  reader.readAsText(file);\n};\n"],"names":["DiffContainer","_ref","original","changed","isDark","useContext","AppContext","_jsx","style","maxWidth","overflow","children","ReactDiffViewer","useDarkTheme","rightTitle","leftTitle","oldValue","newValue","splitView","showDiffOnly","_useState","useState","_useState2","_slicedToArray","setOriginal","_useState3","_useState4","setChanged","_jsxs","className","styles","Text","variant","MultiLineInput","minRows","maxRows","placeholder","value","onChange","InputProps","endAdornment","InputButtons","type","_ref$withFile","withFile","InputAdornment","position","CIconButton","placement","title","onClick","handleCopy","CallMadeSharp","handlePaste","CallReceivedSharp","DeleteIcon","IconButton","accept","id","concat","e","handleFile","display","htmlFor","Description","setValue","navigator","clipboard","readText","then","text","t","writeText","console","log","catch","err","error","_e$target$files","file","target","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert"],"sourceRoot":""}