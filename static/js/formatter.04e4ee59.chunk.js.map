{"version":3,"file":"static/js/formatter.04e4ee59.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?0789","Components/DiffChecker/InputButtons/InputButtons.tsx","Helpers/Clipboard.ts","Helpers/Scroll.ts","webpack://dev-tools/./src/Pages/Formatter/Formatter.module.css?feee","Components/DropZone/DropZone.tsx","webpack://dev-tools/./src/Components/FetchModal/FetchModal.module.css?b24b","Hooks/useFetch/useFetch.ts","Helpers/Url.ts","Components/FetchModal/FetchModal.tsx","webpack://dev-tools/./src/Pages/Formatter/FormatterBody/FormatterBody.module.css?94f3","Hooks/useLocalStorage/useLocalStorage.ts","Pages/Formatter/FormatterBody/FormatterBody.tsx","webpack://dev-tools/./src/Components/JsonTree/JsonTree.module.css?b7cb","Constant/CheckBox.ts","Components/CheckBox/CheckBox.tsx","Components/JsonTree/JsonTree.tsx","webpack://dev-tools/./src/Pages/Formatter/ResContainer/ResContainer.module.css?4d28","Pages/Formatter/ResContainer/ResContainer.tsx","Pages/Formatter/FormatterProps.ts","webpack://dev-tools/./src/Components/HistoryModal/HistoryModal.module.css?2439","Components/HistoryModal/HistoryModal.tsx","Pages/Formatter/Formatter.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__bHQ8e\"};","import React from 'react';\nimport styles from './InputButtons.module.css';\nimport { InputButtonsProps } from './InputButtonsProps';\nimport { IconButton, InputAdornment } from '@mui/material';\nimport {\n  Description,\n  CallReceivedSharp,\n  CallMadeSharp,\n} from '@material-ui/icons';\nimport {\n  handleCopy,\n  handleFile,\n  handlePaste,\n} from '../../../Helpers/Clipboard';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { CIconButton } from '../../CIconButton';\nexport const InputButtons = ({\n  onChange,\n  value,\n  type,\n  withFile = true,\n}: InputButtonsProps) => {\n  return (\n    <InputAdornment className={styles.container} position=\"end\">\n      <CIconButton\n        placement=\"right\"\n        title={'Copy'}\n        onClick={() => handleCopy(value)}\n      >\n        <CallMadeSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"left\"\n        title={'Paste'}\n        onClick={() => handlePaste(onChange)}\n      >\n        <CallReceivedSharp />\n      </CIconButton>\n      <CIconButton\n        placement=\"right\"\n        title={'Delete'}\n        onClick={() => onChange('')}\n      >\n        <DeleteIcon />\n      </CIconButton>\n      {withFile && (\n        <IconButton onClick={() => {}}>\n          <input\n            type=\"file\"\n            accept=\".txt,.json\"\n            id={`fileInput${type}`}\n            onChange={(e) => handleFile(e, onChange)}\n            style={{ display: 'none' }}\n          />\n          <label htmlFor={`fileInput${type}`}>\n            <Description />\n          </label>\n        </IconButton>\n      )}\n    </InputAdornment>\n  );\n};\n","export const handlePaste = (setValue: (t: string) => void) => {\n  navigator.clipboard.readText().then((text) => setValue(text));\n};\nexport const handleCopy = (t: string) => {\n  navigator.clipboard\n    .writeText(t)\n    .then(() => {\n      console.log('Text copied to clipboard');\n    })\n    .catch((err) => {\n      console.error('Error copying text to clipboard:', err);\n    });\n};\nexport const handleFile = (\n  e: { target: { files: any } },\n  onChange: (t: any) => void\n) => {\n  const file = e.target.files?.[0];\n\n  if (file.type === 'application/json' || file.type === 'text/plain') {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result;\n      onChange(content);\n    };\n    reader.readAsText(file);\n  } else {\n    alert('Invalid file type. Only JSON and TXT files are supported.');\n    return;\n  }\n};\n","import { IScrollTo } from './Types';\nimport './scrollCss.css';\nexport const scrollTo = ({\n  id,\n  behavior = 'smooth',\n  block = 'start',\n  withHighlight = false,\n}: IScrollTo) => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.scrollIntoView({ behavior, block });\n    if (withHighlight) {\n      element.classList.add('custom-highlighted-class');\n      setTimeout(() => {\n        element && element.classList.remove('custom-highlighted-class');\n      }, 3000);\n    }\n  } else {\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Formatter_container__UUNvv\",\"separator\":\"Formatter_separator__E4tkG\",\"headline\":\"Formatter_headline__BQExT\",\"title\":\"Formatter_title__ibMOf\",\"history\":\"Formatter_history__QSDoZ\"};","import React, { useContext } from 'react';\nimport './DropZone.css';\nimport { DropZoneProps } from './DropZoneProps';\nimport { Text } from '../Text';\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\n\nexport const DropZone = ({\n  onChange,\n  fileName,\n  setFileName,\n}: DropZoneProps) => {\n  const { isDark } = useContext(AppContext);\n\n  const handleDragOver = (e: {\n    preventDefault: () => void;\n    stopPropagation: () => void;\n  }) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: {\n    preventDefault: () => void;\n    dataTransfer: { files: any };\n  }) => {\n    e.preventDefault();\n\n    const file = e.dataTransfer.files[0];\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\n      setFileName(file.name);\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result;\n        onChange(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Invalid file type. Only JSON and TXT files are supported.');\n    }\n  };\n\n  const handleFileChange = (e: { target: { files: any } }) => {\n    const file = e.target.files[0];\n    if (file?.type === 'application/json' || file?.type === 'text/plain') {\n      setFileName(file.name);\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result;\n        onChange(content);\n      };\n      reader.readAsText(file);\n    } else {\n      alert('Invalid file type. Only JSON and TXT files are supported.');\n    }\n  };\n\n  return (\n    <form id=\"form-file-upload\">\n      <label\n        id={isDark ? 'dark-label-file-upload' : 'label-file-upload'}\n        htmlFor=\"input-file-upload\"\n        onDragOver={handleDragOver}\n        onDrop={handleDrop}\n      >\n        {!fileName ? (\n          <div>\n            <Text>Drag and drop your file here or click for file explorer</Text>\n          </div>\n        ) : (\n          <Text>{fileName}</Text>\n        )}\n      </label>\n      <input\n        accept=\".txt,.json\"\n        type=\"file\"\n        id=\"input-file-upload\"\n        onChange={handleFileChange}\n      />\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"FetchModal_container__ZpWVl\",\"input\":\"FetchModal_input__HIplP\",\"button\":\"FetchModal_button__bFnxj\",\"buttonContainer\":\"FetchModal_buttonContainer__yq6v0\"};","import { useState } from 'react';\nimport { isUrlValid } from '../../Helpers/Url';\nimport { FetchProps, FetchState } from './useFetchProps';\n\nexport const useFetch = (): FetchState => {\n  const [error, setError] = useState<string>('');\n  const [isLoading, setLoading] = useState<boolean>(false);\n\n  const fetchData = ({ url }: FetchProps): Promise<any> => {\n    return new Promise((resolve, reject) => {\n      if (!isUrlValid(url)) {\n        setError('Invalid Url');\n        return;\n      }\n      setLoading(true);\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          resolve(data);\n        })\n        .catch((error) => {\n          setError(error.message);\n        })\n        .finally(() => setLoading(false));\n    });\n  };\n\n  return {\n    error,\n    isLoading,\n    setError,\n    fetchData,\n  };\n};\n","export const isUrlValid = (url: string) => {\n  try {\n    new URL(url);\n    return true;\n  } catch (_) {\n    return false;\n  }\n};\n","import {\n  Button,\n  CircularProgress,\n  IconButton,\n  InputAdornment,\n  TextField,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport styles from './FetchModal.module.css';\nimport { FetchModalProps } from './FetchModalProps';\nimport { FileCopy } from '@material-ui/icons';\nimport { useFetch } from '../../Hooks/useFetch/';\nimport { handlePaste } from '../../Helpers/Clipboard';\nexport const FetchModal = ({ onChange, handleModal }: FetchModalProps) => {\n  const [value, setValue] = useState<string>(\n    'https://jsonplaceholder.typicode.com/todos'\n  );\n  const { error, isLoading, fetchData, setError } = useFetch();\n\n  const loadData = () => {\n    setError('');\n    fetchData({ url: value }).then((data: any) => {\n      onChange(JSON.stringify(data, null, 5));\n      handleModal();\n    });\n  };\n  const handleChange = (e: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setValue(e.target.value);\n  };\n  return (\n    <div className={styles.container}>\n      <TextField\n        label=\"Url\"\n        error={!!error}\n        helperText={error}\n        variant=\"outlined\"\n        value={value}\n        onChange={handleChange}\n        className={styles.input}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton onClick={() => handlePaste(setValue)}>\n                <FileCopy />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={styles.buttonContainer}>\n        <Button\n          disabled={!value}\n          onClick={loadData}\n          className={styles.button}\n          variant=\"contained\"\n        >\n          {isLoading ? (\n            <CircularProgress\n              style={{ color: 'white' }}\n              color=\"success\"\n              size={24}\n            />\n          ) : (\n            'Load'\n          )}\n        </Button>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"inputs\":\"FormatterBody_inputs__kSx31\",\"buttonContainer\":\"FormatterBody_buttonContainer__APwnB\",\"subContainer\":\"FormatterBody_subContainer__6niOa\",\"input\":\"FormatterBody_input__gC1XE\",\"info\":\"FormatterBody_info__8Jdbz\",\"button\":\"FormatterBody_button__lPsgV\",\"reset\":\"FormatterBody_reset__BJSYp\",\"checkBox\":\"FormatterBody_checkBox__hzxCZ\"};","import { useState, useEffect } from 'react';\n\nexport const useLocalStorage = <T extends unknown>(\n  key: string,\n  initialValue: T\n): [T, React.Dispatch<React.SetStateAction<T>>] => {\n  const [value, setValue] = useState<T>(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue !== null ? JSON.parse(storedValue) : initialValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n\n  return [value, setValue];\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { Button } from '@mui/material';\nimport React, { useContext, useState, useRef } from 'react';\nimport { MultiLineInput } from '../../../Components';\nimport { DropZone } from '../../../Components/DropZone';\nimport { FetchModal } from '../../../Components/FetchModal';\nimport { ModalContext } from '../../../Components/ModalContext/ModalContext';\nimport { jsonExample } from '../../../Constant/DropDown';\nimport { prettifyJSON } from '../../../Helpers/Json';\nimport styles from './FormatterBody.module.css';\nimport { FormatterBodyProps } from './FormatterBodyProps';\nimport { InputButtons } from '../../../Components/DiffChecker/InputButtons';\nimport { useLocalStorage } from '../../../Hooks/useLocalStorage';\n\nexport const FormatterBody = ({\n  setRes,\n  setError,\n  error,\n  raw,\n  setRaw,\n}: FormatterBodyProps) => {\n  const [fileName, setFileName] = useState<string>('');\n  const { handleModal } = useContext(ModalContext);\n  const countRef = useRef<number>(0);\n  const resetFields = () => {\n    setRaw('');\n    setFileName('');\n    setError('');\n    setRes({ json: false, res: '' });\n  };\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\n  const handleSaveSearch = (search: string) => {\n    if (!searches.includes(search)) {\n      const updatedSearches = [...searches, search];\n      setSearches(updatedSearches);\n    }\n  };\n  const setExample = () => {\n    setRaw(JSON.stringify(jsonExample));\n  };\n  const formatCode = () => {\n    try {\n      const formattedData = JSON.stringify(JSON.parse(raw), null, 5);\n      setRes({ json: true, res: JSON.parse(formattedData) });\n      setRaw(formattedData);\n      setError('');\n      handleSaveSearch(formattedData);\n    } catch (error: any) {\n      if (countRef.current === 0) {\n        countRef.current++;\n        setRaw(prettifyJSON(raw));\n      }\n      setError(error.message);\n    }\n  };\n  return (\n    <div className={styles.inputs}>\n      <div className={styles.input}>\n        <MultiLineInput\n          minRows={25}\n          placeholder={'{ Paste / Write Your json here... }'}\n          id=\"resInput\"\n          onChange={setRaw}\n          value={raw}\n          helperText={error}\n          error={!!error}\n          InputProps={{\n            endAdornment: (\n              <InputButtons\n                withFile={false}\n                type={'Changed'}\n                value={raw}\n                onChange={setRaw}\n              />\n            ),\n          }}\n        />\n      </div>\n      <div className={styles.buttonContainer}>\n        <DropZone\n          setError={setError}\n          fileName={fileName}\n          setFileName={setFileName}\n          onChange={setRaw}\n        />\n        <div className={styles.reset}>\n          <Button\n            style={{ width: '50%' }}\n            color={'error'}\n            onClick={resetFields}\n          >\n            Reset\n          </Button>\n\n          <Button style={{ width: '50%' }} onClick={setExample}>\n            Example\n          </Button>\n          <Button\n            style={{ width: '100%' }}\n            onClick={() => handleModal(<FetchModal onChange={setRaw} />)}\n          >\n            Load From Url\n          </Button>\n          <div className={styles.checkBox}></div>\n          <Button\n            className={styles.button}\n            variant=\"contained\"\n            disabled={!raw}\n            onClick={formatCode}\n          >\n            format\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"JsonTree_container__cqf1V\",\"checkboxs\":\"JsonTree_checkboxs__MPqjS\",\"slider\":\"JsonTree_slider__4pUhC\"};","import { ICheckBox } from './Types';\n\nexport const editorOptions: ICheckBox[] = [\n  {\n    id: 1,\n    label: 'Dark theme',\n    state: false,\n  },\n  {\n    id: 2,\n    label: 'Data Types',\n    state: false,\n  },\n  {\n    id: 3,\n    label: 'Collapsed',\n    state: false,\n  },\n  {\n    id: 4,\n    label: 'Sort Keys',\n    state: false,\n  },\n  {\n    id: 5,\n    label: 'length',\n    state: false,\n  },\n];\n","import { FormGroup, FormControlLabel, Checkbox } from '@mui/material';\nimport React from 'react';\nimport { CheckBoxProps } from './CheckBoxProps';\n\nexport const CheckBox = ({ options, setOptions, style }: CheckBoxProps) => {\n  return (\n    <FormGroup style={{ flexDirection: 'row' }} className={style}>\n      {options.map((c) => (\n        <FormControlLabel\n          key={c.id}\n          control={\n            <Checkbox checked={c.state} onClick={() => setOptions(c.id)} />\n          }\n          label={c.label}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n","import React, { ChangeEvent, useContext, useState } from 'react';\nimport styles from './JsonTree.module.css';\nimport { JsonTreeProps } from './JsonTreeProps';\nimport ReactJson from 'react-json-view';\nimport { editorOptions } from '../../Constant/CheckBox';\nimport { CheckBox } from '../CheckBox';\nimport { ICheckBox } from '../../Constant/Types';\nimport { AppContext } from '../../Context/ThemeContext/ThemeContext';\nimport { useMediaQuery } from '../../Hooks/useMediaQuery';\nimport { Slider } from '@mui/material';\nimport { Text } from '../Text';\n\nexport const JsonTree = ({ data, isSmallScreen }: JsonTreeProps) => {\n  const { isDark } = useContext(AppContext);\n  const [options, setOptions] = useState<ICheckBox[]>(editorOptions);\n  const [space, setSpace] = useState<number>(isSmallScreen ? 4 : 10);\n  const handleChange = (id: number) => {\n    const changedIndex: number = options.find((i) => i.id === id)?.id! - 1;\n    const modifiedArray = [...options];\n    modifiedArray[changedIndex] = {\n      ...modifiedArray[changedIndex],\n      state: !modifiedArray[changedIndex].state,\n    };\n    setOptions(modifiedArray);\n  };\n  return (\n    <div className={styles.container}>\n      <div style={{ flexDirection: 'row', display: 'flex' }}>\n        <CheckBox\n          style={styles.checkboxs}\n          options={options}\n          setOptions={handleChange}\n        />\n        <div className={styles.slider}>\n          <Text>Space:</Text>\n          <Slider\n            onChange={(e: any) => setSpace(e.target.value)}\n            min={0}\n            max={15}\n            value={space}\n            valueLabelDisplay=\"auto\"\n            disableSwap\n          />\n        </div>\n      </div>\n      <ReactJson\n        style={{\n          width: '100%',\n          backgroundColor: options[0].state || isDark ? 'black' : 'white',\n        }}\n        src={data}\n        indentWidth={space}\n        onEdit={() => {}}\n        iconStyle={'circle'}\n        theme={options[0].state || isDark ? 'chalk' : undefined}\n        displayDataTypes={options[1].state}\n        collapsed={options[2].state ? 2 : undefined}\n        sortKeys={options[3].state}\n        displayObjectSize={options[4].state}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ResContainer_container__ORbTk\"};","import React, { useEffect } from 'react';\nimport { JsonTree } from '../../../Components/JsonTree';\nimport { scrollTo } from '../../../Helpers/Scroll';\nimport styles from './ResContainer.module.css';\nimport { ResContainerProps } from './ResContainerProps';\nimport { useMediaQuery } from '../../../Hooks/useMediaQuery';\n\nexport const ResContainer = ({ data }: ResContainerProps) => {\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n\n  useEffect(() => {\n    if (data.res !== '') scrollTo({ id: 'result' });\n  }, [data.res]);\n  return (\n    <div id=\"result\" className={styles.container}>\n      {data.res !== '' && (\n        <JsonTree\n          isSmallScreen={isSmallScreen}\n          data={data.res !== '' && data.res}\n        />\n      )}\n    </div>\n  );\n};\n","export interface FormatterProps {\n  [key: string]: any;\n}\nexport interface ResState {\n  json: boolean;\n  res: string;\n}\nexport const ResInitState = {\n  json: true,\n  res: '',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"HistoryModal_container__d0uap\"};","import React, { useEffect, useState } from 'react';\nimport styles from './HistoryModal.module.css';\nimport { HistoryModalProps } from './HistoryModalProps';\nimport { Text } from '../Text';\nimport { useLocalStorage } from '../../Hooks/useLocalStorage';\nimport { ButtonBase } from '@mui/material';\n\nexport const HistoryModal = ({ onClick, handleModal }: HistoryModalProps) => {\n  const [searches, setSearches] = useLocalStorage<any>('searches', []);\n\n  const onItemPressed = (e: any) => {\n    onClick(e.target.innerText);\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text variant=\"h6\"> Recent</Text>\n      {searches.length !== 0 ? (\n        searches.map((s: string, i: number) => (\n          <ButtonBase key={i} onClick={onItemPressed}>\n            <Text\n              sx={{\n                display: '-webkit-box',\n                overflow: 'hidden',\n                WebkitBoxOrient: 'vertical',\n                WebkitLineClamp: 1,\n              }}\n              variant=\"body1\"\n            >\n              {s.toString()}\n            </Text>\n          </ButtonBase>\n        ))\n      ) : (\n        <Text>There is no recent Data</Text>\n      )}\n    </div>\n  );\n};\n","import { useContext, useState } from 'react';\nimport styles from './Formatter.module.css';\nimport { FormatterBody } from './FormatterBody';\nimport { ResContainer } from './ResContainer';\nimport { ResInitState, ResState } from './FormatterProps';\nimport { Text } from '../../Components';\nimport { CIconButton } from '../../Components/CIconButton';\nimport HistoryIcon from '@mui/icons-material/History';\nimport { ModalContext } from '../../Components/ModalContext/ModalContext';\nimport { HistoryModal } from '../../Components/HistoryModal';\n\nconst Formatter = () => {\n  const { handleModal } = useContext(ModalContext);\n  const [raw, setRaw] = useState<string>('');\n\n  const [res, setRes] = useState<ResState>(ResInitState);\n  const [error, setError] = useState<string>('');\n  return (\n    <div className={styles.container}>\n      <div className={styles.headline}>\n        <Text className={styles.title} variant=\"h5\">\n          Json Formatter\n          <div className={styles.separator} />\n        </Text>\n        <div className={styles.history}>\n          <Text>History</Text>\n          <CIconButton\n            placement=\"right\"\n            title={'View Recent'}\n            onClick={() => handleModal(<HistoryModal onClick={setRaw} />)}\n          >\n            <HistoryIcon />\n          </CIconButton>\n        </div>\n      </div>\n      <FormatterBody\n        raw={raw}\n        setRaw={setRaw}\n        setRes={setRes}\n        error={error}\n        setError={setError}\n      />\n      {!error && <ResContainer data={res} />}\n    </div>\n  );\n};\nexport default Formatter;\n"],"names":["InputButtons","_ref","onChange","value","type","_ref$withFile","withFile","_jsxs","InputAdornment","className","styles","position","children","_jsx","CIconButton","placement","title","onClick","handleCopy","CallMadeSharp","handlePaste","CallReceivedSharp","DeleteIcon","IconButton","accept","id","concat","e","handleFile","style","display","htmlFor","Description","setValue","navigator","clipboard","readText","then","text","t","writeText","console","log","catch","err","error","_e$target$files","file","target","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert","scrollTo","_ref$behavior","behavior","_ref$block","block","_ref$withHighlight","withHighlight","element","document","getElementById","scrollIntoView","classList","add","setTimeout","remove","DropZone","fileName","setFileName","isDark","useContext","AppContext","onDragOver","preventDefault","stopPropagation","onDrop","dataTransfer","name","Text","_e$target2","useFetch","_useState","useState","_useState2","_slicedToArray","setError","_useState3","_useState4","isLoading","setLoading","fetchData","url","Promise","resolve","reject","URL","_","isUrlValid","fetch","res","json","data","message","finally","FetchModal","handleModal","_useFetch","TextField","label","helperText","variant","InputProps","endAdornment","FileCopy","Button","disabled","JSON","stringify","CircularProgress","color","size","useLocalStorage","key","initialValue","storedValue","localStorage","getItem","parse","useEffect","setItem","FormatterBody","setRes","raw","setRaw","ModalContext","countRef","useRef","_useLocalStorage","_useLocalStorage2","searches","setSearches","MultiLineInput","minRows","placeholder","width","jsonExample","formattedData","search","includes","updatedSearches","_toConsumableArray","handleSaveSearch","current","prettifyJSON","editorOptions","state","CheckBox","options","setOptions","FormGroup","flexDirection","map","c","FormControlLabel","control","Checkbox","checked","JsonTree","isSmallScreen","space","setSpace","_options$find","changedIndex","find","i","modifiedArray","_objectSpread","Slider","min","max","valueLabelDisplay","disableSwap","ReactJson","backgroundColor","src","indentWidth","onEdit","iconStyle","theme","undefined","displayDataTypes","collapsed","sortKeys","displayObjectSize","ResContainer","useMediaQuery","ResInitState","HistoryModal","onItemPressed","innerText","length","s","ButtonBase","sx","overflow","WebkitBoxOrient","WebkitLineClamp","toString","_useState5","_useState6","HistoryIcon"],"sourceRoot":""}