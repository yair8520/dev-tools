{"version":3,"file":"static/js/ToDo.7299c5ac.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Pages/ToDoPage/ToDoPage.module.css?5b65","webpack://dev-tools/./src/Components/ToDoSections/ToDoSections.module.css?5cd8","Components/ToDoSections/ToDoSectionsProps.ts","Components/ToDoSections/DirItem/DirItem.tsx","Components/ToDoSections/helper.ts","webpack://dev-tools/./src/Components/DirModal/DirModal.module.css?c561","Components/DirModal/DirModal.tsx","Components/ToDoSections/ToDoSections.tsx","webpack://dev-tools/./src/Components/ToDoList/ToDoList.module.css?5dc9","webpack://dev-tools/./src/Components/ToDoList/ToDoListItem/ToDoListItem.module.css?1806","Components/ToDoList/ToDoListItem/ToDoListItem.tsx","webpack://dev-tools/./src/Components/TodoModal/TodoModal.module.css?f871","Components/TodoModal/TodoModal.tsx","Helpers/Todo.tsx","Components/ToDoList/ToDoList.tsx","Pages/ToDoPage/ToDoPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoPage_container__mTquY\",\"menuButton\":\"ToDoPage_menuButton__b4Zu+\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoSections_container__rNbLx\",\"hide\":\"ToDoSections_hide__lwkvc\",\"addSection\":\"ToDoSections_addSection__gVOpv\",\"drawer\":\"ToDoSections_drawer__cj3xR\"};","import { DrawerProps } from '@mui/material';\nimport { TodoItem } from '../../Pages/ToDoPage/Todo';\n\nexport interface ToDoSectionsProps {\n  [key: string]: any;\n  list: TodoItem[];\n  setSelectedDir: Function;\n  selectedDir: string;\n}\n\nexport const drawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'permanent',\n  sx: {\n    '& .MuiDrawer-paper': {\n      position: 'unset',\n    },\n  },\n};\nexport const mobileDrawerProps: DrawerProps = {\n  anchor: 'left',\n  variant: 'temporary',\n  sx: {\n    '& .MuiDrawer-paper': {\n      padding: '25px',\n      width:'70%',\n      height: '100%',\n    },\n  },\n};\n","import React from 'react';\nimport styles from './DirItem.module.css';\nimport { DirItemProps } from './DirItemProps';\nimport {\n  ListItem,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\n\nexport const DirItem = ({\n  title,\n  onItemClick,\n  selectedDir,\n  Icon,\n}: DirItemProps) => {\n  return (\n    <ListItem key={title} disablePadding>\n      <ListItemButton selected={selectedDir} onClick={() => onItemClick(title)}>\n        {Icon && (\n          <ListItemIcon>\n            <Icon />\n          </ListItemIcon>\n        )}\n        <ListItemText primary={title} />\n      </ListItemButton>\n    </ListItem>\n  );\n};\n","import TodayIcon from '@mui/icons-material/Today';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport SubjectIcon from '@mui/icons-material/Subject';\nimport GradingIcon from '@mui/icons-material/Grading';\nexport const defualtFolders = [\n  {\n    title: 'All',\n    icon: SubjectIcon,\n  },\n  {\n    title: 'today`s tasks',\n    icon: TodayIcon,\n  },\n  {\n    title: 'Favorites',\n    icon: FavoriteIcon,\n  },\n  {\n    title: 'Complited',\n    icon: GradingIcon,\n  },\n];\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DirModal_container__sVDQo\",\"input\":\"DirModal_input__Vz+OI\",\"title\":\"DirModal_title__PLwTo\",\"buttonContainer\":\"DirModal_buttonContainer__jW-IW\",\"button\":\"DirModal_button__vZPHg\"};","import React, { useContext, useState } from 'react';\nimport styles from './DirModal.module.css';\nimport { DirModalProps } from './DirModalProps';\nimport { Text } from '../Text';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { Button } from '@mui/material';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\n\nexport const DirModal = ({ handleModal }: DirModalProps) => {\n  const { setDirs, dirs } = useContext(TodoContext);\n  const [title, setTitle] = useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const onSave = () => {\n    if (!title) return setError('Required Field');\n    if (dirs.includes(title)) return setError('Already exists');\n    setDirs((p: string[]) => [...p, title]);\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text className={styles.title} variant=\"h5\">\n        Add Directory\n      </Text>\n      <MultiLineInput\n        className={styles.input}\n        value={title}\n        error={!!error}\n        helperText={error}\n        label={'Title'}\n        onChange={setTitle}\n      />\n      <div className={styles.buttonContainer}>\n        <Button onClick={onSave} variant=\"contained\" className={styles.button}>\n          save\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useState } from 'react';\nimport styles from './ToDoSections.module.css';\nimport { drawerProps, mobileDrawerProps } from './ToDoSectionsProps';\nimport {\n  Button,\n  Collapse,\n  Drawer,\n  List,\n  ListItemButton,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport { DirItem } from './DirItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\nimport FolderIcon from '@mui/icons-material/Folder';\nimport { defualtFolders } from './helper';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { DirModal } from '../DirModal';\nimport { UserContext } from '../../Context/UserContext';\nimport { Text } from '../Text';\nexport const ToDoSections = ({\n  isSmallScreen,\n  setMobileOpen,\n  mobileOpen,\n}: any) => {\n  const props = isSmallScreen ? mobileDrawerProps : drawerProps;\n  const { selectedDir, dirs, setSelectedDir } = useContext(TodoContext);\n  const { handleModal } = useContext(ModalContext);\n  const { user } = useContext(UserContext);\n  const [open, setOpen] = React.useState(true);\n  const onItemClick = (dir: string) => {\n    setSelectedDir(dir);\n  };\n  const openEditModal = () => {\n    handleModal(<DirModal />);\n  };\n  return (\n    <div className={styles.container}>\n      <Drawer\n        onClose={() => setMobileOpen(!mobileOpen)}\n        open={mobileOpen}\n        className={styles.drawer}\n        {...props}\n      >\n        <Text\n          style={{\n            alignSelf: 'center',\n            textAlign: 'center',\n            padding: '25px 0 25px',\n            width:'90%'\n          }}\n          variant=\"subtitle2\"\n          textOverflow='clip'\n        >\n          {!user?.email\n            ? 'Log In with your Google Account to save your progress'\n            : `Logged in as ${user?.email}`}\n        </Text>\n        <Button\n          variant=\"contained\"\n          className={styles.addSection}\n          onClick={openEditModal}\n        >\n          Add Directory +\n        </Button>\n        <List>\n          {defualtFolders.map((dir) => (\n            <DirItem\n              Icon={dir.icon}\n              selectedDir={selectedDir === dir.title}\n              onItemClick={() => onItemClick(dir.title)}\n              key={dir.title}\n              title={dir.title}\n            />\n          ))}\n          <ListItemButton onClick={() => setOpen(!open)}>\n            <ListItemIcon>\n              <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Directories\" />\n            {open ? <ExpandLess /> : <ExpandMore />}\n          </ListItemButton>\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {dirs.map((dir) => (\n              <DirItem\n                selectedDir={selectedDir === dir}\n                onItemClick={() => onItemClick(dir)}\n                key={dir}\n                title={dir}\n              />\n            ))}\n          </Collapse>\n        </List>\n      </Drawer>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoList_container__WvZ-g\",\"grid\":\"ToDoList_grid__pjiVL\",\"emptyList\":\"ToDoList_emptyList__zBu16\",\"addNote\":\"ToDoList_addNote__lZ3eL\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ToDoListItem_container__Fy8jG\",\"dirTag\":\"ToDoListItem_dirTag__BWYUN\",\"dateText\":\"ToDoListItem_dateText__Gibgs\",\"title\":\"ToDoListItem_title__c-JFL\",\"desc\":\"ToDoListItem_desc__sBct-\",\"subContainer\":\"ToDoListItem_subContainer__cy54m\",\"content\":\"ToDoListItem_content__DnZ47\",\"bottom\":\"ToDoListItem_bottom__aR41l\",\"bottomButtons\":\"ToDoListItem_bottomButtons__gIpmi\",\"date\":\"ToDoListItem_date__MyGOE\"};","import React from 'react';\nimport styles from './ToDoListItem.module.css';\nimport { ToDoListItemProps } from './ToDoListItemProps';\nimport { Box, Card, Paper } from '@mui/material';\nimport { Text } from '../../Text';\nimport ScheduleIcon from '@mui/icons-material/Schedule';\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\nimport TaskAltIcon from '@mui/icons-material/TaskAlt';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { CIconButton } from '../../CIconButton';\n\nexport const ToDoListItem = ({\n  item,\n  onItemClick,\n  onComplete,\n  onFavorite,\n  onDelete,\n}: ToDoListItemProps) => {\n  const onItemPresssed = (func: Function) => (e: Event) => {\n    e.stopPropagation();\n    func(item.id);\n  };\n\n  return (\n    <Paper className={styles.container} onClick={onItemClick}>\n      <div className={styles.dirTag}> {item.dir}</div>\n      <div className={styles.subContainer}>\n        <div className={styles.content}>\n          <Text variant=\"h6\" className={styles.title}>\n            {item.title}\n          </Text>\n          <Text variant=\"body2\" className={styles.desc}>\n            {item.desc}\n          </Text>\n        </div>\n        <div className={styles.date}>\n          <Text className={styles.dateText}>{item.date}</Text>\n          <ScheduleIcon />\n        </div>\n        <div className={styles.bottom}>\n          <div className={styles.bottomButtons}>\n            <CIconButton\n              title={'Favorite'}\n              onClick={onItemPresssed(onFavorite)}\n            >\n              <FavoriteBorderIcon\n                htmlColor={item.favorite ? 'red' : undefined}\n              />\n            </CIconButton>\n            <CIconButton\n              title={item.completed ? 'Done' : 'InProgress'}\n              onClick={onItemPresssed(onComplete)}\n            >\n              <TaskAltIcon htmlColor={item.completed ? 'green' : 'orange'} />\n            </CIconButton>\n            <CIconButton title={'Delete'} onClick={onItemPresssed(onDelete)}>\n              <DeleteOutlineIcon />\n            </CIconButton>\n          </div>\n        </div>\n      </div>\n    </Paper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TodoModal_container__xSmmQ\",\"bottomContainer\":\"TodoModal_bottomContainer__8zjGV\",\"label\":\"TodoModal_label__2pqOA\",\"button\":\"TodoModal_button__6Rv4X\",\"titleInput\":\"TodoModal_titleInput__lOl0g\",\"content\":\"TodoModal_content__bXfoP\",\"descInput\":\"TodoModal_descInput__Mo6Yd\",\"datePicker\":\"TodoModal_datePicker__Tyxuz\",\"dropDown\":\"TodoModal_dropDown__D2adS\"};","import React, { useContext, useMemo, useState } from 'react';\nimport styles from './TodoModal.module.css';\nimport { TodoModalProps } from './TodoModalProps';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { Button, InputLabel, MenuItem, Select } from '@mui/material';\nimport { MultiLineInput } from '../MultiLineInput';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport dayjs from 'dayjs';\n\nexport const TodoModal = ({ item, handleModal }: TodoModalProps) => {\n  const { addTodo, dirs, selectedDir } = useContext(TodoContext);\n  const [formValues, setFormValues] = useState({\n    title: item?.title ?? '',\n    desc: item?.desc ?? '',\n    dir: item?.dir ?? selectedDir,\n    date: item?.date ? item.date : dayjs().format('YYYY-MM-DD'),\n  });\n  const [formErrors, setFormErrors] = useState({\n    title: '',\n    dir: '',\n  });\n  const { title, desc, dir, date } = formValues;\n  const onChange = (val: any, key: string) => {\n    setFormValues({ ...formValues, [key]: val });\n  };\n  const validateForm = () => {\n    if (\n      !formValues.dir ||\n      formValues.dir === 'All' ||\n      formValues.dir === 'today`s tasks'\n    ) {\n      setFormErrors({ ...formErrors, ['dir']: 'Requird Field' });\n      return false;\n    }\n\n    if (!formValues.title) {\n      setFormErrors({ ...formErrors, ['title']: 'Requird Field' });\n      return false;\n    }\n    return true;\n  };\n  const onclick = (e: any) => {\n    if (validateForm()) {\n      addTodo({ ...item, ...formValues });\n      handleModal();\n    }\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.content}>\n        <MultiLineInput\n          value={title}\n          required={true}\n          error={!!formErrors.title}\n          helperText={formErrors.title}\n          maxRows={1}\n          label=\"Title\"\n          onChange={(val) => onChange(val, 'title')}\n          className={styles.titleInput}\n        />\n        <div className={styles.bottomContainer}>\n          <InputLabel className={styles.label}>Task Date</InputLabel>\n          <DatePicker\n            value={dayjs(date)}\n            onChange={(a) => onChange(dayjs(a).format('YYYY-MM-DD'), 'date')}\n            className={styles.datePicker}\n          />\n          <InputLabel className={styles.label}>Select Directory *</InputLabel>\n          <Select\n            required={true}\n            error={!!formErrors.dir}\n            value={dir}\n            onChange={(e) => {\n              onChange(e.target.value, 'dir');\n            }}\n            className={styles.dropDown}\n          >\n            {dirs.map((item: string) => (\n              <MenuItem key={item} value={item}>\n                {item}\n              </MenuItem>\n            ))}\n          </Select>\n        </div>\n        <MultiLineInput\n          value={desc}\n          minRows={3}\n          label=\"Description\"\n          maxRows={8}\n          onChange={(val) => onChange(val, 'desc')}\n          className={styles.descInput}\n        />\n      </div>\n      <Button onClick={onclick} className={styles.button} variant=\"contained\">\n        {item ? 'save' : 'Update'}\n      </Button>\n    </div>\n  );\n};\n","import dayjs from 'dayjs';\nimport { TodoItem } from '../Pages/ToDoPage/Todo';\n\nexport const getFilterFunction = (dir: string, list: TodoItem[]) => {\n  let index: number = defualtFolders.findIndex((l) => l.title === dir);\n  if (index === -1) return list.filter((l) => l.dir === dir);\n  return list.filter(defualtFolders[index].filterBy);\n};\n\nconst defualtFolders = [\n  {\n    title: 'All',\n    filterBy: (a: any) => true,\n  },\n  {\n    title: 'today`s tasks',\n    filterBy: (a: any) => a.date === dayjs().format('YYYY-MM-DD'),\n  },\n  {\n    title: 'Favorites',\n    filterBy: (a: any) => a.favorite === true,\n  },\n  {\n    title: 'Complited',\n    filterBy: (a: any) => a.completed === true,\n  },\n];\n\nexport const emptyList: Record<string, string> = {\n  Complited: '<strong>No completed tasks yet.</strong>\\n  Start completing tasks to see them here!',\n  Favorites: '<strong>No favorite tasks yet.</strong>\\n Add tasks to your favorites to see them here!',\n  All: '<strong>No tasks found.</strong>\\n Add tasks to see them here!',\n};\n","import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport styles from './ToDoList.module.css';\nimport { ToDoListProps } from './ToDoListProps';\nimport { ToDoListItem } from './ToDoListItem';\nimport { TodoContext } from '../../Context/TodoContext/TodoContext';\nimport { ModalContext } from '../ModalContext/ModalContext';\nimport { TodoModal } from '../TodoModal';\nimport { emptyList, getFilterFunction } from '../../Helpers/Todo';\nimport { Text } from '../Text';\n\nexport const ToDoList = () => {\n  const { list, onDelete, onFavorite, onComplete, selectedDir } =\n    useContext(TodoContext);\n    const arrayList = list ? Object.values(list) : [];\n\n  const { handleModal } = useContext(ModalContext);\n  const todoList = useMemo(() => {\n    return getFilterFunction(selectedDir, arrayList);\n  }, [selectedDir, list]);\n\n  const onItemClick = useCallback(\n    (id: string) => {\n      const item = arrayList.filter((i) => i.id === id)[0];\n      handleModal(<TodoModal item={item} />);\n    },\n    [list, handleModal]\n  );\n  const hideAddButton = ['Favorites', 'Complited',\"All\"];\n  const Empty = () => {\n    if (hideAddButton.includes(selectedDir) && todoList.length === 0) {\n      return (\n        <div className={styles.emptyList}>\n          <Text\n            style={{ whiteSpace: 'pre-line' }}\n            dangerouslySetInnerHTML={{\n              __html: emptyList[selectedDir as keyof object],\n            }}\n          />\n        </div>\n      );\n    } else if (hideAddButton.includes(selectedDir)) {\n      return null;\n    }\n    return (\n      <div className={styles.addNote} onClick={() => onItemClick('-1')}>\n        <Text> Add Task +</Text>\n      </div>\n    );\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.grid}>\n        {todoList.map((item) => (\n          <ToDoListItem\n            key={item.id}\n            onItemClick={() => onItemClick(item.id)}\n            onComplete={onComplete}\n            onFavorite={onFavorite}\n            onDelete={onDelete}\n            item={item}\n          />\n        ))}\n\n        <Empty />\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport styles from './ToDoPage.module.css';\nimport { ToDoSections } from '../../Components/ToDoSections';\nimport { ToDoList } from '../../Components/ToDoList';\nimport { Fab, useMediaQuery } from '@mui/material';\nimport MenuOpenIcon from '@mui/icons-material/MenuOpen';\n\nconst ToDoPage = () => {\n  const isSmallScreen = useMediaQuery('(max-width: 600px)');\n  const [mobileOpen, setMobileOpen] = useState<boolean>(!isSmallScreen);\n  return (\n    <div className={styles.container}>\n      {isSmallScreen && (\n        <Fab\n          className={styles.menuButton}\n          onClick={() => setMobileOpen(!mobileOpen)}\n        >\n          <MenuOpenIcon />\n        </Fab>\n      )}\n      <ToDoSections\n        mobileOpen={mobileOpen}\n        setMobileOpen={setMobileOpen}\n        isSmallScreen={isSmallScreen}\n      />\n      <ToDoList />\n    </div>\n  );\n};\nexport default ToDoPage;\n"],"names":["drawerProps","anchor","variant","sx","position","mobileDrawerProps","padding","width","height","DirItem","_ref","title","onItemClick","selectedDir","Icon","_jsx","ListItem","disablePadding","children","_jsxs","ListItemButton","selected","onClick","ListItemIcon","ListItemText","primary","defualtFolders","icon","SubjectIcon","TodayIcon","FavoriteIcon","GradingIcon","DirModal","handleModal","_useContext","useContext","TodoContext","setDirs","dirs","_useState","useState","_useState2","_slicedToArray","setTitle","_useState3","_useState4","error","setError","className","styles","Text","MultiLineInput","value","helperText","label","onChange","Button","includes","p","concat","_toConsumableArray","ToDoSections","isSmallScreen","setMobileOpen","mobileOpen","props","setSelectedDir","ModalContext","user","UserContext","_React$useState","React","_React$useState2","open","setOpen","dir","Drawer","_objectSpread","onClose","style","alignSelf","textAlign","textOverflow","email","List","map","FolderIcon","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","ToDoListItem","item","onComplete","onFavorite","onDelete","onItemPresssed","func","e","stopPropagation","id","Paper","desc","date","ScheduleIcon","CIconButton","FavoriteBorderIcon","htmlColor","favorite","undefined","completed","TaskAltIcon","DeleteOutlineIcon","TodoModal","_item$title","_item$desc","_item$dir","addTodo","dayjs","format","formValues","setFormValues","formErrors","setFormErrors","val","key","_defineProperty","required","maxRows","InputLabel","DatePicker","a","Select","target","MenuItem","minRows","filterBy","emptyList","Complited","Favorites","All","ToDoList","list","arrayList","Object","values","todoList","useMemo","index","findIndex","l","filter","getFilterFunction","useCallback","i","hideAddButton","Empty","length","whiteSpace","dangerouslySetInnerHTML","__html","useMediaQuery","Fab","MenuOpenIcon"],"sourceRoot":""}