{"version":3,"file":"static/js/Notes.d7306dfc.chunk.js","mappings":"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","sources":["webpack://dev-tools/./src/Components/ConfirmModal/ConfirmModal.module.css?c22e","Components/ConfirmModal/ConfirmModal.tsx","webpack://dev-tools/./src/Components/DiffChecker/InputButtons/InputButtons.module.css?2797","Components/InputPropsEditor/InputPropsEditor.tsx","Components/DiffChecker/InputButtons/InputButtons.tsx","webpack://dev-tools/./src/Components/Notes/Notes.module.css?64d7","webpack://dev-tools/./src/Components/SearchBar/SearchBar.module.css?fbf5","Components/SearchBar/SearchBar.tsx","webpack://dev-tools/./src/Components/Notes/NotesList/NotesList.module.css?79be","webpack://dev-tools/./src/Components/Notes/NotesList/NotesItem/NotesItem.module.css?588b","Components/Notes/NotesList/NotesItem/NotesItem.tsx","webpack://dev-tools/./src/Components/Seperator/Seperator.module.css?cf70","Components/Seperator/Seperator.tsx","webpack://dev-tools/./src/Components/NoteModal/NoteModal.module.css?53d7","Components/NoteModal/NoteModal.tsx","webpack://dev-tools/./src/Components/AddItem/AddItem.module.css?3f65","Components/AddItem/AddItem.tsx","Components/Notes/NotesList/NotesList.tsx","Components/Notes/helper.ts","webpack://dev-tools/./src/Components/RefreshControl/RefreshControl.module.css?cbe9","Components/RefreshControl/RefreshControl.tsx","Components/Notes/Notes.tsx","Helpers/Clipboard.ts","Helpers/Scroll.ts","Helpers/Time.ts","Hooks/usePullToRefresh.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ConfirmModal_container__gM2W5\",\"buttons\":\"ConfirmModal_buttons__gvsF7\"};","import React from 'react';\nimport styles from './ConfirmModal.module.css';\nimport { ConfirmModalProps } from './ConfirmModalProps';\nimport { Text } from '../Text';\nimport { Button } from '@mui/material';\n\nexport const ConfirmModal = ({\n  title,\n  handleModal,\n  onNext,\n}: ConfirmModalProps) => {\n  const handlerWrapper = (cb?: Function) => {\n    cb?.();\n    handleModal();\n  };\n  return (\n    <div className={styles.container}>\n      <Text variant=\"h6\"> {title}</Text>\n      <div className={styles.buttons}>\n        <Button onClick={() => handlerWrapper()}>Cancel</Button>\n        <Button onClick={() => handlerWrapper(onNext)}>Yes!</Button>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"InputButtons_container__bHQ8e\"};","import React from 'react';\nimport styles from './InputPropsEditor.module.css';\nimport { InputPropsEditorProps } from './InputPropsEditorProps';\nimport { CIconButton } from '../CIconButton';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nexport const InputPropsEditor = ({\n  multiLineInputRef,\n}: InputPropsEditorProps) => {\n  const handleAlignRightClick = () => {\n    if (multiLineInputRef && multiLineInputRef.current) {\n      multiLineInputRef.current.style.textAlign = 'right';\n    }\n  };\n\n  const handleAlignLeftClick = () => {\n    if (multiLineInputRef && multiLineInputRef.current) {\n      multiLineInputRef.current.style.textAlign = 'left';\n    }\n  };\n\n  const handleAlignCenterClick = () => {\n    if (multiLineInputRef && multiLineInputRef.current) {\n      multiLineInputRef.current.style.textAlign = 'center';\n    }\n  };\n\n  return (\n    <>\n      <CIconButton onClick={handleAlignRightClick}>\n        <FormatAlignRightIcon />\n      </CIconButton>\n      <CIconButton onClick={handleAlignLeftClick}>\n        <FormatAlignLeftIcon />\n      </CIconButton>\n      <CIconButton onClick={handleAlignCenterClick}>\n        <FormatAlignCenterIcon />\n      </CIconButton>\n    </>\n  );\n};\n","import React from 'react';\nimport styles from './InputButtons.module.css';\nimport { InputButtonsProps } from './InputButtonsProps';\nimport { IconButton, InputAdornment } from '@mui/material';\nimport { Description } from '@material-ui/icons';\nimport {\n  handleCopy,\n  handleFile,\n  handlePaste,\n} from '../../../Helpers/Clipboard';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport { CIconButton } from '../../CIconButton';\nimport { InputPropsEditor } from '../../InputPropsEditor';\nimport ContentPasteIcon from '@mui/icons-material/ContentPaste';\nexport const InputButtons = ({\n  onChange,\n  value,\n  type,\n  withFile = true,\n  editor = false,\n  multiLineInputRef,\n}: InputButtonsProps) => {\n  return (\n    <InputAdornment className={styles.container} position=\"end\">\n      <CIconButton\n        placement=\"right\"\n        title={'Copy'}\n        onClick={() => handleCopy(value)}\n      >\n        <ContentCopyIcon />\n      </CIconButton>\n      <CIconButton\n        placement=\"left\"\n        title={'Paste'}\n        onClick={() => handlePaste(onChange)}\n      >\n        <ContentPasteIcon />\n      </CIconButton>\n      <CIconButton\n        placement=\"right\"\n        title={'Delete'}\n        onClick={() => onChange('')}\n      >\n        <DeleteIcon />\n      </CIconButton>\n      {withFile && (\n        <IconButton onClick={() => {}}>\n          <input\n            type=\"file\"\n            accept=\".txt,.json\"\n            id={`fileInput${type}`}\n            onChange={(e) => handleFile(e, onChange)}\n            style={{ display: 'none' }}\n          />\n          <label htmlFor={`fileInput${type}`}>\n            <Description />\n          </label>\n        </IconButton>\n      )}\n      {editor && <InputPropsEditor multiLineInputRef={multiLineInputRef} />}\n    </InputAdornment>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Notes_container__joMyt\",\"separator\":\"Notes_separator__KRtoi\",\"content\":\"Notes_content__PPCRZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"SearchBar_container__1josg\",\"dropDown\":\"SearchBar_dropDown__NPdVq\",\"dropDownContainer\":\"SearchBar_dropDownContainer__++oiw\",\"textField\":\"SearchBar_textField__NElI3\"};","import React, { useState } from 'react';\nimport styles from './SearchBar.module.css';\nimport { SearchBarProps } from './SearchBarProps';\nimport { MenuItem, Select, TextField } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ClearIcon from '@mui/icons-material/Clear';\n\nexport const SearchBar = ({\n  value,\n  onChange,\n  options,\n  filterByTimeAndSection,\n}: SearchBarProps) => {\n  const [filter, setFilter] = useState<string>('All');\n  const [dir, setDir] = useState<string>('Descending');\n  return (\n    <div className={styles.container}>\n      <TextField\n        className={styles.textField}\n        label=\"Search\"\n        variant=\"outlined\"\n        fullWidth={true}\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        InputProps={{\n          startAdornment: <SearchIcon />,\n          endAdornment: value && (\n            <div onClick={() => onChange('')}>\n              {' '}\n              <ClearIcon />\n            </div>\n          ),\n        }}\n      />\n      <div className={styles.dropDownContainer}>\n        <Select\n          className={styles.dropDown}\n          value={filter}\n          onChange={(e) => {\n            setFilter(e.target.value);\n            filterByTimeAndSection(dir, e.target.value);\n          }}\n        >\n          {['All', ...options].map((item: string, i: number) => (\n            <MenuItem key={item + i} value={item}>\n              {item}\n            </MenuItem>\n          ))}\n        </Select>\n        <Select\n          className={styles.dropDown}\n          value={dir}\n          onChange={(e) => {\n            setDir(e.target.value);\n            filterByTimeAndSection(e.target.value, filter);\n          }}\n        >\n          {['Descending', 'Ascending'].map((item: string) => (\n            <MenuItem key={item} value={item}>\n              {item}\n            </MenuItem>\n          ))}\n        </Select>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NotesList_container__0jBjn\",\"listContainer\":\"NotesList_listContainer__ZRQfm\",\"list\":\"NotesList_list__fdBwB\",\"enter\":\"NotesList_enter__vBJF0\",\"fab\":\"NotesList_fab__GrFA-\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NotesItem_container__lw3At\",\"removeItem\":\"NotesItem_removeItem__Tv6oD\",\"date\":\"NotesItem_date__Fa4cQ\",\"input\":\"NotesItem_input__RALwS\",\"text\":\"NotesItem_text__r0cAd\",\"blurText\":\"NotesItem_blurText__ATRdB\",\"textContainer\":\"NotesItem_textContainer__euD7W\"};","import React, { useContext } from 'react';\nimport styles from './NotesItem.module.css';\nimport { NotesItemProps } from './NotesItemProps';\nimport { Text } from '../../../Text';\nimport { Card } from '@mui/material';\nimport { CIconButton } from '../../../CIconButton';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport { ModalContext } from '../../../ModalContext/ModalContext';\nimport { ConfirmModal } from '../../../ConfirmModal';\n\nexport const NotesItem = ({\n  item,\n  deleteItem,\n  updateNoteBlur,\n}: NotesItemProps) => {\n  const blurText = item.blurred ? styles.blurText : '';\n  const { handleModal } = useContext(ModalContext);\n  const openConfirmModal = () => {\n    handleModal(<ConfirmModal title=\"Sure?\" onNext={deleteItem} />);\n  };\n  return (\n    <div style={{ width: '100%', height: '100%' }}>\n      <Card sx={{ boxShadow: 5 }} className={styles.container}>\n        <div className={styles.removeItem}>\n          <CIconButton\n            placement=\"top\"\n            title={!item.blurred ? 'hide' : 'show'}\n            onClick={(e: any) => {\n              e.stopPropagation();\n              updateNoteBlur();\n            }}\n          >\n            {!item.blurred ? <VisibilityOffIcon /> : <VisibilityIcon />}\n          </CIconButton>\n          <CIconButton\n            placement=\"top\"\n            title={'Delete'}\n            onClick={(e: any) => {\n              e.stopPropagation();\n              openConfirmModal();\n            }}\n          >\n            <CancelIcon color=\"error\" />\n          </CIconButton>\n        </div>\n        <div className={`${styles.textContainer} ${blurText}`}>\n          <Text variant=\"subtitle2\" className={styles.text}>\n            {item.text}\n          </Text>\n        </div>\n        <div className={styles.date}>\n          <Text flexWrap={'wrap'} variant=\"caption\">\n            {item.date}\n          </Text>\n        </div>\n      </Card>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Seperator_container__a-786\",\"title\":\"Seperator_title__m3bIb\",\"separator\":\"Seperator_separator__nbNuj\",\"disabled\":\"Seperator_disabled__AduqM\"};","import React, { useContext, useState } from 'react';\nimport styles from './Seperator.module.css';\nimport { SeperatorProps } from './SeperatorProps';\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\nimport { CIconButton } from '../CIconButton';\nimport { TextField, useTheme } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ConfirmModal } from '../ConfirmModal';\nimport { ModalContext } from '../ModalContext/ModalContext';\n\nexport const Seperator = ({\n  title,\n  changeSectionTitle,\n  deleteSection,\n}: SeperatorProps) => {\n  const theme = useTheme();\n\n  const [text, setText] = useState<string>(title);\n  const [disabled, setDisabled] = useState<boolean>(true);\n  const { handleModal } = useContext(ModalContext);\n  const openConfirmModal = () => {\n    handleModal(\n      <ConfirmModal\n        title={`This Action will delete all from \"${title}\" section`}\n        onNext={deleteSection}\n      />\n    );\n  };\n  return (\n    <div className={styles.container}>\n      <div className={styles.separator}></div>\n      <TextField\n        variant=\"standard\"\n        value={text}\n        sx={{\n          '& .MuiInputBase-input.Mui-disabled': {\n            opacity: 1,\n            WebkitTextFillColor:\n              theme.palette.mode === 'dark' ? 'white' : 'rgba(0, 0, 0, 1)',\n            border: 'none',\n          },\n          '& .MuiInputBase-root.Mui-disabled': {\n            border: 'none',\n            outline: 'none',\n          },\n          input: { textAlign: 'center' },\n        }}\n        InputProps={{\n          disableUnderline: disabled,\n          style: { textAlign: 'center' },\n        }}\n        onChange={(e) => setText(e.target.value)}\n        disabled={disabled}\n      />\n      {disabled ? (\n        <CIconButton placement=\"left\" onClick={() => setDisabled(!disabled)}>\n          <DriveFileRenameOutlineIcon />\n        </CIconButton>\n      ) : (\n        <CIconButton\n          onClick={() => {\n            changeSectionTitle(text);\n            setDisabled(!disabled);\n          }}\n        >\n          <CheckCircleIcon />\n        </CIconButton>\n      )}\n      <CIconButton\n        placement=\"right\"\n        title={'delete'}\n        onClick={() => openConfirmModal()}\n      >\n        <DeleteIcon />\n      </CIconButton>\n      <div className={styles.separator}></div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NoteModal_container__N0beR\",\"input\":\"NoteModal_input__yy5+9\",\"buttons\":\"NoteModal_buttons__-YRfK\",\"endAdornment\":\"NoteModal_endAdornment__MM7N6\"};","import React, { useRef, useState } from 'react';\nimport styles from './NoteModal.module.css';\nimport { NoteModalProps } from './NoteModalProps';\nimport { MultiLineInput } from '../MultiLineInput';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport { CIconButton } from '../CIconButton';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport { InputButtons } from '../DiffChecker/InputButtons';\n\nexport const NoteModal = ({ value, onChange, handleModal }: NoteModalProps) => {\n  const [text, setText] = useState<string>(value);\n\n  const onFinish = () => {\n    onChange(text);\n    handleModal();\n  };\n  const multiLineInputRef = useRef(null);\n\n  return (\n    <div style={{ width: '80vw' }}>\n      <div className={styles.buttons}>\n        <CIconButton\n          placement=\"top\"\n          title={'Cancel'}\n          onClick={() => handleModal()}\n        >\n          <RemoveCircleIcon color=\"error\" />\n        </CIconButton>\n        <CIconButton placement=\"top\" title={'Save'} onClick={onFinish}>\n          <CheckCircleIcon color=\"success\" />\n        </CIconButton>\n      </div>\n      <div className={styles.container}>\n        <MultiLineInput\n          minRows={15}\n          // onKeyDown={handleKeyDown}\n          className={styles.input}\n          value={text}\n          onChange={(e) => setText(e)}\n          inputRef={multiLineInputRef} // Pass the ref\n          InputProps={{\n            endAdornment: (\n              <InputButtons\n                withFile={true}\n                value={text}\n                onChange={setText}\n                editor={true}\n                multiLineInputRef={multiLineInputRef}\n              />\n            ),\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddItem_container__MQ94i\"};","import React from 'react';\nimport styles from './AddItem.module.css';\nimport { AddItemProps } from './AddItemProps';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport const AddItem = ({ onAddItem }: AddItemProps) => {\n  return (\n    <div onClick={() => onAddItem()} className={styles.container}>\n      <AddIcon\n        sx={{\n          width: '80px',\n          height: '80px',\n          border: '2px dashed #90caf9',\n          borderRadius: '16px',\n        }}\n        color=\"primary\"\n      />\n    </div>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useRef } from 'react';\nimport styles from './NotesList.module.css';\nimport { NotesListProps } from './NotesListProps';\nimport { NotesItem } from './NotesItem';\nimport { Seperator } from '../../Seperator';\nimport { ModalContext } from '../../ModalContext/ModalContext';\nimport { NoteModal } from '../../NoteModal';\nimport { ISection } from './helper';\nimport { AddItem } from '../../AddItem';\nimport { v4 as uuid } from 'uuid';\nimport { getTime, getTimeStamp } from '../../../Helpers/Time';\nimport { Fab } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport { scrollTo } from '../../../Helpers/Scroll';\nimport { Description } from '../../Description';\nimport {\n  addNote,\n  addSection,\n  editNote,\n  removeNote,\n  removeSection,\n  renameSection,\n  updateBlur,\n} from '../../../Helpers/FireBase/Notes';\n\nexport const NotesList = ({\n  list,\n  setList,\n  user,\n  setOriginalList,\n}: NotesListProps) => {\n  const { handleModal } = useContext(ModalContext);\n  const listAsArray = Object.entries(list);\n  const newSectionCount = useRef(listAsArray.length);\n  useEffect(() => {\n    newSectionCount.current = listAsArray.length + 1;\n  }, [list, listAsArray.length]);\n  const updateNoteText = useCallback(\n    (sectionIndex: string, noteIndex: string, newText: string) => {\n      setList((prev: ISection) => {\n        const updatedSection = {\n          ...prev[sectionIndex],\n          notes: {\n            ...prev[sectionIndex].notes,\n            [noteIndex]: {\n              ...prev[sectionIndex].notes[noteIndex],\n              text: newText,\n            },\n          },\n        };\n        return {\n          ...prev,\n          [sectionIndex]: updatedSection,\n        };\n      });\n    },\n    [setList]\n  );\n  const updateNoteBlur = useCallback(\n    (sectionIndex: string, noteIndex: string) => {\n      setList((prev: ISection) => {\n        const updatedSection = {\n          ...prev[sectionIndex],\n          notes: {\n            ...prev[sectionIndex].notes,\n            [noteIndex]: {\n              ...prev[sectionIndex].notes[noteIndex],\n              blurred: !prev[sectionIndex].notes[noteIndex].blurred,\n            },\n          },\n        };\n        if (user) {\n          updateBlur(\n            user,\n            sectionIndex,\n            noteIndex,\n            !prev[sectionIndex].notes[noteIndex].blurred\n          );\n        }\n        return {\n          ...prev,\n          [sectionIndex]: updatedSection,\n        };\n      });\n    },\n    [setList]\n  );\n\n  const onClickNote = useCallback(\n    ({ noteId, sectionId }: any) => {\n      handleModal(\n        <NoteModal\n          onChange={(newText: string) => {\n            updateNoteText(sectionId, noteId, newText);\n            editNote(user, sectionId, noteId, newText);\n          }}\n          value={list[sectionId].notes[noteId].text}\n        />\n      );\n    },\n    [handleModal, list, updateNoteText, user]\n  );\n  const deleteSection = (sectionId: string) => {\n    if (user) {\n      removeSection(user, sectionId);\n    }\n    setList((prev: ISection) => {\n      const updatedList = { ...prev };\n      delete updatedList[sectionId];\n      setOriginalList(updatedList);\n      return updatedList;\n    });\n  };\n  const deleteItem = (sectionId: string, noteIndex: string) => {\n    if (user) {\n      removeNote(user, sectionId, noteIndex);\n    }\n    setList((prev: ISection) => {\n      const updatedList = { ...prev };\n      delete updatedList[sectionId].notes[noteIndex];\n      setOriginalList(updatedList);\n      return updatedList;\n    });\n  };\n  const changeSectionTitle = (sectionId: string, newTitle: string) => {\n    if (user) {\n      renameSection(user, newTitle, sectionId);\n    }\n    setList((prev: ISection) => {\n      const updatedSection = {\n        ...prev[sectionId],\n        subject: newTitle,\n      };\n      return {\n        ...prev,\n        [sectionId]: updatedSection,\n      };\n    });\n  };\n\n  const onAddItem = (sectionId: string) => {\n    const noteId = uuid();\n    if (user) {\n      addNote(user, sectionId, {\n        [noteId]: {\n          pinned: false,\n          blurred: false,\n          text: '',\n          date: getTime(),\n          timeStamp: getTimeStamp(),\n        },\n      });\n    }\n    setList((prev: ISection) => {\n      const updatedList = { ...prev };\n      updatedList[sectionId].notes[noteId] = {\n        blurred: false,\n        pinned: false,\n        text: '',\n        date: getTime(),\n        timeStamp: getTimeStamp(),\n      };\n      setOriginalList(updatedList);\n      return updatedList;\n    });\n  };\n  const onAddSection = () => {\n    const id = uuid();\n    if (user) {\n      addSection(user, `Section ${newSectionCount.current}`, id);\n    }\n    setList((prev: ISection) => {\n      const updatedList = {\n        ...prev,\n        [id]: {\n          subject: `Section ${newSectionCount.current}`,\n          notes: {},\n        },\n      };\n      setOriginalList(updatedList);\n      return updatedList;\n    });\n    setTimeout(() => {\n      scrollTo({ id });\n    }, 100);\n    newSectionCount.current++;\n  };\n  return (\n    <div className={styles.listContainer}>\n      {listAsArray.map((section, i) => {\n        return (\n          <div id={section[0]} key={section[0]} style={{ width: '100%' }}>\n            <Seperator\n              deleteSection={() => deleteSection(section[0])}\n              changeSectionTitle={(str: string) =>\n                changeSectionTitle(section[0], str)\n              }\n              title={section[1].subject}\n            />\n            <div className={styles.list}>\n              {Object.entries(section[1].notes).map((note) => (\n                <div\n                  key={note[0]}\n                  onClick={() =>\n                    onClickNote({ noteId: note[0], sectionId: section[0] })\n                  }\n                  className={styles.container}\n                >\n                  <NotesItem\n                    deleteItem={() => deleteItem(section[0], note[0])}\n                    updateNoteBlur={() => updateNoteBlur(section[0], note[0])}\n                    item={note[1]}\n                  />\n                </div>\n              ))}\n              <div className={styles.container}>\n                <AddItem onAddItem={() => onAddItem(section[0])} />\n              </div>\n            </div>\n          </div>\n        );\n      })}\n      <div className={styles.fab}>\n        <Fab color=\"primary\" aria-label=\"add\" onClick={onAddSection}>\n          <Description placement={'top'} title={'Add section'}>\n            <AddIcon />\n          </Description>\n        </Fab>\n      </div>\n    </div>\n  );\n};\n","import { ISection, Inote } from './NotesList/helper';\nimport moment from 'moment';\n\nexport const filterListByQuary = (list: ISection, query: string): ISection => {\n  const filteredList: ISection = {};\n\n  for (const sectionId in list) {\n    const section = list[sectionId];\n    const filteredNotes: Inote = {};\n\n    for (const noteId in section.notes) {\n      const note = section.notes[noteId];\n      const { text } = note;\n\n      if (text.toLowerCase().includes(query.toLowerCase())) {\n        filteredNotes[noteId] = note;\n      }\n    }\n\n    if (Object.keys(filteredNotes).length > 0) {\n      filteredList[sectionId] = {\n        subject: section.subject,\n        notes: filteredNotes,\n      };\n    }\n  }\n\n  if (Object.keys(filteredList).length > 0) {\n    return filteredList;\n  } else {\n    return list;\n  }\n};\n\nexport const filterListByTime = (list: ISection, str: string): ISection => {\n  const filteredList: ISection = {};\n\n  for (const sectionId in list) {\n    const section = list[sectionId];\n    const filteredNotes: Inote = {};\n    const notesArray = Object.entries(section.notes);\n    const sortedNotesArray = notesArray.sort((a, b) => {\n      const timestampA = moment(a[1].timeStamp);\n      const timestampB = moment(b[1].timeStamp);\n\n      if (str === 'Ascending') {\n        return timestampA.isBefore(timestampB) ? -1 : 1;\n      } else {\n        return timestampB.isBefore(timestampA) ? -1 : 1;\n      }\n    });\n    sortedNotesArray.forEach(([noteId, note]) => {\n      filteredNotes[noteId] = note;\n    });\n    if (Object.keys(filteredNotes).length > 0) {\n      filteredList[sectionId] = {\n        subject: section.subject,\n        notes: filteredNotes,\n      };\n    }\n  }\n\n  return filteredList;\n};\n\nexport const filterListBySections = (list: ISection, str: string) => {\n  for (const key in list) {\n    if (list[key].subject === str) {\n      return { [key]: list[key] };\n    }\n  }\n  return list;\n};\n\nexport const filterListByTimeAndSection = (\n  list: ISection,\n  dir: 'descending' | 'ascending',\n  sectionName: string\n): ISection => {\n  const filteredList = filterListByTime(list, dir);\n  const finalList = filterListBySections(filteredList, sectionName);\n\n  return finalList;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RefreshControl_container__XGHGF\",\"refreshIndicator\":\"RefreshControl_refreshIndicator__LajU2\",\"showLoader\":\"RefreshControl_showLoader__iH13Q\"};","import React, { useRef } from 'react';\nimport styles from './RefreshControl.module.css';\nimport { RefreshControlProps } from './RefreshControlProps';\nimport { usePullToRefresh } from '../../Hooks/usePullToRefresh';\nimport { CircularProgress } from '@mui/material';\n\nexport const PullToRefreshWrapper = ({\n  onRefresh,\n  children,\n}: RefreshControlProps) => {\n  const divRef = useRef(null);\n  const isRefreshing = usePullToRefresh(divRef, onRefresh);\n\n  return (\n    <div className={styles.refreshWrapper}>\n      <div ref={divRef} className={styles.container}>\n        <div\n          className={`${styles.refreshIndicator} ${\n            isRefreshing ? styles.showLoader : ''\n          }`}\n        >\n          <CircularProgress />\n        </div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useMemo, useRef } from 'react';\nimport styles from './Notes.module.css';\nimport { Text } from '../Text';\nimport { SearchBar } from '../SearchBar';\nimport { NotesList } from './NotesList';\nimport { filterListByQuary, filterListByTimeAndSection } from './helper';\nimport { NotesContext } from '../../Context/NotesContext/NotesContext';\nimport { PullToRefreshWrapper } from '../RefreshControl';\n\nconst Notes = () => {\n  const {\n    filteredList,\n    list,\n    quary,\n    setFilteredList,\n    setList,\n    setQuary,\n    user,\n    getAll\n  } = useContext(NotesContext);\n\n  const sectionArray = useMemo(\n    () => Object.entries(list).map((item) => item[1].subject),\n    [list]\n  );\n  const filterByTimeAndSection = (\n    dir: 'descending' | 'ascending',\n    sectionName: string\n  ) => {\n    if (sectionName === 'All')\n      return setFilteredList(\n        filterListByTimeAndSection(list, dir, sectionName)\n      );\n    setFilteredList(filterListByTimeAndSection(list, dir, sectionName));\n  };\n\n  const filterByQuary = (str: string) => {\n    setQuary(str);\n    if (!str) {\n      return setFilteredList(list);\n    }\n    setFilteredList(filterListByQuary(filteredList, str));\n  };\n\n  const handleRefresh = () => {\n    // Perform the refresh action, e.g., fetch new data\n    return new Promise<void>((resolve) => {\n      setTimeout(() => {\n        console.log('Refreshed!');\n        resolve();\n      }, 2000);\n    });\n  };\n\n  return (\n    <div className={styles.container}>\n      <div>\n        <Text\n          style={{ alignSelf: 'center', textAlign: 'center' }}\n          padding={'25px'}\n          variant=\"h6\"\n        >\n          Notes\n          <div className={styles.separator} />\n        </Text>\n      </div>\n      <Text\n        style={{ alignSelf: 'center', textAlign: 'center', paddingBottom: 25 }}\n        variant=\"subtitle2\"\n      >\n        {!user?.email\n          ? 'Log In with your Google Account to save your progress'\n          : `Logged in as ${user?.email}`}\n      </Text>\n      <div className={styles.content}>\n        <SearchBar\n          value={quary}\n          onChange={filterByQuary}\n          options={sectionArray}\n          filterByTimeAndSection={filterByTimeAndSection}\n        />\n        <PullToRefreshWrapper onRefresh={getAll}>\n          <NotesList\n            user={user?.email}\n            list={filteredList}\n            setList={setFilteredList}\n            setOriginalList={setList}\n          />\n        </PullToRefreshWrapper>\n      </div>\n    </div>\n  );\n};\nexport default Notes;\n","export const handlePaste = (setValue: (t: string) => void) => {\n  navigator.clipboard.readText().then((text = \"\") => {\n\n    setValue(text)\n  });\n};\nexport const handleCopy = (t: string) => {\n  navigator.clipboard\n    .writeText(t)\n    .then(() => {\n      console.log('Text copied to clipboard');\n    })\n    .catch((err) => {\n      console.error('Error copying text to clipboard:', err);\n    });\n};\nexport const handleFile = (\n  e: { target: { files: any } },\n  onChange: (t: any) => void\n) => {\n  const file = e.target.files?.[0];\n\n  if (file.type === 'application/json' || file.type === 'text/plain') {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result;\n      onChange(content);\n    };\n    reader.readAsText(file);\n  } else {\n    alert('Invalid file type. Only JSON and TXT files are supported.');\n    return;\n  }\n};\n","import { IScrollTo } from './Types';\nimport './scrollCss.css';\nexport const scrollTo = ({\n  id,\n  behavior = 'smooth',\n  block = 'start',\n  withHighlight = false,\n}: IScrollTo) => {\n  const element = document.getElementById(id);\n  if (element) {\n    element.scrollIntoView({ behavior, block });\n    if (withHighlight) {\n      element.classList.add('custom-highlighted-class');\n      setTimeout(() => {\n        element && element.classList.remove('custom-highlighted-class');\n      }, 3000);\n    }\n  } else {\n  }\n};\n","export const getTime = () => {\n  const timestamp = Date.now();\n  const date = new Date(timestamp);\n\n  const dateString = date.toLocaleDateString('he-IL', {\n    day: '2-digit',\n    month: '2-digit',\n    year: '2-digit',\n  });\n\n  const timeString = date.toLocaleTimeString('he-IL', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `${timeString} ${dateString} `;\n};\n\nexport const getTimeStamp = () => {\n  const timestamp = Date.now();\n\n  return timestamp;\n};\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nconst TRIGGER_THRESHOLD = 100;\r\nconst SHOW_INDICATOR_THRESHOLD = 50;\r\nconst RESET_TRANSITION_DURATION = 0.3; // Duration for the reset transition in seconds\r\n\r\nconst MAX = 128;\r\nconst k = 0.4;\r\n\r\nfunction appr(x: number) {\r\n  return MAX * (1 - Math.exp((-k * x) / MAX));\r\n}\r\n\r\nexport function usePullToRefresh(\r\n  ref: React.RefObject<HTMLDivElement>,\r\n  onTrigger: () => Promise<void>\r\n): boolean {\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const el = ref.current;\r\n    if (!el) return;\r\n\r\n    el.addEventListener('touchstart', handleTouchStart);\r\n\r\n    function handleTouchStart(startEvent: TouchEvent) {\r\n      if (!el) return;\r\n\r\n      const initialY = startEvent.touches[0].clientY;\r\n\r\n      el.addEventListener('touchmove', handleTouchMove);\r\n      el.addEventListener('touchend', handleTouchEnd);\r\n\r\n      async function handleTouchMove(moveEvent: TouchEvent) {\r\n        if (!el) return;\r\n\r\n        const currentY = moveEvent.touches[0].clientY;\r\n        const dy = currentY - initialY;\r\n\r\n        if (dy < 0) return;\r\n\r\n        el.style.transform = `translateY(${appr(dy)}px)`;\r\n\r\n        if (dy > TRIGGER_THRESHOLD) {\r\n          setIsRefreshing(true);\r\n        } else {\r\n          setIsRefreshing(false);\r\n        }\r\n      }\r\n\r\n      async function handleTouchEnd(endEvent: TouchEvent) {\r\n        if (!el) return;\r\n\r\n        el.style.transition = `transform ${RESET_TRANSITION_DURATION}s ease-in-out`;\r\n        el.style.transform = 'translateY(0)';\r\n\r\n        const y = endEvent.changedTouches[0].clientY;\r\n        const dy = y - initialY;\r\n\r\n        if (dy > TRIGGER_THRESHOLD) {\r\n          try {\r\n            await onTrigger();\r\n          } catch (error) {\r\n            console.error('Error during refresh:', error);\r\n          } finally {\r\n            setIsRefreshing(false);\r\n            el.style.transition = ''; // Remove the transition after the reset\r\n          }\r\n        }\r\n\r\n        el.addEventListener('transitionend', onTransitionEnd);\r\n\r\n        el.removeEventListener('touchmove', handleTouchMove);\r\n        el.removeEventListener('touchend', handleTouchEnd);\r\n      }\r\n\r\n      function onTransitionEnd() {\r\n        if (!el) return;\r\n        el.style.transition = '';\r\n        el.removeEventListener('transitionend', onTransitionEnd);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      el.removeEventListener('touchstart', handleTouchStart);\r\n    };\r\n  }, [ref.current, onTrigger]);\r\n\r\n  return isRefreshing;\r\n}\r\n"],"names":["ConfirmModal","_ref","title","handleModal","onNext","handlerWrapper","cb","_jsxs","className","styles","children","Text","variant","_jsx","Button","onClick","InputPropsEditor","multiLineInputRef","_Fragment","CIconButton","handleAlignRightClick","current","style","textAlign","FormatAlignRightIcon","handleAlignLeftClick","FormatAlignLeftIcon","handleAlignCenterClick","FormatAlignCenterIcon","InputButtons","onChange","value","type","withFile","editor","InputAdornment","position","placement","handleCopy","ContentCopyIcon","handlePaste","ContentPasteIcon","DeleteIcon","IconButton","accept","id","concat","e","handleFile","display","htmlFor","Description","SearchBar","options","filterByTimeAndSection","filter","setFilter","useState","dir","setDir","TextField","label","fullWidth","target","InputProps","startAdornment","SearchIcon","endAdornment","ClearIcon","Select","map","item","i","MenuItem","NotesItem","deleteItem","updateNoteBlur","blurText","blurred","useContext","ModalContext","width","height","Card","sx","boxShadow","stopPropagation","VisibilityIcon","VisibilityOffIcon","CancelIcon","color","text","flexWrap","date","Seperator","changeSectionTitle","deleteSection","theme","useTheme","setText","disabled","setDisabled","opacity","WebkitTextFillColor","palette","mode","border","outline","input","disableUnderline","DriveFileRenameOutlineIcon","CheckCircleIcon","NoteModal","useRef","RemoveCircleIcon","onFinish","MultiLineInput","minRows","inputRef","AddItem","onAddItem","AddIcon","borderRadius","NotesList","list","setList","user","setOriginalList","listAsArray","Object","entries","newSectionCount","length","useEffect","updateNoteText","useCallback","sectionIndex","noteIndex","newText","prev","updatedSection","notes","updateBlur","onClickNote","_ref2","noteId","sectionId","editNote","section","removeSection","updatedList","str","newTitle","renameSection","subject","note","removeNote","uuid","addNote","pinned","getTime","timeStamp","getTimeStamp","Fab","onAddSection","addSection","setTimeout","scrollTo","filterListByTimeAndSection","sectionName","filteredList","filterListByTime","filteredNotes","sort","a","b","timestampA","moment","timestampB","isBefore","forEach","keys","finalList","filterListBySections","key","PullToRefreshWrapper","onRefresh","divRef","isRefreshing","usePullToRefresh","refreshWrapper","ref","container","refreshIndicator","showLoader","CircularProgress","Notes","quary","setFilteredList","setQuary","getAll","NotesContext","sectionArray","useMemo","alignSelf","padding","paddingBottom","email","filterListByQuary","query","toLowerCase","includes","setValue","navigator","clipboard","readText","then","arguments","undefined","t","writeText","console","log","catch","err","error","_e$target$files","file","files","reader","FileReader","onload","_e$target","content","result","readAsText","alert","behavior","block","withHighlight","element","document","getElementById","scrollIntoView","classList","add","remove","timestamp","Date","now","dateString","toLocaleDateString","day","month","year","timeString","toLocaleTimeString","hour","minute","TRIGGER_THRESHOLD","RESET_TRANSITION_DURATION","MAX","k","onTrigger","setIsRefreshing","el","addEventListener","handleTouchStart","removeEventListener","startEvent","initialY","touches","clientY","async","handleTouchMove","moveEvent","dy","x","transform","Math","exp","onTransitionEnd","transition","handleTouchEnd","endEvent","y","changedTouches"],"sourceRoot":""}